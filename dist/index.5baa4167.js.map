{"mappings":"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EACA;oEACA;+DACA;mEACA;0DACA;iEACA;8DACA;4DACA;yDACA;4DACA;4DACA;2DACA;mEACA;gEACA;8DACA;kDACA;qDACA;yDACA;2DACA;6DACA;8DACA;sDACA;uDACA;uDACA;qDACA;yDACA;0DACA;2DACA;qDACA;uDACA;oDACA;4DACA;6DACA;kDACA;gDACA;yDACA;uDACA;iDACA;2DACA;mDACA;kDACA;6DACA;6DACA;yDACA;0DACA;wDACA;6DACA;gEACA;qDACA;wDACA;2DACA;uDACA;4DACA;iEACA;0DACA;8DACA;0DACA;0DACA;gEACA;wDACA;sDACA;iEACA;6DACA;mEACA;qEACA;wDACA;2DACA;2DACA;uDACA;8DACA;qDACA;mDACA;6DACA;iEACA;0DACA;8DACA;gEACA;gEACA;8DACA;kDACA;6EACA;oEACA;0DACA;4DACA;iEACA;gEACA;oEACA;4DACA;2DACA;mEACA;gEACA;yDACA;0DACA;+DACA;gEACA;0DACA;6DACA;4DACA;yDACA;sDACA;4DACA;gDACA;oDACA;8DACA;mDACA;iDACA;uDACA;gEACA;gDACA;qEACA;2DACA;uDACA;4DACA;yDACA;iEACA;yDAEA;8DACA;uDACA;gEACA;+DACA;6DACA;qDACA;6DACA;6DACA;+DACA;4DACA;8DACA;gEACA;6DACA;gEACA;oEACA;+DACA;oEACA;wDACA;AA9IJ,IAAI,sBAAsB;AAC1B,IAAI,2BAA2B;AAC/B,IAAI,wCAAwC;AAC5C,IAAI,gBAAgB;AACpB,IAAI,qBAAqB;AACzB,IAAI,yBAAyB;AAC7B,IAAI,yBAAyB;AAC7B,IAAI,8BAA8B;AAClC,IAAI,8BAA8B;AAClC,IAAI,iCAAiC;AACrC,IAAI,4BAA4B;AAChC,IAAI,gCAAgC;AACpC,IAAI,uBAAuB;AAC3B,IAAI,8BAA8B;AAClC,IAAI,2BAA2B;AAC/B,IAAI,yBAAyB;AAC7B,IAAI,sBAAsB;AAC1B,IAAI,yBAAyB;AAC7B,IAAI,yBAAyB;AAC7B,IAAI,wBAAwB;AAC5B,IAAI,gCAAgC;AACpC,IAAI,6BAA6B;A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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-dd89705d39573a23.js","app.js","node_modules/@splitsoftware/browser-suite/esm/index.js","node_modules/@splitsoftware/browser-suite/esm/browserSuite.js","node_modules/@splitsoftware/splitio-commons/esm/utils/lang/objectAssign.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@splitsoftware/splitio-commons/esm/utils/lang/sets.js","node_modules/@splitsoftware/splitio-commons/esm/utils/constants/index.js","node_modules/@splitsoftware/browser-rum-agent/esm/index.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/config.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/queue.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/context.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/constants.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/transport.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/assign.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/isObject.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/validateEvent.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/isBoolean.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/isNumber.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/isString.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/isArray.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/log.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/whenLoaded.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/validateIdentity.js","node_modules/@splitsoftware/browser-rum-agent/esm/metrics/errors.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/getErrorData.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/isError.js","node_modules/@splitsoftware/browser-rum-agent/esm/metrics/navigation/index.js","node_modules/@splitsoftware/browser-rum-agent/esm/metrics/navigation/ttdi.js","node_modules/@splitsoftware/browser-rum-agent/esm/metrics/navigation/simpleMetricFactory.js","node_modules/@splitsoftware/browser-rum-agent/esm/utils/getNavEntry.js","node_modules/@splitsoftware/browser-rum-agent/esm/metrics/navigation/plt.js","node_modules/@splitsoftware/browser-rum-agent/esm/metrics/webVitals/index.js","node_modules/web-vitals/dist/web-vitals.js","node_modules/@splitsoftware/splitio-browserjs/esm/full/index.js","node_modules/@splitsoftware/splitio-browserjs/esm/full/splitFactory.js","node_modules/@splitsoftware/splitio-browserjs/esm/settings/full.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/lang/index.js","node_modules/tslib/tslib.es6.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/mode.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/splitFilters.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/splits.js","node_modules/@splitsoftware/splitio-commons/esm/logger/constants.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/split.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/impressionsMode.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/key.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/trafficType.js","node_modules/@splitsoftware/splitio-browserjs/esm/settings/defaults.js","node_modules/@splitsoftware/splitio-commons/esm/logger/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/lang/maps.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/runtime.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/storage/storageCS.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inMemory/InMemoryStorageCS.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inMemory/SplitsCacheInMemory.js","node_modules/@splitsoftware/splitio-commons/esm/storages/AbstractSplitsCacheSync.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inMemory/MySegmentsCacheInMemory.js","node_modules/@splitsoftware/splitio-commons/esm/storages/AbstractSegmentsCacheSync.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inMemory/ImpressionsCacheInMemory.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inMemory/EventsCacheInMemory.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inMemory/ImpressionCountsCacheInMemory.js","node_modules/@splitsoftware/splitio-commons/esm/utils/time/index.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inRedis/constants.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inMemory/TelemetryCacheInMemory.js","node_modules/@splitsoftware/splitio-commons/esm/storages/findLatencyIndex.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inMemory/UniqueKeysCacheInMemoryCS.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/integrations/pluggable.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/integrations/common.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/logger/pluggableLogger.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/logger/commons.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/localhost/builtin.js","node_modules/@splitsoftware/splitio-commons/esm/sync/offline/LocalhostFromObject.js","node_modules/@splitsoftware/splitio-commons/esm/sync/offline/splitsParser/splitsParserFromSettings.js","node_modules/@splitsoftware/splitio-commons/esm/sync/offline/splitsParser/parseCondition.js","node_modules/@splitsoftware/splitio-commons/esm/sync/offline/syncManagerOffline.js","node_modules/@splitsoftware/splitio-commons/esm/sync/offline/syncTasks/fromObjectSyncTask.js","node_modules/@splitsoftware/splitio-commons/esm/sync/syncTask.js","node_modules/@splitsoftware/splitio-commons/esm/readiness/constants.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/localhost/pluggable.js","node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/consent.js","node_modules/@splitsoftware/splitio-browserjs/esm/platform/getModules.js","node_modules/@splitsoftware/splitio-commons/esm/services/splitApi.js","node_modules/@splitsoftware/splitio-commons/esm/services/splitHttpClient.js","node_modules/@splitsoftware/splitio-commons/esm/sync/syncManagerOnline.js","node_modules/@splitsoftware/splitio-commons/esm/sync/submitters/submitterManager.js","node_modules/@splitsoftware/splitio-commons/esm/sync/submitters/eventsSubmitter.js","node_modules/@splitsoftware/splitio-commons/esm/sync/submitters/submitter.js","node_modules/@splitsoftware/splitio-commons/esm/sync/submitters/impressionsSubmitter.js","node_modules/@splitsoftware/splitio-commons/esm/sync/submitters/impressionCountsSubmitter.js","node_modules/@splitsoftware/splitio-commons/esm/sync/submitters/telemetrySubmitter.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/apiKey.js","node_modules/@splitsoftware/splitio-commons/esm/utils/timeTracker/timer.js","node_modules/@splitsoftware/splitio-commons/esm/sync/submitters/uniqueKeysSubmitter.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/constants.js","node_modules/@splitsoftware/splitio-commons/esm/consent/index.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/pushManager.js","node_modules/@splitsoftware/splitio-commons/esm/utils/Backoff.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/SSEHandler/index.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/SSEHandler/NotificationParser.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/SSEHandler/NotificationKeeper.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/UpdateWorkers/MySegmentsUpdateWorker.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/UpdateWorkers/SegmentsUpdateWorker.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/UpdateWorkers/constants.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/UpdateWorkers/SplitsUpdateWorker.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/AuthClient/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/base64/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/jwt/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/murmur3/murmur3.js","node_modules/@splitsoftware/splitio-commons/esm/utils/murmur3/common.js","node_modules/@splitsoftware/splitio-commons/esm/utils/murmur3/utfx.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/SSEClient/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/key/index.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/SSEHandler/types.js","node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/parseUtils.js","node_modules/@splitsoftware/splitio-commons/esm/utils/decompress/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/murmur3/murmur3_64.js","node_modules/@splitsoftware/splitio-commons/esm/utils/murmur3/murmur3_128.js","node_modules/@splitsoftware/splitio-commons/esm/sync/polling/pollingManagerCS.js","node_modules/@splitsoftware/splitio-commons/esm/sync/polling/syncTasks/mySegmentsSyncTask.js","node_modules/@splitsoftware/splitio-commons/esm/sync/polling/fetchers/mySegmentsFetcher.js","node_modules/@splitsoftware/splitio-commons/esm/sync/polling/updaters/mySegmentsUpdater.js","node_modules/@splitsoftware/splitio-commons/esm/utils/promise/timeout.js","node_modules/@splitsoftware/splitio-commons/esm/sync/polling/syncTasks/splitsSyncTask.js","node_modules/@splitsoftware/splitio-commons/esm/sync/polling/fetchers/splitChangesFetcher.js","node_modules/@splitsoftware/splitio-commons/esm/sync/polling/updaters/splitChangesUpdater.js","node_modules/@splitsoftware/splitio-commons/esm/sdkManager/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/promise/thenable.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/attributes.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/attribute.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/event.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/eventValue.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/eventProperties.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/isOperational.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/splitExistence.js","node_modules/@splitsoftware/splitio-commons/esm/utils/labels/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/trafficTypeExistence.js","node_modules/@splitsoftware/splitio-commons/esm/sdkClient/sdkClientMethodCS.js","node_modules/@splitsoftware/splitio-commons/esm/sdkClient/clientCS.js","node_modules/@splitsoftware/splitio-commons/esm/sdkClient/clientAttributesDecoration.js","node_modules/@splitsoftware/splitio-commons/esm/storages/inMemory/AttributesCacheInMemory.js","node_modules/@splitsoftware/splitio-commons/esm/sdkClient/sdkClient.js","node_modules/@splitsoftware/splitio-commons/esm/sdkClient/client.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/index.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/Engine.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/parser/index.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchersTransform/index.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/matcherTypes.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchersTransform/segment.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchersTransform/whitelist.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchersTransform/set.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchersTransform/unaryNumeric.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/convertions/index.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/treatments/index.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/index.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/all.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/segment.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/whitelist.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/eq.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/gte.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/lte.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/between.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/eq_set.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/cont_any.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/cont_all.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/part_of.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/ew.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/sw.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/cont_str.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/dependency.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/boolean.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/string.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/value/index.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/value/sanitize.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/condition/index.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/condition/engineUtils.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/combiners/ifelseif.js","node_modules/@splitsoftware/splitio-commons/esm/evaluator/combiners/and.js","node_modules/@splitsoftware/splitio-commons/esm/sdkClient/clientInputValidation.js","node_modules/@splitsoftware/splitio-commons/esm/listeners/browser.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/impressionObserver/impressionObserverCS.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/impressionObserver/ImpressionObserver.js","node_modules/@splitsoftware/splitio-commons/esm/utils/LRUCache/index.js","node_modules/@splitsoftware/splitio-commons/esm/utils/LRUCache/LinkedList.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/impressionObserver/buildKey.js","node_modules/@splitsoftware/splitio-commons/esm/integrations/pluggable.js","node_modules/@splitsoftware/splitio-commons/esm/consent/sdkUserConsent.js","node_modules/@splitsoftware/splitio-commons/esm/sdkFactory/index.js","node_modules/@splitsoftware/splitio-commons/esm/readiness/sdkReadinessManager.js","node_modules/@splitsoftware/splitio-commons/esm/utils/promise/wrapper.js","node_modules/@splitsoftware/splitio-commons/esm/readiness/readinessManager.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/impressionsTracker.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/eventTracker.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/telemetryTracker.js","node_modules/@splitsoftware/splitio-commons/esm/logger/sdkLogger.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/strategy/strategyDebug.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/strategy/strategyOptimized.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/strategy/strategyNone.js","node_modules/@splitsoftware/splitio-commons/esm/trackers/uniqueKeysTracker.js","node_modules/@splitsoftware/splitio-browserjs/esm/platform/getFetchFull.js","node_modules/unfetch/dist/unfetch.module.js","node_modules/unfetch/src/index.mjs","node_modules/@splitsoftware/splitio-browserjs/esm/platform/getEventSource.js","node_modules/@splitsoftware/splitio-commons/esm/utils/MinEvents.js","node_modules/@splitsoftware/splitio-commons/esm/utils/timeTracker/now/browser.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"138b6a135baa4167\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { SplitSuite } from \"@splitsoftware/browser-suite\";\n\nconst authorizationKey = \"m5mc91m6jcjknch5dvhdse8s5ae6lulr3eha\";\nconst anonKey = \"anon_\" + Math.floor(Math.random() * 1000);\nconst flagName = \"test_flag\";\n\nlet refreshEnabled = false;\n\n\n// Instantiate the SDK\nvar suite = SplitSuite({\n  core: {\n    authorizationKey: authorizationKey,\n    // key represents your internal user id, or the account id that\n    // the user belongs to.\n    // This could also be a cookie you generate for anonymous users\n    key: anonKey,\n    trafficType: \"anonymous\",\n  },\n});\n\n// And get the client instance you'll use\nvar client = suite.client();\n\n\nconsole.log(anonKey);\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Create and insert the app's HTML structure\n  const appHTML = `\n  <div class=\"container mt-5\">\n  <h1 class=\"text-center mb-4\">Simple To-Do List</h1>\n  <div class=\"input-group mb-3\">\n      <input type=\"text\" id=\"new-task-input\" class=\"form-control\" placeholder=\"Add a new task\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">\n      <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"add-task-btn\">Add Task</button>\n      </div>\n  </div>\n  <ul id=\"tasks-list\" class=\"list-group\"></ul>\n</div>\n  `;\n  client.on(client.Event.SDK_READY, function () {\n    let treatment = client.getTreatment(flagName);\n    console.log(treatment);\n    if (treatment === \"on\") {\n      setTimeout(function () {\n        document.body.innerHTML = appHTML;\n        createTaskManagementLogic();\n      }, 1500);\n    } else {\n      document.body.innerHTML = appHTML;\n      createTaskManagementLogic();\n    }\n    checkRefresh(client)       \n    });\n\n    client.on(client.Event.SDK_UPDATE, function () {\n      console.log('got update')\n      checkRefresh(client)\n    });\n  });\n\n\n\n\nfunction checkRefresh(client) {\n  let treatment = client.getTreatment(\"refresh\");\n\n  if (treatment === \"on\") {\n    setInterval(function () {\n      location.reload();\n    }, 3000);\n  }\n\n}\n\n\n\nfunction createTaskManagementLogic() {\n  // Task management logic\n  const addButton = document.getElementById(\"add-task-btn\");\n  const inputField = document.getElementById(\"new-task-input\");\n  const tasksList = document.getElementById(\"tasks-list\");\n\n  addButton.addEventListener(\"click\", () => {\n    const taskText = inputField.value.trim();\n    if (taskText) {\n      const listItem = document.createElement(\"li\");\n      listItem.innerHTML = `\n      <span class=\"task-content\">${taskText}</span>\n      <button class=\"delete-task-btn btn btn-danger btn-sm float-right\">Delete</button>\n     `;\n      listItem.classList.add(\n        \"list-group-item\",\n        \"d-flex\",\n        \"justify-content-between\",\n        \"align-items-center\"\n      );\n      tasksList.appendChild(listItem);\n      inputField.value = \"\"; // Clear input field\n\n      // Add event listener to the delete button\n      listItem\n        .querySelector(\".delete-task-btn\")\n        .addEventListener(\"click\", () => {\n          tasksList.removeChild(listItem);\n        });\n    }\n  });\n}\n\n\n\n\n\n\n\n","export { SplitSuite } from './browserSuite';\nexport { InLocalStorage } from '@splitsoftware/splitio-browserjs';\nexport { ErrorLogger } from '@splitsoftware/splitio-browserjs';\nexport { WarnLogger } from '@splitsoftware/splitio-browserjs';\nexport { InfoLogger } from '@splitsoftware/splitio-browserjs';\nexport { DebugLogger } from '@splitsoftware/splitio-browserjs';\nexport { SplitRumAgent, routeChanges, tti } from '@splitsoftware/browser-rum-agent';\n","import { objectAssign } from '@splitsoftware/splitio-commons/esm/utils/lang/objectAssign';\nimport { _Set, setToArray } from '@splitsoftware/splitio-commons/esm/utils/lang/sets';\nimport { STANDALONE_MODE } from '@splitsoftware/splitio-commons/esm/utils/constants';\nimport { SplitRumAgent, webVitals } from '@splitsoftware/browser-rum-agent';\nimport { SplitFactory } from '@splitsoftware/splitio-browserjs/full';\nvar DEFAULT_TRAFFIC_TYPE = 'user';\n// @TODO remove eventually when RUM Agent registers web vitals by default\nvar registerWebVitals = true;\n/**\n * Split Suite for Browsers.\n *\n * @param config configuration object used to instantiate the Suite\n * @param __updateModules optional function that lets redefine internal SDK modules. Use with\n * caution since, unlike `config`, this param is not validated neither considered part of the public API.\n * @throws Will throw an error if the provided config is invalid.\n */\nexport function SplitSuite(config, __updateModules) {\n    // @ts-expect-error passing a non-public param\n    var sdk = SplitFactory(config, __updateModules);\n    var settings = sdk.settings;\n    var clients = new _Set();\n    // Override UserConsent.setStatus to update RUM Agent consent\n    var originalSetStatus = sdk.UserConsent.setStatus;\n    sdk.UserConsent.setStatus = function (newStatus) {\n        SplitRumAgent.setUserConsent(newStatus);\n        return originalSetStatus.apply(this, arguments);\n    };\n    // Create Suite instance extending SDK\n    var suite = objectAssign({}, sdk, {\n        client: function () {\n            var client = sdk.client.apply(sdk, arguments);\n            if (!clients.has(client)) {\n                clients.add(client);\n                var identity_1 = {\n                    key: client.key,\n                    // For main client, use trafficType from settings. For shared clients, use second argument. If not provided, use default.\n                    trafficType: (arguments[0] ? arguments[1] : settings.core.trafficType) || DEFAULT_TRAFFIC_TYPE\n                };\n                SplitRumAgent.addIdentity(identity_1);\n                // override client.destroy to remove identity from RUM Agent\n                var originalDestroy_1 = client.destroy;\n                client.destroy = function () {\n                    SplitRumAgent.removeIdentity(identity_1);\n                    return originalDestroy_1.apply(client, arguments);\n                };\n            }\n            return client;\n        },\n        rumAgent: function () {\n            return SplitRumAgent;\n        },\n        destroy: function () {\n            return Promise.all(setToArray(clients).map(function (client) { return client.destroy(); }));\n        }\n    });\n    // Setup the RUM Agent only in standalone mode\n    if (settings.mode === STANDALONE_MODE) {\n        if (registerWebVitals) {\n            SplitRumAgent.register(webVitals());\n            registerWebVitals = false;\n        }\n        var agentConfig = SplitRumAgent.__getConfig();\n        if (agentConfig.a && agentConfig.a !== settings.core.authorizationKey) {\n            settings.log.warn('RUM Agent already setup. The new Suite instance will reset the RUM Agent configuration.');\n            SplitRumAgent.removeIdentities(); // reset identities for new SDK key\n        }\n        agentConfig.log = settings.log;\n        SplitRumAgent.setup(settings.core.authorizationKey, objectAssign({\n            url: settings.urls.events,\n            userConsent: settings.userConsent\n        }, settings.rumAgent));\n    }\n    return suite;\n}\n","/*\nAdaptation of \"object-assign\" library (https://www.npmjs.com/package/object-assign)\nexported as an ES module instead of CommonJS, to avoid extra configuration steps when using\nthe ESM build of the SDK with tools that doesn't support CommonJS by default (e.g. Rollup).\n\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n/* eslint-disable */\n// @ts-nocheck\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\nfunction toObject(val) {\n    if (val === null || val === undefined) {\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n    return Object(val);\n}\nfunction shouldUseNative() {\n    try {\n        if (!Object.assign) {\n            return false;\n        }\n        // Detect buggy property enumeration order in older V8 versions.\n        // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n        var test1 = new String('abc');\n        test1[5] = 'de';\n        if (Object.getOwnPropertyNames(test1)[0] === '5') {\n            return false;\n        }\n        // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n        var test2 = {};\n        for (var i = 0; i < 10; i++) {\n            test2['_' + String.fromCharCode(i)] = i;\n        }\n        var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n            return test2[n];\n        });\n        if (order2.join('') !== '0123456789') {\n            return false;\n        }\n        // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n        var test3 = {};\n        'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n            test3[letter] = letter;\n        });\n        if (Object.keys(Object.assign({}, test3)).join('') !==\n            'abcdefghijklmnopqrst') {\n            return false;\n        }\n        return true;\n    }\n    catch (err) {\n        // We don't expect any of the above to throw, but better to be safe.\n        return false;\n    }\n}\nexport var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n    for (var s = 1; s < arguments.length; s++) {\n        from = Object(arguments[s]);\n        // eslint-disable-next-line no-restricted-syntax\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                to[key] = from[key];\n            }\n        }\n        if (getOwnPropertySymbols) {\n            symbols = getOwnPropertySymbols(from);\n            for (var i = 0; i < symbols.length; i++) {\n                if (propIsEnumerable.call(from, symbols[i])) {\n                    to[symbols[i]] = from[symbols[i]];\n                }\n            }\n        }\n    }\n    return to;\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * Set implementation based on es6-set polyfill (https://github.com/medikoo/es6-set/blob/master/polyfill.js),\n * with the minimal features used by the SDK.\n\nCopyright (C) 2013 Mariusz Nowak (www.medikoo.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n**/\nvar SetPoly = /** @class */ (function () {\n    // unlike ES6 `Set`, it only accepts an array as first argument iterable\n    function SetPoly(values) {\n        var _this = this;\n        this.__setData__ = [];\n        if (Array.isArray(values))\n            values.forEach(function (value) { _this.add(value); });\n    }\n    SetPoly.prototype.clear = function () {\n        if (!this.__setData__.length)\n            return;\n        this.__setData__.length = 0;\n    };\n    SetPoly.prototype.add = function (value) {\n        if (this.has(value))\n            return this;\n        this.__setData__.push(value);\n        return this;\n    };\n    SetPoly.prototype.delete = function (value) {\n        var index = this.__setData__.indexOf(value);\n        if (index === -1)\n            return false;\n        this.__setData__.splice(index, 1);\n        return true;\n    };\n    SetPoly.prototype.has = function (value) {\n        return this.__setData__.indexOf(value) !== -1;\n    };\n    SetPoly.prototype.forEach = function (callbackfn, thisArg) {\n        if (typeof callbackfn !== 'function')\n            throw new TypeError(callbackfn + ' is not a function');\n        for (var i = 0; i < this.__setData__.length; i++) {\n            var value = this.__setData__[i];\n            callbackfn.call(thisArg, value, value, this);\n        }\n    };\n    Object.defineProperty(SetPoly.prototype, \"size\", {\n        get: function () {\n            return this.__setData__.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return SetPoly;\n}());\nexport { SetPoly };\n/**\n * return an array containing the items of the given set.\n * @param set Set or SetPoly instance\n */\nexport function setToArray(set) {\n    if (set instanceof SetPoly) {\n        return set.__setData__.slice();\n    }\n    // if not using SetPoly as set, it means Array.from is supported\n    // eslint-disable-next-line compat/compat\n    return Array.from(set);\n}\n/**\n * return the Set constructor to use. If `Array.from` built-in or native Set is not available or it doesn't support the required features,\n * a ponyfill with minimal features is returned instead.\n *\n * Exported for testing purposes only.\n */\nexport function __getSetConstructor() {\n    // eslint-disable-next-line compat/compat\n    if (typeof Array.from === 'function' && typeof Set === 'function' && Set.prototype && Set.prototype.values) {\n        return Set;\n    }\n    return SetPoly;\n}\nexport var _Set = __getSetConstructor();\nexport function returnSetsUnion(set, set2) {\n    var result = new _Set(setToArray(set));\n    set2.forEach(function (value) {\n        result.add(value);\n    });\n    return result;\n}\nexport function returnDifference(list, list2) {\n    if (list === void 0) { list = []; }\n    if (list2 === void 0) { list2 = []; }\n    var result = new _Set(list);\n    list2.forEach(function (item) {\n        result.delete(item);\n    });\n    return setToArray(result);\n}\n","// Special treatments\nexport var CONTROL = 'control';\nexport var CONTROL_WITH_CONFIG = {\n    treatment: CONTROL,\n    config: null\n};\n// Constants for unknown and not-applicable values\nexport var UNKNOWN = 'unknown';\nexport var NA = 'NA';\n// Integration data types\nexport var SPLIT_IMPRESSION = 'IMPRESSION';\nexport var SPLIT_EVENT = 'EVENT';\n// Impression collection modes\nexport var DEBUG = 'DEBUG';\nexport var OPTIMIZED = 'OPTIMIZED';\nexport var NONE = 'NONE';\n// SDK Modes\nexport var LOCALHOST_MODE = 'localhost';\nexport var STANDALONE_MODE = 'standalone';\nexport var PRODUCER_MODE = 'producer';\nexport var CONSUMER_MODE = 'consumer';\nexport var CONSUMER_PARTIAL_MODE = 'consumer_partial';\n// Storage types\nexport var STORAGE_MEMORY = 'MEMORY';\nexport var STORAGE_LOCALSTORAGE = 'LOCALSTORAGE';\nexport var STORAGE_REDIS = 'REDIS';\nexport var STORAGE_PLUGGABLE = 'PLUGGABLE';\n// User consent\nexport var CONSENT_GRANTED = 'GRANTED'; // The user has granted consent for tracking events and impressions\nexport var CONSENT_DECLINED = 'DECLINED'; // The user has declined consent for tracking events and impressions\nexport var CONSENT_UNKNOWN = 'UNKNOWN'; // The user has neither granted nor declined consent for tracking events and impressions\n// Client method names\nexport var GET_TREATMENT = 'getTreatment';\nexport var GET_TREATMENTS = 'getTreatments';\nexport var GET_TREATMENT_WITH_CONFIG = 'getTreatmentWithConfig';\nexport var GET_TREATMENTS_WITH_CONFIG = 'getTreatmentsWithConfig';\nexport var GET_TREATMENTS_BY_FLAG_SET = 'getTreatmentsByFlagSet';\nexport var GET_TREATMENTS_BY_FLAG_SETS = 'getTreatmentsByFlagSets';\nexport var GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SET = 'getTreatmentsWithConfigByFlagSet';\nexport var GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SETS = 'getTreatmentsWithConfigByFlagSets';\nexport var TRACK_FN_LABEL = 'track';\n// Manager method names\nexport var SPLIT_FN_LABEL = 'split';\nexport var SPLITS_FN_LABEL = 'splits';\nexport var NAMES_FN_LABEL = 'names';\n// Telemetry\nexport var QUEUED = 0;\nexport var DROPPED = 1;\nexport var DEDUPED = 2;\nexport var STANDALONE_ENUM = 0;\nexport var CONSUMER_ENUM = 1;\nexport var CONSUMER_PARTIAL_ENUM = 2;\nexport var OPTIMIZED_ENUM = 0;\nexport var DEBUG_ENUM = 1;\nexport var NONE_ENUM = 2;\nexport var SPLITS = 'sp';\nexport var IMPRESSIONS = 'im';\nexport var IMPRESSIONS_COUNT = 'ic';\nexport var EVENTS = 'ev';\nexport var TELEMETRY = 'te';\nexport var TOKEN = 'to';\nexport var SEGMENT = 'se';\nexport var MY_SEGMENT = 'ms';\nexport var TREATMENT = 't';\nexport var TREATMENTS = 'ts';\nexport var TREATMENT_WITH_CONFIG = 'tc';\nexport var TREATMENTS_WITH_CONFIG = 'tcs';\nexport var TREATMENTS_BY_FLAGSET = 'tf';\nexport var TREATMENTS_BY_FLAGSETS = 'tfs';\nexport var TREATMENTS_WITH_CONFIG_BY_FLAGSET = 'tcf';\nexport var TREATMENTS_WITH_CONFIG_BY_FLAGSETS = 'tcfs';\nexport var TRACK = 'tr';\nexport var CONNECTION_ESTABLISHED = 0;\nexport var OCCUPANCY_PRI = 10;\nexport var OCCUPANCY_SEC = 20;\nexport var STREAMING_STATUS = 30;\nexport var SSE_CONNECTION_ERROR = 40;\nexport var TOKEN_REFRESH = 50;\nexport var ABLY_ERROR = 60;\nexport var SYNC_MODE_UPDATE = 70;\nexport var AUTH_REJECTION = 80;\nexport var STREAMING = 0;\nexport var POLLING = 1;\nexport var REQUESTED = 0;\nexport var NON_REQUESTED = 1;\nexport var DISABLED = 0;\nexport var ENABLED = 1;\nexport var PAUSED = 2;\n","// Create SplitRumAgent namespace and export it for ESM/CJS imports\n// Must use a named import to create the SplitRumAgent namespace (side effects)\nexport { SplitRumAgent } from './utils/config';\n// Pluggable event collectors\nexport { tti } from './metrics/tti';\nexport { routeChanges } from './metrics/routeChanges';\nexport { webVitals } from './metrics/webVitals';\n","import { setSchedule, flush, track, queue } from './queue';\nimport { isArray } from './isArray';\nimport { isBoolean } from './isBoolean';\nimport { isObject } from './isObject';\nimport { isString } from './isString';\nimport { log } from './log';\nimport { whenLoaded, onPageHideOrVisibilityChange } from './whenLoaded';\nimport { objectAssign } from './assign';\nimport { validateIdentity, areEqual } from './validateIdentity';\nimport { CONSENT_DECLINED, CONSENT_GRANTED } from './constants';\n// Built-in event collectors\nimport { handleCustomErrors, onError } from '../metrics/errors';\nimport { onNavigationTimingMetrics } from '../metrics/navigation';\nimport { validateProperties } from './validateEvent';\n// Browser support:\n// - ES5 syntax\n// - assumes availability of `window.addEventListener` and `document.location`, which are broadly supported.\n// - feature detection of Promise, History and Performance APIs is done by event collector modules. These features are required for some modules to collect data, but not for the RUM Agent to work.\n// In Browser, we pollute the global `window` object with the agent.\n// In NodeJS, we only export it and no event collectors are registered.\nvar isBrowser = typeof window === 'object' && typeof document === 'object';\nvar globalRef = isBrowser ? window : {};\n(function (w, isBrowser) {\n    if (w.SplitRumAgent)\n        return;\n    var _config = {\n        i: [],\n        a: false,\n        p: {},\n        prefix: '',\n        url: 'https://events.split.io/api',\n        pushRate: 30,\n        queueSize: 5000,\n        log: log,\n        userConsent: CONSENT_GRANTED // User consent is assumed to be granted by default\n    };\n    var _isConfigured = false;\n    function calculateAndFlush() {\n        if (isBrowser && !_isConfigured && _config.a && _config.i.length) {\n            _isConfigured = true;\n            // always async never inasync ;)\n            setTimeout(flush, 0);\n        }\n    }\n    var collectors = [];\n    // SplitRumAgent would be our namespace\n    var SplitRumAgent = {\n        // Initialization params\n        setup: function (sdkKey, config) {\n            if (isObject(config)) {\n                objectAssign(_config, config);\n            }\n            if (isString(sdkKey)) {\n                _config.a = sdkKey;\n                calculateAndFlush();\n            }\n            else {\n                _config.log.error('SDK key must be a string.');\n            }\n            // allow for chaining.\n            return SplitRumAgent;\n        },\n        // Configure identities\n        addIdentities: function (identities) {\n            if (isArray(identities)) {\n                identities.forEach(function (identity) { return SplitRumAgent.addIdentity(identity); });\n            }\n            else {\n                _config.log.error('Identities must be an array of objects with key and trafficType.');\n            }\n        },\n        addIdentity: function (identity) {\n            var validatedIdentity = validateIdentity(identity, _config.log);\n            if (validatedIdentity && !_config.i.some(function (i) { return areEqual(i, validatedIdentity); })) {\n                _config.i.push(validatedIdentity);\n                calculateAndFlush();\n            }\n        },\n        removeIdentities: function () {\n            _config.i = [];\n        },\n        removeIdentity: function (identity) {\n            var validatedIdentity = validateIdentity(identity, _config.log);\n            if (validatedIdentity) {\n                _config.i = _config.i.filter(function (i) { return !areEqual(i, validatedIdentity); });\n            }\n        },\n        getIdentities: function () {\n            return _config.i;\n        },\n        // Custom error handler.\n        trackError: function (e) {\n            return handleCustomErrors(e, SplitRumAgent);\n        },\n        // Track custom events.\n        track: track,\n        // register event collector\n        register: function (eventCollector) {\n            if (typeof eventCollector !== 'function') {\n                _config.log.error('register method must be called with an event collector function.');\n            }\n            else {\n                collectors.push(eventCollector(SplitRumAgent));\n            }\n            // allow for chaining.\n            return SplitRumAgent;\n        },\n        // Custom properties\n        setProperties: function (properties) {\n            objectAssign(_config.p, validateProperties(properties, _config.log));\n        },\n        getProperties: function () {\n            return _config.p;\n        },\n        removeProperties: function () {\n            _config.p = {};\n        },\n        // User consent\n        setUserConsent: function (userConsent) {\n            if (!isBoolean(userConsent)) {\n                _config.log.warn('setUserConsent: provided param must be a boolean value');\n                return false;\n            }\n            _config.userConsent = userConsent ? CONSENT_GRANTED : CONSENT_DECLINED;\n            return true;\n        },\n        getUserConsent: function () {\n            return _config.userConsent;\n        },\n        // Private members for internal use only.\n        // @TODO review how to expose config\n        __getConfig: function () {\n            return _config;\n        },\n        __queue: queue,\n    };\n    if (isBrowser) {\n        // Built-in collectors\n        SplitRumAgent.register(onNavigationTimingMetrics);\n        SplitRumAgent.register(onError);\n        // Post events periodically\n        whenLoaded(setSchedule);\n        // If there's a pagehide or visibilitychange event, calculate what's possible and send events using beacon by default\n        onPageHideOrVisibilityChange(function () {\n            collectors.forEach(function (collector) {\n                if (collector && typeof collector.flush === 'function')\n                    collector.flush();\n            });\n            flush(true);\n        });\n    }\n    w.SplitRumAgent = SplitRumAgent;\n})(globalRef, isBrowser);\nexport var SplitRumAgent = globalRef.SplitRumAgent;\n","import { getConnectionType, getUrl, userAgent } from './context';\nimport { sendEvents } from './transport';\nimport { isObject } from './isObject';\nimport { assignIdentities, objectAssign } from './assign';\nimport { CONSENT_DECLINED, CONSENT_GRANTED } from './constants';\nimport { validateEvent } from './validateEvent';\n// How to detect we are configured? Static = may be present by now\n//                                  Delayed = that would be the trigger but need to notify here.\n// We could start it from a different spot calling setSchedule;\n// We'll treat it as a FIFO queue\n// Size/batch limitations => TODO only if necessary.\nexport var queue = [];\n// @TODO: Apply batching if needed\n/**\n * Flush the queue of events.\n *\n * @param useBeacon - Whether to use navigator.sendBeacon or not. Defaults to false.\n * @returns true if events were sent, or a falsy value otherwise (e.g., queue is empty, config is not ready, or there was an error sending events)\n */\nexport function flush(useBeacon) {\n    var conf = window.SplitRumAgent.__getConfig();\n    // Only send events if we do have the config.\n    if (conf.a && conf.i.length && conf.userConsent === CONSENT_GRANTED) {\n        var toSend = queue.splice(0, queue.length);\n        return toSend.length && sendEvents(toSend, useBeacon);\n    }\n}\nexport function setSchedule() {\n    setInterval(flush, window.SplitRumAgent.__getConfig().pushRate * 1000);\n    flush(); // Attempt a flush when setting the schedule, like a first tick.\n}\nexport function track(eventTypeId, value, properties) {\n    var conf = window.SplitRumAgent.__getConfig();\n    var eventData = validateEvent(isObject(eventTypeId) ?\n        eventTypeId : {\n        eventTypeId: eventTypeId,\n        value: value,\n        properties: properties\n    }, conf.log);\n    // If the event is invalid or the user consent is DECLINED, drop the event.\n    if (!eventData || conf.userConsent === CONSENT_DECLINED)\n        return false;\n    // If people configures the agent at a really late time, prevent having a giant queue and attempt to send them or drop. First events will be the most important ones anyways.\n    if (queue.length >= conf.queueSize) {\n        if (!flush()) {\n            conf.log.warn('Dropping event due to queue size limit.');\n            return false;\n        }\n    }\n    // @ts-expect-error adding timestamp to event\n    eventData.timestamp = Date.now(); // <-- This is not the most accurate but it shouldn't really matter much. The error margin should be small. We can actually calculate the timestamp later.\n    if (conf.prefix)\n        eventData.eventTypeId = conf.prefix + \".\" + eventData.eventTypeId;\n    // include extra properties\n    var commonProperties = {\n        connectionType: getConnectionType(),\n        url: getUrl(),\n        userAgent: userAgent\n    };\n    // merge common properties with custom and event properties\n    eventData.properties = objectAssign(commonProperties, conf.p, isObject(eventData.properties) ? eventData.properties : {});\n    // @ts-expect-error not part of the public API\n    if (window.SplitRumAgent.onEvent)\n        eventData = window.SplitRumAgent.onEvent(eventData);\n    if (eventData)\n        assignIdentities(eventData, window.SplitRumAgent.__getConfig().i, queue);\n    return true;\n}\n","/* eslint-disable compat/compat */\nimport { UNAVAILABLE } from './constants';\n/**\n * Get user agent if it is available\n */\nexport function getUserAgent() {\n    return typeof navigator === 'object' ? navigator.userAgent : UNAVAILABLE;\n}\n/**\n * Get information about the system's connections ('wifi', 'cellular', etc)\n * More Information: https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API\n * */\nexport function getConnectionType() {\n    // @ts-expect-error `navigator.connection` property is not defined in lib.dom.d.ts but might exist\n    var connection = typeof navigator === 'object' && (navigator.connection || navigator.mozConnection || navigator.webkitConnection);\n    return connection ? connection.effectiveType : UNAVAILABLE;\n}\n/**\n * Get the current page URL\n */\nexport function getUrl() {\n    return location.href; // equivalent to `document.URL`\n}\n/**\n * Get the current page URL without origin. i.e, path, query params and fragment, without schema, hostname and port\n */\nexport function getRoute() {\n    return location.pathname + location.search + location.hash;\n}\nexport var userAgent = getUserAgent();\nexport var languageVersion = 'jsrum-' + '0.4.1';\n","export var UNAVAILABLE = 'unavailable';\nexport var CONSENT_GRANTED = 'GRANTED';\nexport var CONSENT_DECLINED = 'DECLINED';\nexport var CONSENT_UNKNOWN = 'UNKNOWN';\n","import { assignIdentities } from './assign';\nimport { languageVersion } from './context';\n// Key and trafficType are pieces of data we'll add here because:\n// a) not having those should not prevent queueing,\n// b) we may have multiple tt/key tuples, may be easier to handle here.\nexport function sendEvents(events, useBeacon) {\n    var config = window.SplitRumAgent.__getConfig();\n    var eventsWithIdentity = [];\n    for (var i = 0; i < events.length; i++) {\n        var event_1 = events[i];\n        assignIdentities(event_1, config.i, eventsWithIdentity);\n    }\n    if (eventsWithIdentity.length) {\n        return post(config.url + '/events/beacon', {\n            entries: eventsWithIdentity,\n            token: config.a,\n            sdk: languageVersion\n        }, useBeacon);\n    }\n    return false;\n}\n// Post data to our BE. Exporting only for UT purposes.\nexport function post(url, data, useBeacon) {\n    var stringifiedData = JSON.stringify(data);\n    useBeacon = useBeacon // check we don't avoid on purpose\n        && typeof navigator === 'object' && navigator.sendBeacon; // and that it exists\n    return useBeacon ?\n        navigator.sendBeacon(url, stringifiedData) :\n        fallbackPost(url, stringifiedData);\n}\n// Fetch and XHR request fallback. Exporting only for UT purposes.\nexport function fallbackPost(url, payload) {\n    if (typeof fetch === 'function') {\n        fetch(url, {\n            method: 'POST',\n            body: payload,\n            headers: {\n                'Content-Type': 'text/plain;charset=UTF-8'\n            }\n        }).catch(function () {\n            // noop\n        });\n    }\n    else {\n        try {\n            var req = new XMLHttpRequest();\n            req.open('POST', url, true);\n            req.setRequestHeader('Content-Type', 'text/plain;charset=UTF-8');\n            req.send(payload);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    return true; // This is a fallback so it's mostly fire and forget.\n}\n","/**\n * A small ponyfill of Object.assign\n */\nexport var objectAssign = Object.assign || function (target) {\n    if (target === null || target === undefined)\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n    target = Object(target);\n    for (var i = 1; i < arguments.length; i++) {\n        var source = Object(arguments[i]); // eslint-disable-next-line no-restricted-syntax\n        for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n};\nexport function assignIdentities(event, identities, queue) {\n    if (event.eventTypeId && event.timestamp) {\n        if (!identities.length || (event.key && event.trafficTypeName)) {\n            queue.push(event);\n        }\n        else {\n            identities.forEach(function (identity) {\n                queue.push(objectAssign({\n                    trafficTypeName: identity.trafficType,\n                    key: identity.key\n                }, event));\n            });\n        }\n    }\n}\n","/**\n * Utility to know if something is a plain object.\n *\n * @param {*} obj\n */\nexport function isObject(obj) {\n    return obj && typeof obj === 'object' && obj.constructor === Object;\n}\n","import { isBoolean } from './isBoolean';\nimport { isNumber } from './isNumber';\nimport { isObject } from './isObject';\nimport { isString } from './isString';\nimport { objectAssign } from './assign';\n/**\n * Validates and sanitizes a properties object. Returns the sanitized object or undefined if it is invalid (i.e., not a plain object).\n */\nexport function validateProperties(properties, log) {\n    if (!isObject(properties)) {\n        log.error('Event `properties` must be a plain object.');\n        return;\n    }\n    // Validate and sanitize property values\n    var propertiesClone = objectAssign({}, properties);\n    Object.keys(propertiesClone).forEach(function (key) {\n        var val = propertiesClone[key]; // eslint-disable-next-line eqeqeq\n        if (val == undefined || isString(val) || isNumber(val) || isBoolean(val))\n            return;\n        log.warn(\"Property \" + key + \" is of invalid type. Setting value to null.\");\n        propertiesClone[key] = null;\n    });\n    return propertiesClone;\n}\nvar EVENT_TYPE_REGEX = /^[a-zA-Z0-9][-_.:a-zA-Z0-9]{0,79}$/;\n/**\n * Validates and sanitizes an event. Returns the sanitized event or undefined if the event is invalid.\n */\nexport function validateEvent(event, log) {\n    var eventTypeId = event.eventTypeId, value = event.value, properties = event.properties;\n    if (!isString(eventTypeId) || !EVENT_TYPE_REGEX.test(eventTypeId)) {\n        log.error('Event must have a valid eventTypeId.');\n        return;\n    }\n    // eslint-disable-next-line eqeqeq\n    if (value != undefined && !isNumber(value)) {\n        log.error('Event value must be a number.');\n        return;\n    }\n    // eslint-disable-next-line eqeqeq\n    if (properties != undefined && !(properties = validateProperties(properties, log))) {\n        return;\n    }\n    return { eventTypeId: eventTypeId, value: value, properties: properties };\n}\n","/**\n * Checks if a given value is a boolean.\n */\nexport function isBoolean(val) {\n    return val === true || val === false;\n}\n","/**\n * Utility to know if something is a number. Pretty basic, we don't look for instances of Number since we don't expect those (for now).\n *\n * @param n\n * @returns true if n is a number, false otherwise.\n */\nexport function isNumber(n) {\n    return typeof n === 'number';\n}\n","/**\n * Utility to know if something is a string.\n *\n * @param {*} s\n */\nexport function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n}\n","/**\n * Utility to know if something is an array.\n *\n * @param {*} a\n */\nexport function isArray(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n}\n","var INFIX = ' splitio => rum-agent: ';\nexport var log = {\n    debug: function (m) { console.log('[DEBUG]' + INFIX + m); },\n    info: function (m) { console.log('[INFO] ' + INFIX + m); },\n    warn: function (m) { console.log('[WARN] ' + INFIX + m); },\n    error: function (m) { console.log('[ERROR]' + INFIX + m); }\n};\n","/**\n * Calls the callback function when the document is loaded or if it is already loaded.\n */\nexport function whenLoaded(callback) {\n    if (document.readyState === 'complete') {\n        // Queue a task so the callback runs after `loadEventEnd`.\n        setTimeout(callback, 0);\n    }\n    else {\n        window.addEventListener('load', function () {\n            // Defer, because we should wait until the handlers finish to allow customer logic run first.\n            setTimeout(callback, 0);\n        });\n    }\n}\nexport function onPageHideOrVisibilityChange(callback) {\n    // `unload` is not reliable, so we use `pagehide` if available: https://developer.chrome.com/articles/page-lifecycle-api/#the-unload-event\n    var PAGE_TERMINATION_EVENT = typeof window.onpagehide !== 'undefined' ? 'pagehide' : 'unload';\n    // Flush data whenever the page is hidden or unloaded\n    if (typeof document !== 'undefined' && document.addEventListener) {\n        document.addEventListener('visibilitychange', function onVisibilityChange() {\n            if (document.visibilityState === 'hidden')\n                callback();\n        });\n    }\n    // Some browsers, like Safari, does not fire the `visibilitychange` event when the page is being unloaded.\n    // Therefore, we also flush data in the `pagehide` event (or `unload` if `pagehide` is not available).\n    // If both events are triggered, the latter will find the events queue empty, so no duplicate data will be submitted.\n    window.addEventListener(PAGE_TERMINATION_EVENT, callback);\n}\n","import { isNumber } from './isNumber';\nimport { isObject } from './isObject';\nimport { isString } from './isString';\nexport function validateIdentity(identity, log) {\n    if (!isObject(identity)) {\n        log.error('Identity must be an object with key and trafficType.');\n        return;\n    }\n    var key = identity.key, trafficType = identity.trafficType;\n    if (isNumber(key))\n        key = key + '';\n    if (!isString(key)) {\n        log.error('Identity Key must be a string or number.');\n        return;\n    }\n    if (!isString(trafficType)) {\n        log.error('Identity Traffic Type must be a string.');\n        return;\n    }\n    return {\n        key: key.trim(),\n        trafficType: trafficType.trim().toLowerCase()\n    };\n}\nexport function areEqual(identity1, identity2) {\n    return identity1.key === identity2.key && identity1.trafficType === identity2.trafficType;\n}\n","import { getErrorData } from '../utils/getErrorData';\nimport { UNAVAILABLE } from '../utils/constants';\n/**\n * Add error into queue\n */\nfunction trackError(error, ctx) {\n    var errorData = getErrorData(error);\n    return errorData ?\n        ctx.track({\n            eventTypeId: 'error',\n            value: null,\n            properties: {\n                message: errorData.message,\n                stack: errorData.stack,\n            }\n        }) :\n        false;\n}\n/**\n * Handle custom error. Here we handle whatever the customer want to send. Ideally\n * we expect a string or an error object.\n */\nexport function handleCustomErrors(e, ctx) {\n    return trackError(e ? e : UNAVAILABLE, ctx);\n}\n/**\n * Captures uncaught errors and promise rejections.\n *\n * @TODO: sync snippet in HTML head to not miss events if loaded asynchronously.\n */\nexport function onError(ctx) {\n    function handleUncaughtErrors(event) {\n        trackError(event ? event.error || event.message || UNAVAILABLE : UNAVAILABLE, ctx);\n    }\n    function handleRejectionsErrors(e) {\n        trackError(e ? e.reason : UNAVAILABLE, ctx);\n    }\n    // In case customer placed the snippet in the head, remove listeners and process errors\n    var w = window; // @ts-expect-error object might be polluted\n    var g = w.__error;\n    if (g) {\n        w.removeEventListener('error', g.l1);\n        w.removeEventListener('unhandledrejection', g.l2);\n        // @TODO remove `setTimeout` eventually. ATM we have to run next code asynchronously, because `track` calls require global SplitRumAgent available\n        setTimeout(function () {\n            g.e1.forEach(handleUncaughtErrors);\n            g.e2.forEach(handleRejectionsErrors); // @ts-expect-error object might be polluted\n            delete w.__error;\n        }, 0);\n    }\n    // Capture browser uncaught errors.\n    w.addEventListener('error', handleUncaughtErrors);\n    // Capture browser promise rejection errors.\n    w.addEventListener('unhandledrejection', handleRejectionsErrors);\n}\n","import { isError } from './isError';\nimport { isString } from './isString';\nimport { UNAVAILABLE } from './constants';\n/**\n * Parse the error object. It returns an object with both message and stack every time, or false if the parameter does not have the format we use.\n *\n * @param {String|Error} error\n */\nexport function getErrorData(error) {\n    if (isString(error)) {\n        return {\n            message: error,\n            stack: UNAVAILABLE\n        };\n    }\n    else if (isError(error)) {\n        return {\n            message: isString(error.message) ? error.message : UNAVAILABLE,\n            stack: isString(error.stack) ? error.stack : UNAVAILABLE\n        };\n    }\n    return false;\n}\n","/**\n * Utility to know if something is a error.\n *\n * @param {*} o\n */\nexport function isError(o) {\n    return (Object.prototype.toString.call(o) === '[object Error]');\n}\n","// import { getTTFB } from './ttfb';\nimport { getTTDI } from './ttdi';\nimport { getPLT } from './plt';\nimport { whenLoaded } from '../../utils/whenLoaded';\n/**\n * Calculates navigation performance metrics using the Navigation Timing API.\n * Metrics:\n * - time.to.first.byte\n * - time.to.dom.interactive\n * - page.load.time\n */\nexport function onNavigationTimingMetrics(ctx) {\n    var getMetrics = function () {\n        var ttdi = getTTDI(), \n        // ttfb = getTTFB(),\n        plt = getPLT();\n        if (ttdi)\n            ctx.track(ttdi);\n        // @TODO regarding `time.to.first.byte`, either rename to `server.time.to.first.byte`, update its definition (https://web.dev/ttfb/), or remove it. For now, the metric is also provided by webVitals collector.\n        // if (ttfb) ctx.track(ttfb);\n        if (plt)\n            ctx.track(plt);\n    };\n    whenLoaded(getMetrics);\n    return {\n        flush: getMetrics\n    };\n}\n","/**\n * Time to Dom interactive\n * This is the time when the browser finished parsing the html.\n * https://varvy.com/pagespeed/critical-render-path.html\n */\nimport { simpleMetricFactory } from './simpleMetricFactory';\n// By the time this runs the fetchStart is guaranteed to have a value, we check to see which type of perf entry we could get by\n// figuring out if the value is a DOMHighResTimestamp (lvl2) or a regular timestamp (lvl1).\nexport function calculateTTDI(navEntry) {\n    if (navEntry.domInteractive > 0) { // This one is required for both\n        // Nav timing api lvl 1.\n        if (navEntry.fetchStart > 0 && (navEntry.fetchStart % 1 === 0))\n            return navEntry.domInteractive - navEntry.fetchStart;\n        // Nav timing api lvl 2\n        return navEntry.domInteractive;\n    }\n    return false;\n}\nexport var getTTDI = simpleMetricFactory('time.to.dom.interactive', calculateTTDI);\n","import { getNavEntry } from '../../utils/getNavEntry';\n/**\n * Simplified navigation/load related metrics factory. Provide the event type and the calculation function, which will receive the navigation entry.\n */\nexport function simpleMetricFactory(type, calc) {\n    var sent = false;\n    return function () {\n        var pageNav = getNavEntry();\n        if (sent || !pageNav)\n            return false; // The entry is not here yet, or the data was already sent.\n        var val = calc(pageNav);\n        if (!val)\n            return false;\n        else {\n            sent = true;\n            return {\n                eventTypeId: type,\n                value: val,\n            };\n        }\n    };\n}\n","/**\n * Utility function for retrieving the navigation performance entry. There are two levels of the Navigation Timing API we need to handle.\n * Use the level 2, if not available, fallback. If none is available, return false so we can short circuit there.\n */\n// @TODO: As the calculations change between the level 1 and level 2, we may tweak the entry right here to standardize what we use on a future release.\nexport function getNavEntry() {\n    if (!window.performance)\n        return false; // We're in a dark place.\n    return performance.getEntriesByType ? // If no entries we'll get undefined.\n        performance.getEntriesByType('navigation')[0] : // lvl2\n        performance.timing; // lvl1.\n}\n","/**\n * Page Load Time.\n * How long did it took for my page to be loaded? (including images, etc. Basically everything that's part of the first load)\n */\nimport { simpleMetricFactory } from './simpleMetricFactory';\nexport function calculatePLT(navEntry) {\n    // Nav timing lvl 2\n    if (navEntry.duration > 0)\n        return navEntry.duration;\n    // Nav timing lvl 1\n    if (navEntry.navigationStart > 0 && navEntry.loadEventEnd > 0)\n        return navEntry.loadEventEnd - navEntry.navigationStart;\n    return false;\n}\nexport var getPLT = simpleMetricFactory('page.load.time', calculatePLT);\n","// webVitals plugin uses the web-vital standard build.\nimport * as WebVitals from 'web-vitals';\nimport { isObject } from '../../utils/isObject';\nexport function convertWebVitalsMetricToSplitEvent(_a) {\n    var name = _a.name, value = _a.value, rating = _a.rating, navigationType = _a.navigationType;\n    return {\n        eventTypeId: \"webvitals.\" + name.toLowerCase(),\n        value: value,\n        properties: {\n            rating: rating,\n            navigationType: navigationType\n        }\n    };\n}\n/**\n * web-vitals metrics\n */\nexport function webVitals(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.reportOptions, reportOptions = _a === void 0 ? {\n        onCLS: true,\n        onFCP: true,\n        onFID: true,\n        onINP: true,\n        onLCP: true,\n        onTTFB: true,\n    } : _a;\n    return function onWebVitals(ctx) {\n        Object.keys(reportOptions).forEach(function (key) {\n            if (reportOptions[key] && WebVitals[key]) {\n                WebVitals[key](function (metric) {\n                    ctx.track(convertWebVitalsMetricToSplitEvent(metric));\n                }, isObject(reportOptions[key]) ? reportOptions[key] : undefined);\n            }\n        });\n    };\n}\n","var e,n,t,i,r,a=-1,o=function(e){addEventListener(\"pageshow\",(function(n){n.persisted&&(a=n.timeStamp,e(n))}),!0)},c=function(){return window.performance&&performance.getEntriesByType&&performance.getEntriesByType(\"navigation\")[0]},u=function(){var e=c();return e&&e.activationStart||0},f=function(e,n){var t=c(),i=\"navigate\";a>=0?i=\"back-forward-cache\":t&&(document.prerendering||u()>0?i=\"prerender\":document.wasDiscarded?i=\"restore\":t.type&&(i=t.type.replace(/_/g,\"-\")));return{name:e,value:void 0===n?-1:n,rating:\"good\",delta:0,entries:[],id:\"v3-\".concat(Date.now(),\"-\").concat(Math.floor(8999999999999*Math.random())+1e12),navigationType:i}},s=function(e,n,t){try{if(PerformanceObserver.supportedEntryTypes.includes(e)){var i=new PerformanceObserver((function(e){Promise.resolve().then((function(){n(e.getEntries())}))}));return i.observe(Object.assign({type:e,buffered:!0},t||{})),i}}catch(e){}},d=function(e,n,t,i){var r,a;return function(o){n.value>=0&&(o||i)&&((a=n.value-(r||0))||void 0===r)&&(r=n.value,n.delta=a,n.rating=function(e,n){return e>n[1]?\"poor\":e>n[0]?\"needs-improvement\":\"good\"}(n.value,t),e(n))}},l=function(e){requestAnimationFrame((function(){return requestAnimationFrame((function(){return e()}))}))},p=function(e){var n=function(n){\"pagehide\"!==n.type&&\"hidden\"!==document.visibilityState||e(n)};addEventListener(\"visibilitychange\",n,!0),addEventListener(\"pagehide\",n,!0)},v=function(e){var n=!1;return function(t){n||(e(t),n=!0)}},m=-1,h=function(){return\"hidden\"!==document.visibilityState||document.prerendering?1/0:0},g=function(e){\"hidden\"===document.visibilityState&&m>-1&&(m=\"visibilitychange\"===e.type?e.timeStamp:0,T())},y=function(){addEventListener(\"visibilitychange\",g,!0),addEventListener(\"prerenderingchange\",g,!0)},T=function(){removeEventListener(\"visibilitychange\",g,!0),removeEventListener(\"prerenderingchange\",g,!0)},E=function(){return m<0&&(m=h(),y(),o((function(){setTimeout((function(){m=h(),y()}),0)}))),{get firstHiddenTime(){return m}}},C=function(e){document.prerendering?addEventListener(\"prerenderingchange\",(function(){return e()}),!0):e()},L=[1800,3e3],w=function(e,n){n=n||{},C((function(){var t,i=E(),r=f(\"FCP\"),a=s(\"paint\",(function(e){e.forEach((function(e){\"first-contentful-paint\"===e.name&&(a.disconnect(),e.startTime<i.firstHiddenTime&&(r.value=Math.max(e.startTime-u(),0),r.entries.push(e),t(!0)))}))}));a&&(t=d(e,r,L,n.reportAllChanges),o((function(i){r=f(\"FCP\"),t=d(e,r,L,n.reportAllChanges),l((function(){r.value=performance.now()-i.timeStamp,t(!0)}))})))}))},b=[.1,.25],S=function(e,n){n=n||{},w(v((function(){var t,i=f(\"CLS\",0),r=0,a=[],c=function(e){e.forEach((function(e){if(!e.hadRecentInput){var n=a[0],t=a[a.length-1];r&&e.startTime-t.startTime<1e3&&e.startTime-n.startTime<5e3?(r+=e.value,a.push(e)):(r=e.value,a=[e])}})),r>i.value&&(i.value=r,i.entries=a,t())},u=s(\"layout-shift\",c);u&&(t=d(e,i,b,n.reportAllChanges),p((function(){c(u.takeRecords()),t(!0)})),o((function(){r=0,i=f(\"CLS\",0),t=d(e,i,b,n.reportAllChanges),l((function(){return t()}))})),setTimeout(t,0))})))},A={passive:!0,capture:!0},I=new Date,P=function(i,r){e||(e=r,n=i,t=new Date,k(removeEventListener),F())},F=function(){if(n>=0&&n<t-I){var r={entryType:\"first-input\",name:e.type,target:e.target,cancelable:e.cancelable,startTime:e.timeStamp,processingStart:e.timeStamp+n};i.forEach((function(e){e(r)})),i=[]}},M=function(e){if(e.cancelable){var n=(e.timeStamp>1e12?new Date:performance.now())-e.timeStamp;\"pointerdown\"==e.type?function(e,n){var t=function(){P(e,n),r()},i=function(){r()},r=function(){removeEventListener(\"pointerup\",t,A),removeEventListener(\"pointercancel\",i,A)};addEventListener(\"pointerup\",t,A),addEventListener(\"pointercancel\",i,A)}(n,e):P(n,e)}},k=function(e){[\"mousedown\",\"keydown\",\"touchstart\",\"pointerdown\"].forEach((function(n){return e(n,M,A)}))},D=[100,300],x=function(t,r){r=r||{},C((function(){var a,c=E(),u=f(\"FID\"),l=function(e){e.startTime<c.firstHiddenTime&&(u.value=e.processingStart-e.startTime,u.entries.push(e),a(!0))},m=function(e){e.forEach(l)},h=s(\"first-input\",m);a=d(t,u,D,r.reportAllChanges),h&&p(v((function(){m(h.takeRecords()),h.disconnect()}))),h&&o((function(){var o;u=f(\"FID\"),a=d(t,u,D,r.reportAllChanges),i=[],n=-1,e=null,k(addEventListener),o=l,i.push(o),F()}))}))},B=0,R=1/0,H=0,N=function(e){e.forEach((function(e){e.interactionId&&(R=Math.min(R,e.interactionId),H=Math.max(H,e.interactionId),B=H?(H-R)/7+1:0)}))},O=function(){return r?B:performance.interactionCount||0},q=function(){\"interactionCount\"in performance||r||(r=s(\"event\",N,{type:\"event\",buffered:!0,durationThreshold:0}))},j=[200,500],_=0,z=function(){return O()-_},G=[],J={},K=function(e){var n=G[G.length-1],t=J[e.interactionId];if(t||G.length<10||e.duration>n.latency){if(t)t.entries.push(e),t.latency=Math.max(t.latency,e.duration);else{var i={id:e.interactionId,latency:e.duration,entries:[e]};J[i.id]=i,G.push(i)}G.sort((function(e,n){return n.latency-e.latency})),G.splice(10).forEach((function(e){delete J[e.id]}))}},Q=function(e,n){n=n||{},C((function(){var t;q();var i,r=f(\"INP\"),a=function(e){e.forEach((function(e){(e.interactionId&&K(e),\"first-input\"===e.entryType)&&(!G.some((function(n){return n.entries.some((function(n){return e.duration===n.duration&&e.startTime===n.startTime}))}))&&K(e))}));var n,t=(n=Math.min(G.length-1,Math.floor(z()/50)),G[n]);t&&t.latency!==r.value&&(r.value=t.latency,r.entries=t.entries,i())},c=s(\"event\",a,{durationThreshold:null!==(t=n.durationThreshold)&&void 0!==t?t:40});i=d(e,r,j,n.reportAllChanges),c&&(\"PerformanceEventTiming\"in window&&\"interactionId\"in PerformanceEventTiming.prototype&&c.observe({type:\"first-input\",buffered:!0}),p((function(){a(c.takeRecords()),r.value<0&&z()>0&&(r.value=0,r.entries=[]),i(!0)})),o((function(){G=[],_=O(),r=f(\"INP\"),i=d(e,r,j,n.reportAllChanges)})))}))},U=[2500,4e3],V={},W=function(e,n){n=n||{},C((function(){var t,i=E(),r=f(\"LCP\"),a=function(e){var n=e[e.length-1];n&&n.startTime<i.firstHiddenTime&&(r.value=Math.max(n.startTime-u(),0),r.entries=[n],t())},c=s(\"largest-contentful-paint\",a);if(c){t=d(e,r,U,n.reportAllChanges);var m=v((function(){V[r.id]||(a(c.takeRecords()),c.disconnect(),V[r.id]=!0,t(!0))}));[\"keydown\",\"click\"].forEach((function(e){addEventListener(e,(function(){return setTimeout(m,0)}),!0)})),p(m),o((function(i){r=f(\"LCP\"),t=d(e,r,U,n.reportAllChanges),l((function(){r.value=performance.now()-i.timeStamp,V[r.id]=!0,t(!0)}))}))}}))},X=[800,1800],Y=function e(n){document.prerendering?C((function(){return e(n)})):\"complete\"!==document.readyState?addEventListener(\"load\",(function(){return e(n)}),!0):setTimeout(n,0)},Z=function(e,n){n=n||{};var t=f(\"TTFB\"),i=d(e,t,X,n.reportAllChanges);Y((function(){var r=c();if(r){var a=r.responseStart;if(a<=0||a>performance.now())return;t.value=Math.max(a-u(),0),t.entries=[r],i(!0),o((function(){t=f(\"TTFB\",0),(i=d(e,t,X,n.reportAllChanges))(!0)}))}}))};export{b as CLSThresholds,L as FCPThresholds,D as FIDThresholds,j as INPThresholds,U as LCPThresholds,X as TTFBThresholds,S as getCLS,w as getFCP,x as getFID,Q as getINP,W as getLCP,Z as getTTFB,S as onCLS,w as onFCP,x as onFID,Q as onINP,W as onLCP,Z as onTTFB};\n","export { SplitFactory } from './splitFactory';\nexport { InLocalStorage } from '@splitsoftware/splitio-commons/esm/storages/inLocalStorage/index';\nexport { GoogleAnalyticsToSplit } from '@splitsoftware/splitio-commons/esm/integrations/ga/GoogleAnalyticsToSplit';\nexport { SplitToGoogleAnalytics } from '@splitsoftware/splitio-commons/esm/integrations/ga/SplitToGoogleAnalytics';\nexport { ErrorLogger } from '@splitsoftware/splitio-commons/esm/logger/browser/ErrorLogger';\nexport { WarnLogger } from '@splitsoftware/splitio-commons/esm/logger/browser/WarnLogger';\nexport { InfoLogger } from '@splitsoftware/splitio-commons/esm/logger/browser/InfoLogger';\nexport { DebugLogger } from '@splitsoftware/splitio-commons/esm/logger/browser/DebugLogger';\nexport { PluggableStorage } from '@splitsoftware/splitio-commons/esm/storages/pluggable';\n","import { settingsFactory } from '../settings/full';\nimport { getModules } from '../platform/getModules';\nimport { sdkFactory } from '@splitsoftware/splitio-commons/esm/sdkFactory/index';\nimport { getFetch } from '../platform/getFetchFull';\nimport { getEventSource } from '../platform/getEventSource';\nimport { EventEmitter } from '@splitsoftware/splitio-commons/esm/utils/MinEvents';\nimport { now } from '@splitsoftware/splitio-commons/esm/utils/timeTracker/now/browser';\nvar platform = { getFetch: getFetch, getEventSource: getEventSource, EventEmitter: EventEmitter, now: now };\n/**\n * SplitFactory with pluggable modules for Browser.\n * Includes localhost mode and fetch polyfill out-of-the-box.\n *\n * @param config configuration object used to instantiate the SDK\n * @param __updateModules optional function that lets redefine internal SDK modules. Use with\n * caution since, unlike `config`, this param is not validated neither considered part of the public API.\n * @throws Will throw an error if the provided config is invalid.\n */\nexport function SplitFactory(config, __updateModules) {\n    var settings = settingsFactory(config);\n    var modules = getModules(settings, platform);\n    if (__updateModules)\n        __updateModules(modules);\n    return sdkFactory(modules);\n}\n","import { settingsValidation } from '@splitsoftware/splitio-commons/esm/utils/settingsValidation/index';\nimport { defaults } from './defaults';\nimport { validateRuntime } from '@splitsoftware/splitio-commons/esm/utils/settingsValidation/runtime';\nimport { validateStorageCS } from '@splitsoftware/splitio-commons/esm/utils/settingsValidation/storage/storageCS';\nimport { validatePluggableIntegrations } from '@splitsoftware/splitio-commons/esm/utils/settingsValidation/integrations/pluggable';\nimport { validateLogger } from '@splitsoftware/splitio-commons/esm/utils/settingsValidation/logger/pluggableLogger';\nimport { validateLocalhostWithDefault } from '@splitsoftware/splitio-commons/esm/utils/settingsValidation/localhost/builtin';\nimport { validateConsent } from '@splitsoftware/splitio-commons/esm/utils/settingsValidation/consent';\nvar params = {\n    defaults: defaults,\n    acceptKey: true,\n    runtime: validateRuntime,\n    storage: validateStorageCS,\n    integrations: validatePluggableIntegrations,\n    logger: validateLogger,\n    localhost: validateLocalhostWithDefault,\n    consent: validateConsent,\n};\nexport function settingsFactory(config) {\n    return settingsValidation(config, params);\n}\n","import { merge, get } from '../lang';\nimport { validateMode } from './mode';\nimport { validateSplitFilters } from './splitFilters';\nimport { STANDALONE_MODE, OPTIMIZED, LOCALHOST_MODE, DEBUG } from '../constants';\nimport { validImpressionsMode } from './impressionsMode';\nimport { validateKey } from '../inputValidation/key';\nimport { validateTrafficType } from '../inputValidation/trafficType';\nimport { ERROR_MIN_CONFIG_PARAM } from '../../logger/constants';\n// Exported for telemetry\nexport var base = {\n    // Define which kind of object you want to retrieve from SplitFactory\n    mode: STANDALONE_MODE,\n    core: {\n        // API token (tight to an environment)\n        authorizationKey: undefined,\n        // key used in your system (only required for browser version)\n        key: undefined,\n        // traffic type for the given key (only used on browser version)\n        trafficType: undefined,\n        // toggle impressions tracking of labels\n        labelsEnabled: true,\n        // toggle sendind (true) or not sending (false) IP and Host Name with impressions, events, and telemetries requests (only used on nodejs version)\n        IPAddressesEnabled: undefined\n    },\n    scheduler: {\n        // fetch feature updates each 60 sec\n        featuresRefreshRate: 60,\n        // fetch segments updates each 60 sec\n        segmentsRefreshRate: 60,\n        // publish telemetry stats each 3600 secs (1 hour)\n        telemetryRefreshRate: 3600,\n        // publish evaluations each 300 sec (default value for OPTIMIZED impressions mode)\n        impressionsRefreshRate: 300,\n        // fetch offline changes each 15 sec\n        offlineRefreshRate: 15,\n        // publish events every 60 seconds after the first flush\n        eventsPushRate: 60,\n        // how many events will be queued before flushing\n        eventsQueueSize: 500,\n        // how many impressions will be queued before flushing\n        impressionsQueueSize: 30000,\n        // backoff base seconds to wait before re attempting to connect to push notifications\n        pushRetryBackoffBase: 1,\n    },\n    urls: {\n        // CDN having all the information for your environment\n        sdk: 'https://sdk.split.io/api',\n        // SDK event and impression endpoints\n        events: 'https://events.split.io/api',\n        // SDK Auth Server\n        auth: 'https://auth.split.io/api',\n        // Streaming Server\n        streaming: 'https://streaming.split.io',\n        // Telemetry Server\n        telemetry: 'https://telemetry.split.io/api',\n    },\n    // Defines which kind of storage we should instanciate.\n    storage: undefined,\n    // Defines if the logs are enabled, SDK wide.\n    debug: undefined,\n    // Defines the impression listener, but will only be used on NodeJS.\n    impressionListener: undefined,\n    // Instance version.\n    version: undefined,\n    // List of integrations.\n    integrations: undefined,\n    // toggle using (true) or not using (false) Server-Side Events for synchronizing storage\n    streamingEnabled: true,\n    sync: {\n        splitFilters: undefined,\n        // impressions collection mode\n        impressionsMode: OPTIMIZED,\n        localhostMode: undefined,\n        enabled: true\n    },\n    // Logger\n    log: undefined\n};\nfunction fromSecondsToMillis(n) {\n    return Math.round(n * 1000);\n}\n/**\n * Validates the given config and use it to build a settings object.\n * NOTE: it doesn't validate the SDK Key. Call `validateApiKey` or `validateAndTrackApiKey` for that after settings validation.\n *\n * @param config user defined configuration\n * @param validationParams defaults and fields validators used to validate and creates a settings object from a given config\n */\nexport function settingsValidation(config, validationParams) {\n    var defaults = validationParams.defaults, runtime = validationParams.runtime, storage = validationParams.storage, integrations = validationParams.integrations, logger = validationParams.logger, localhost = validationParams.localhost, consent = validationParams.consent;\n    // creates a settings object merging base, defaults and config objects.\n    var withDefaults = merge({}, base, defaults, config);\n    // ensure a valid logger.\n    // First thing to validate, since other validators might use the logger.\n    var log = logger(withDefaults); // @ts-ignore, modify readonly prop\n    withDefaults.log = log;\n    // ensure a valid impressionsMode\n    withDefaults.sync.impressionsMode = validImpressionsMode(log, withDefaults.sync.impressionsMode);\n    function validateMinValue(paramName, actualValue, minValue) {\n        if (actualValue >= minValue)\n            return actualValue;\n        // actualValue is not a number or is lower than minValue\n        log.error(ERROR_MIN_CONFIG_PARAM, [paramName, minValue]);\n        return minValue;\n    }\n    // Scheduler periods\n    var scheduler = withDefaults.scheduler, startup = withDefaults.startup;\n    scheduler.featuresRefreshRate = fromSecondsToMillis(scheduler.featuresRefreshRate);\n    scheduler.segmentsRefreshRate = fromSecondsToMillis(scheduler.segmentsRefreshRate);\n    scheduler.offlineRefreshRate = fromSecondsToMillis(scheduler.offlineRefreshRate);\n    scheduler.eventsPushRate = fromSecondsToMillis(scheduler.eventsPushRate);\n    scheduler.telemetryRefreshRate = fromSecondsToMillis(validateMinValue('telemetryRefreshRate', scheduler.telemetryRefreshRate, 60));\n    // Default impressionsRefreshRate for DEBUG mode is 60 secs\n    if (get(config, 'scheduler.impressionsRefreshRate') === undefined && withDefaults.sync.impressionsMode === DEBUG)\n        scheduler.impressionsRefreshRate = 60;\n    scheduler.impressionsRefreshRate = fromSecondsToMillis(scheduler.impressionsRefreshRate);\n    // Log deprecation for old telemetry param\n    if (scheduler.metricsRefreshRate)\n        log.warn('`metricsRefreshRate` will be deprecated soon. For configuring telemetry rates, update `telemetryRefreshRate` value in configs');\n    // Startup periods\n    startup.requestTimeoutBeforeReady = fromSecondsToMillis(startup.requestTimeoutBeforeReady);\n    startup.readyTimeout = fromSecondsToMillis(startup.readyTimeout);\n    startup.eventsFirstPushWindow = fromSecondsToMillis(startup.eventsFirstPushWindow);\n    // ensure a valid SDK mode\n    // @ts-ignore, modify readonly prop\n    withDefaults.mode = validateMode(withDefaults.core.authorizationKey, withDefaults.mode);\n    // ensure a valid Storage based on mode defined.\n    // @ts-ignore, modify readonly prop\n    if (storage)\n        withDefaults.storage = storage(withDefaults);\n    // Validate key and TT (for client-side)\n    var maybeKey = withDefaults.core.key;\n    if (validationParams.acceptKey) {\n        // Although `key` is required in client-side, it can be omitted in LOCALHOST mode. In that case, the value `localhost_key` is used.\n        if (withDefaults.mode === LOCALHOST_MODE && maybeKey === undefined) {\n            withDefaults.core.key = 'localhost_key';\n        }\n        else {\n            // Keeping same behaviour than JS SDK: if settings key or TT are invalid,\n            // `false` value is used as bound key/TT of the default client, which leads to some issues.\n            // @ts-ignore, @TODO handle invalid keys as a non-recoverable error?\n            withDefaults.core.key = validateKey(log, maybeKey, 'Client instantiation');\n        }\n        if (validationParams.acceptTT) {\n            var maybeTT = withDefaults.core.trafficType;\n            if (maybeTT !== undefined) { // @ts-ignore\n                withDefaults.core.trafficType = validateTrafficType(log, maybeTT, 'Client instantiation');\n            }\n        }\n    }\n    else {\n        // On server-side, key is undefined and used to distinguish from client-side\n        if (maybeKey !== undefined)\n            log.warn('Provided `key` is ignored in server-side SDK.'); // @ts-ignore\n        withDefaults.core.key = undefined;\n    }\n    // Current ip/hostname information\n    // @ts-ignore, modify readonly prop\n    withDefaults.runtime = runtime(withDefaults);\n    // ensure a valid list of integrations.\n    // `integrations` returns an array of valid integration items.\n    // @ts-ignore, modify readonly prop\n    if (integrations)\n        withDefaults.integrations = integrations(withDefaults);\n    if (localhost)\n        withDefaults.sync.localhostMode = localhost(withDefaults);\n    // validate push options\n    if (withDefaults.streamingEnabled !== false) { // @ts-ignore, modify readonly prop\n        withDefaults.streamingEnabled = true;\n        // Backoff bases.\n        // We are not checking if bases are positive numbers. Thus, we might be reauthenticating immediately (`setTimeout` with NaN or negative number)\n        scheduler.pushRetryBackoffBase = fromSecondsToMillis(scheduler.pushRetryBackoffBase);\n    }\n    // validate sync enabled\n    if (withDefaults.sync.enabled !== false) { // @ts-ignore, modify readonly prop\n        withDefaults.sync.enabled = true;\n    }\n    // validate the `splitFilters` settings and parse splits query\n    var splitFiltersValidation = validateSplitFilters(log, withDefaults.sync.splitFilters, withDefaults.mode);\n    withDefaults.sync.splitFilters = splitFiltersValidation.validFilters;\n    withDefaults.sync.__splitFiltersValidation = splitFiltersValidation;\n    // ensure a valid user consent value\n    // @ts-ignore, modify readonly prop\n    withDefaults.userConsent = consent(withDefaults);\n    return withDefaults;\n}\n","import { __spreadArray } from \"tslib\";\n/**\n * Checks if the target string ends with the sub string.\n */\nexport function endsWith(target, sub, caseInsensitive) {\n    if (caseInsensitive === void 0) { caseInsensitive = false; }\n    if (!(isString(target) && isString(sub))) {\n        return false;\n    }\n    if (caseInsensitive) {\n        target = target.toLowerCase();\n        sub = sub.toLowerCase();\n    }\n    return target.slice(target.length - sub.length) === sub;\n}\n/**\n * Loops through a source collection (an object or an array) running iteratee\n * against each element. It returns the first element for which iteratee returned\n * a truthy value and stops the loop.\n * Iteratee receives three arguments (element, key/index, collection)\n */\nexport function find(source, iteratee) {\n    var res;\n    if (isObject(source)) {\n        var keys = Object.keys(source);\n        for (var i = 0; i < keys.length && !res; i++) {\n            var key = keys[i];\n            var iterateeResult = iteratee(source[key], key, source);\n            if (iterateeResult)\n                res = source[key];\n        }\n    }\n    else if (Array.isArray(source)) {\n        for (var i = 0; i < source.length && !res; i++) {\n            var iterateeResult = iteratee(source[i], i, source);\n            if (iterateeResult)\n                res = source[i];\n        }\n    }\n    return res;\n}\n/**\n * Evaluates iteratee for each element of the source array. Returns the index of the first element\n * for which iteratee returns truthy. If no element is found or there's an issue with the params it returns -1.\n */\nexport function findIndex(source, iteratee) {\n    if (Array.isArray(source) && typeof iteratee === 'function') {\n        for (var i = 0; i < source.length; i++) {\n            if (iteratee(source[i], i, source) === true) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n/**\n * Executes iteratee for given obj own props.\n */\nexport function forOwn(obj, iteratee) {\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) { return iteratee(obj[key], key, obj); });\n    return obj;\n}\n/**\n * Safely retrieve the specified prop from obj. If we can't retrieve\n * that property value, we return the default value.\n */\nexport function get(obj, prop, val) {\n    var res = val;\n    try { // No risks nor lots of checks.\n        var pathPieces = prop.split('.');\n        var partial_1 = obj;\n        pathPieces.forEach(function (pathPiece) { return partial_1 = partial_1[pathPiece]; });\n        if (typeof partial_1 !== 'undefined')\n            res = partial_1;\n    }\n    catch (e) {\n        // noop\n    }\n    return res;\n}\n/**\n * Parses an array into a map of different arrays, grouping by the specified prop value.\n */\nexport function groupBy(source, prop) {\n    var map = {};\n    if (Array.isArray(source) && isString(prop)) {\n        for (var i = 0; i < source.length; i++) {\n            var key = source[i][prop];\n            // Skip the element if the key is not a string.\n            if (isString(key)) {\n                if (!map[key])\n                    map[key] = [];\n                map[key].push(source[i]);\n            }\n        }\n    }\n    return map;\n}\n/**\n * Checks if a given value is a boolean.\n */\nexport function isBoolean(val) {\n    return val === true || val === false;\n}\n/**\n * Checks if a given value is a finite value of number type or Number object.\n * Unlike `Number.isFinite`, it also tests Number object instances.\n * Unlike global `isFinite`, it returns false if the value is not a number or Number object instance.\n */\nexport function isFiniteNumber(val) {\n    if (val instanceof Number)\n        val = val.valueOf();\n    // @TODO remove `isFinite` once `Number.isFinite` is fully supported by targets\n    // eslint-disable-next-line compat/compat\n    if (typeof val === 'number')\n        return Number.isFinite ? Number.isFinite(val) : isFinite(val);\n    return false;\n}\n/**\n * Checks if a given value is an integer value of number type or Number object.\n * Unlike `Number.isInteger`, it also tests Number object instances.\n */\nexport function isIntegerNumber(val) {\n    if (val instanceof Number)\n        val = val.valueOf();\n    // eslint-disable-next-line compat/compat\n    if (typeof val === 'number')\n        return Number.isInteger ? Number.isInteger(val) : isFinite(val) && Math.floor(val) === val;\n    return false;\n}\n/**\n * Checks if a given value is a NaN value of number type or Number object.\n * Unlike `Number.isNaN`, it also tests Number object instances.\n * Unlike global `isNan`, it returns false if the value is not a number or Number object instance.\n */\nexport function isNaNNumber(val) {\n    if (val instanceof Number)\n        val = val.valueOf();\n    // @TODO replace with `Number.isNaN` once it is fully supported by targets\n    return val !== val;\n}\n/**\n * Validates if a value is an object created by the Object constructor (plain object).\n * It checks `constructor.name` to avoid false negatives when validating values on a separate VM context, which has its own global built-ins.\n */\nexport function isObject(obj) {\n    return obj !== null && typeof obj === 'object' && (obj.constructor === Object ||\n        (obj.constructor != null && obj.constructor.name === 'Object'));\n}\n/**\n * Checks if a given value is a string.\n */\nexport function isString(val) {\n    return typeof val === 'string' || val instanceof String;\n}\n/**\n * String sanitizer. Returns the provided value converted to uppercase if it is a string.\n */\nexport function stringToUpperCase(val) {\n    return isString(val) ? val.toUpperCase() : val;\n}\n/**\n * Deep copy version of Object.assign using recursion.\n * There are some assumptions here. It's for internal use and we don't need verbose errors\n * or to ensure the data types or whatever. Parameters should always be correct (at least have a target and a source, of type object).\n */\nexport function merge(target, source) {\n    var rest = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        rest[_i - 2] = arguments[_i];\n    }\n    var res = target;\n    isObject(source) && Object.keys(source).forEach(function (key) {\n        var val = source[key];\n        if (isObject(val)) {\n            if (res[key] && isObject(res[key])) { // If both are objects, merge into a new one.\n                val = merge({}, res[key], val);\n            }\n            else { // else make a copy.\n                val = merge({}, val);\n            }\n        }\n        // We skip undefined values.\n        if (val !== undefined)\n            res[key] = val;\n    });\n    if (rest && rest.length) {\n        var nextSource = rest.splice(0, 1)[0];\n        res = merge.apply(void 0, __spreadArray([res, nextSource], rest, false));\n    }\n    return res;\n}\n/**\n * Checks if the target string starts with the sub string.\n */\nexport function startsWith(target, sub) {\n    if (!(isString(target) && isString(sub))) {\n        return false;\n    }\n    return target.slice(0, sub.length) === sub;\n}\n/**\n * Transforms a value into a number.\n * Note: We're not expecting anything fancy here. If we are at some point, add more type checks.\n */\nexport function toNumber(val) {\n    if (typeof val === 'number')\n        return val;\n    if (isObject(val) && typeof val.valueOf === 'function') {\n        var valOf = val.valueOf();\n        val = isObject(valOf) ? valOf + '' : valOf;\n    }\n    if (typeof val !== 'string') {\n        return val === 0 ? val : +val;\n    }\n    // Remove trailing whitespaces.\n    val = val.replace(/^\\s+|\\s+$/g, '');\n    return +val;\n}\n/**\n * Transforms a value into it's string representation.\n */\nexport function toString(val) {\n    if (val == null)\n        return '';\n    if (typeof val === 'string')\n        return val;\n    if (Array.isArray(val))\n        return val.map(function (val) { return isString(val) ? val : ''; }) + '';\n    var result = val + '';\n    return (result === '0' && (1 / val) === Number.NEGATIVE_INFINITY) ? '-0' : result;\n}\n/**\n * Removes duplicate items on an array of strings.\n */\nexport function uniq(arr) {\n    var seen = {};\n    return arr.filter(function (item) {\n        return Object.prototype.hasOwnProperty.call(seen, item) ? false : seen[item] = true;\n    });\n}\n/**\n * Removes duplicate items on an array of objects using an optional `stringify` function as equality criteria.\n * It uses JSON.stringify as default criteria.\n */\nexport function uniqAsStrings(arr, stringify) {\n    if (stringify === void 0) { stringify = JSON.stringify; }\n    var seen = {};\n    return arr.filter(function (item) {\n        var itemString = stringify(item);\n        return Object.prototype.hasOwnProperty.call(seen, itemString) ? false : seen[itemString] = true;\n    });\n}\nvar uniqueIdCounter = -1;\n/**\n * Returns a number to be used as ID, which will be unique.\n */\nexport function uniqueId() {\n    return uniqueIdCounter++;\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","import { LOCALHOST_MODE, STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE, CONSUMER_PARTIAL_MODE } from '../constants';\nexport function validateMode(key, mode) {\n    // Leaving the comparison as is, in case we change the mode name but not the setting.\n    if (key === 'localhost')\n        return LOCALHOST_MODE;\n    if ([STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE, CONSUMER_PARTIAL_MODE].indexOf(mode) === -1)\n        throw Error('Invalid mode provided');\n    return mode;\n}\n/**\n * Storage is async if mode is consumer or partial consumer\n */\nexport function isConsumerMode(mode) {\n    return CONSUMER_MODE === mode || CONSUMER_PARTIAL_MODE === mode;\n}\n","import { validateSplits } from '../inputValidation/splits';\nimport { WARN_SPLITS_FILTER_IGNORED, WARN_SPLITS_FILTER_EMPTY, WARN_SPLITS_FILTER_INVALID, SETTINGS_SPLITS_FILTER, LOG_PREFIX_SETTINGS, ERROR_SETS_FILTER_EXCLUSIVE, WARN_LOWERCASE_FLAGSET, WARN_INVALID_FLAGSET, WARN_FLAGSET_NOT_CONFIGURED } from '../../logger/constants';\nimport { objectAssign } from '../lang/objectAssign';\nimport { find, uniq } from '../lang';\nimport { isConsumerMode } from './mode';\n// Split filters metadata.\n// Ordered according to their precedency when forming the filter query string: `&names=<values>&prefixes=<values>`\nvar FILTERS_METADATA = [\n    {\n        type: 'bySet',\n        maxLength: 50,\n        queryParam: 'sets='\n    },\n    {\n        type: 'byName',\n        maxLength: 400,\n        queryParam: 'names='\n    },\n    {\n        type: 'byPrefix',\n        maxLength: 50,\n        queryParam: 'prefixes='\n    }\n];\nvar VALID_FLAGSET_REGEX = /^[a-z0-9][_a-z0-9]{0,49}$/;\nvar CAPITAL_LETTERS_REGEX = /[A-Z]/;\n/**\n * Validates that the given value is a valid filter type\n */\nfunction validateFilterType(maybeFilterType) {\n    return FILTERS_METADATA.some(function (filterMetadata) { return filterMetadata.type === maybeFilterType; });\n}\n/**\n * Validate, deduplicate and sort a given list of filter values.\n *\n * @param {string} type filter type string used for log messages\n * @param {string[]} values list of values to validate, deduplicate and sort\n * @param {number} maxLength\n * @returns list of valid, unique and alphabetically sorted non-empty strings. The list is empty if `values` param is not a non-empty array or all its values are invalid.\n *\n * @throws Error if the sanitized list exceeds the length indicated by `maxLength`\n */\nfunction validateSplitFilter(log, type, values, maxLength) {\n    // validate and remove invalid and duplicated values\n    var result = validateSplits(log, values, LOG_PREFIX_SETTINGS, type + \" filter\", type + \" filter value\");\n    if (result) {\n        if (type === 'bySet') {\n            result = sanitizeFlagSets(log, result, LOG_PREFIX_SETTINGS);\n        }\n        // check max length\n        if (result.length > maxLength)\n            throw new Error(maxLength + \" unique values can be specified at most for '\" + type + \"' filter. You passed \" + result.length + \". Please consider reducing the amount or using other filter.\");\n        // sort values\n        result.sort();\n    }\n    return result || []; // returns empty array if `result` is `false`\n}\n/**\n * Returns a string representing the URL encoded query component of /splitChanges URL.\n *\n * The possible formats of the query string are:\n *  - null: if all filters are empty\n *  - '&names=<comma-separated-values>': if only `byPrefix` filter is undefined\n *  - '&prefixes=<comma-separated-values>': if only `byName` filter is undefined\n *  - '&names=<comma-separated-values>&prefixes=<comma-separated-values>': if no one is undefined\n *\n * @param {Object} groupedFilters object of filters. Each filter must be a list of valid, unique and ordered string values.\n * @returns null or string with the `split filter query` component of the URL.\n */\nfunction queryStringBuilder(groupedFilters) {\n    var queryParams = [];\n    FILTERS_METADATA.forEach(function (_a) {\n        var type = _a.type, queryParam = _a.queryParam;\n        var filter = groupedFilters[type];\n        if (filter.length > 0)\n            queryParams.push(queryParam + filter.map(function (value) { return encodeURIComponent(value); }).join(','));\n    });\n    return queryParams.length > 0 ? '&' + queryParams.join('&') : null;\n}\n/**\n * Sanitizes set names list taking into account:\n *  - It should be lowercase\n *  - Must adhere the following regular expression /^[a-z0-9][_a-z0-9]{0,49}$/ that means\n *   - must start with a letter or number\n *   - Be in lowercase\n *   - Be alphanumeric\n *   - have a max length of 50 characters\n *\n * @param {ILogger} log\n * @param {string[]} flagSets\n * @param {string} method\n * @returns sanitized list of set names\n */\nfunction sanitizeFlagSets(log, flagSets, method) {\n    var sanitizedSets = flagSets\n        .map(function (flagSet) {\n        if (CAPITAL_LETTERS_REGEX.test(flagSet)) {\n            log.warn(WARN_LOWERCASE_FLAGSET, [method, flagSet]);\n            flagSet = flagSet.toLowerCase();\n        }\n        return flagSet;\n    })\n        .filter(function (flagSet) {\n        if (!VALID_FLAGSET_REGEX.test(flagSet)) {\n            log.warn(WARN_INVALID_FLAGSET, [method, flagSet, VALID_FLAGSET_REGEX, flagSet]);\n            return false;\n        }\n        if (typeof flagSet !== 'string')\n            return false;\n        return true;\n    });\n    return uniq(sanitizedSets);\n}\nfunction configuredFilter(validFilters, filterType) {\n    return find(validFilters, function (filter) { return filter.type === filterType && filter.values.length > 0; });\n}\n/**\n * Validates `splitFilters` configuration object and parses it into a query string for filtering splits on `/splitChanges` fetch.\n *\n * @param {ILogger} log logger\n * @param {any} maybeSplitFilters split filters configuration param provided by the user\n * @param {string} mode settings mode\n * @returns it returns an object with the following properties:\n *  - `validFilters`: the validated `splitFilters` configuration object defined by the user.\n *  - `queryString`: the parsed split filter query. it is null if all filters are invalid or all values in filters are invalid.\n *  - `groupedFilters`: list of values grouped by filter type.\n *\n * @throws Error if the some of the grouped list of values per filter exceeds the max allowed length\n */\nexport function validateSplitFilters(log, maybeSplitFilters, mode) {\n    // Validation result schema\n    var res = {\n        validFilters: [],\n        queryString: null,\n        groupedFilters: { bySet: [], byName: [], byPrefix: [] },\n    };\n    // do nothing if `splitFilters` param is not a non-empty array or mode is not STANDALONE\n    if (!maybeSplitFilters)\n        return res;\n    // Warn depending on the mode\n    if (isConsumerMode(mode)) {\n        log.warn(WARN_SPLITS_FILTER_IGNORED);\n        return res;\n    }\n    // Check collection type\n    if (!Array.isArray(maybeSplitFilters) || maybeSplitFilters.length === 0) {\n        log.warn(WARN_SPLITS_FILTER_EMPTY);\n        return res;\n    }\n    // Validate filters and group their values by filter type inside `groupedFilters` object\n    res.validFilters = maybeSplitFilters.filter(function (filter, index) {\n        if (filter && validateFilterType(filter.type) && Array.isArray(filter.values)) {\n            res.groupedFilters[filter.type] = res.groupedFilters[filter.type].concat(filter.values);\n            return true;\n        }\n        else {\n            log.warn(WARN_SPLITS_FILTER_INVALID, [index]);\n        }\n        return false;\n    });\n    // By filter type, remove invalid and duplicated values and order them\n    FILTERS_METADATA.forEach(function (_a) {\n        var type = _a.type, maxLength = _a.maxLength;\n        if (res.groupedFilters[type].length > 0)\n            res.groupedFilters[type] = validateSplitFilter(log, type, res.groupedFilters[type], maxLength);\n    });\n    var setFilter = configuredFilter(res.validFilters, 'bySet');\n    // Clean all filters if set filter is present\n    if (setFilter) {\n        if (configuredFilter(res.validFilters, 'byName') || configuredFilter(res.validFilters, 'byPrefix'))\n            log.error(ERROR_SETS_FILTER_EXCLUSIVE);\n        objectAssign(res.groupedFilters, { byName: [], byPrefix: [] });\n    }\n    // build query string\n    res.queryString = queryStringBuilder(res.groupedFilters);\n    log.debug(SETTINGS_SPLITS_FILTER, [res.queryString]);\n    return res;\n}\nexport function validateFlagSets(log, method, flagSets, flagSetsInConfig) {\n    var sets = validateSplits(log, flagSets, method, 'flag sets', 'flag set');\n    var toReturn = sets ? sanitizeFlagSets(log, sets, method) : [];\n    if (flagSetsInConfig.length > 0) {\n        toReturn = toReturn.filter(function (flagSet) {\n            if (flagSetsInConfig.indexOf(flagSet) > -1) {\n                return true;\n            }\n            log.warn(WARN_FLAGSET_NOT_CONFIGURED, [method, flagSet]);\n            return false;\n        });\n    }\n    return toReturn;\n}\n","import { ERROR_EMPTY_ARRAY } from '../../logger/constants';\nimport { uniq } from '../lang';\nimport { validateSplit } from './split';\nexport function validateSplits(log, maybeSplits, method, listName, item) {\n    if (listName === void 0) { listName = 'feature flag names'; }\n    if (item === void 0) { item = 'feature flag name'; }\n    if (Array.isArray(maybeSplits) && maybeSplits.length > 0) {\n        var validatedArray_1 = [];\n        // Remove invalid values\n        maybeSplits.forEach(function (maybeSplit) {\n            var splitName = validateSplit(log, maybeSplit, method, item);\n            if (splitName)\n                validatedArray_1.push(splitName);\n        });\n        // Strip off duplicated values if we have valid split names then return\n        if (validatedArray_1.length)\n            return uniq(validatedArray_1);\n    }\n    log.error(ERROR_EMPTY_ARRAY, [method, listName]);\n    return false;\n}\n","/**\n * Message codes used to trim string log messages from commons and client-side API modules,\n * in order to reduce the minimal SDK size for Browser and eventually other client-side environments.\n *\n * Modules related to the server-side API (e.g., segmentsSyncTask), platform-specific components (e.g., signal listeners)\n * and pluggable components (e.g., pluggable integrations & storages) can use the logger with string literals.\n */\nexport var ENGINE_COMBINER_AND = 0;\nexport var ENGINE_COMBINER_IFELSEIF = 1;\nexport var ENGINE_COMBINER_IFELSEIF_NO_TREATMENT = 2;\nexport var ENGINE_BUCKET = 3;\nexport var ENGINE_MATCHER_ALL = 4;\nexport var ENGINE_MATCHER_BETWEEN = 5;\nexport var ENGINE_MATCHER_BOOLEAN = 6;\nexport var ENGINE_MATCHER_CONTAINS_ALL = 7;\nexport var ENGINE_MATCHER_CONTAINS_ANY = 8;\nexport var ENGINE_MATCHER_CONTAINS_STRING = 9;\nexport var ENGINE_MATCHER_DEPENDENCY = 10;\nexport var ENGINE_MATCHER_DEPENDENCY_PRE = 11;\nexport var ENGINE_MATCHER_EQUAL = 12;\nexport var ENGINE_MATCHER_EQUAL_TO_SET = 13;\nexport var ENGINE_MATCHER_ENDS_WITH = 14;\nexport var ENGINE_MATCHER_GREATER = 15;\nexport var ENGINE_MATCHER_LESS = 16;\nexport var ENGINE_MATCHER_PART_OF = 17;\nexport var ENGINE_MATCHER_SEGMENT = 18;\nexport var ENGINE_MATCHER_STRING = 19;\nexport var ENGINE_MATCHER_STRING_INVALID = 20;\nexport var ENGINE_MATCHER_STARTS_WITH = 21;\nexport var ENGINE_MATCHER_WHITELIST = 22;\nexport var ENGINE_VALUE = 23;\nexport var ENGINE_SANITIZE = 24;\nexport var CLEANUP_REGISTERING = 25;\nexport var CLEANUP_DEREGISTERING = 26;\nexport var RETRIEVE_CLIENT_DEFAULT = 27;\nexport var RETRIEVE_CLIENT_EXISTING = 28;\nexport var RETRIEVE_MANAGER = 29;\nexport var SYNC_OFFLINE_DATA = 30;\nexport var SYNC_SPLITS_FETCH = 31;\nexport var SYNC_SPLITS_NEW = 32;\nexport var SYNC_SPLITS_REMOVED = 33;\nexport var SYNC_SPLITS_SEGMENTS = 34;\nexport var STREAMING_NEW_MESSAGE = 35;\nexport var SYNC_TASK_START = 36;\nexport var SYNC_TASK_EXECUTE = 37;\nexport var SYNC_TASK_STOP = 38;\nexport var SETTINGS_SPLITS_FILTER = 39;\nexport var CLIENT_READY_FROM_CACHE = 100;\nexport var CLIENT_READY = 101;\nexport var IMPRESSION = 102;\nexport var IMPRESSION_QUEUEING = 103;\nexport var NEW_SHARED_CLIENT = 104;\nexport var NEW_FACTORY = 105;\nexport var POLLING_SMART_PAUSING = 106;\nexport var POLLING_START = 107;\nexport var POLLING_STOP = 108;\nexport var SYNC_SPLITS_FETCH_RETRY = 109;\nexport var STREAMING_REFRESH_TOKEN = 110;\nexport var STREAMING_RECONNECT = 111;\nexport var STREAMING_CONNECTING = 112;\nexport var STREAMING_DISABLED = 113;\nexport var STREAMING_DISCONNECTING = 114;\nexport var SUBMITTERS_PUSH_FULL_QUEUE = 115;\nexport var SUBMITTERS_PUSH = 116;\nexport var SYNC_START_POLLING = 117;\nexport var SYNC_CONTINUE_POLLING = 118;\nexport var SYNC_STOP_POLLING = 119;\nexport var EVENTS_TRACKER_SUCCESS = 120;\nexport var IMPRESSIONS_TRACKER_SUCCESS = 121;\nexport var USER_CONSENT_UPDATED = 122;\nexport var USER_CONSENT_NOT_UPDATED = 123;\nexport var USER_CONSENT_INITIAL = 124;\nexport var ENGINE_VALUE_INVALID = 200;\nexport var ENGINE_VALUE_NO_ATTRIBUTES = 201;\nexport var CLIENT_NO_LISTENER = 202;\nexport var CLIENT_NOT_READY = 203;\nexport var SYNC_MYSEGMENTS_FETCH_RETRY = 204;\nexport var SYNC_SPLITS_FETCH_FAILS = 205;\nexport var STREAMING_PARSING_ERROR_FAILS = 206;\nexport var STREAMING_PARSING_MESSAGE_FAILS = 207;\nexport var STREAMING_FALLBACK = 208;\nexport var SUBMITTERS_PUSH_FAILS = 209;\nexport var SUBMITTERS_PUSH_RETRY = 210;\nexport var WARN_SETTING_NULL = 211;\nexport var WARN_TRIMMING_PROPERTIES = 212;\nexport var WARN_CONVERTING = 213;\nexport var WARN_TRIMMING = 214;\nexport var WARN_NOT_EXISTENT_SPLIT = 215;\nexport var WARN_LOWERCASE_TRAFFIC_TYPE = 216;\nexport var WARN_NOT_EXISTENT_TT = 217;\nexport var WARN_INTEGRATION_INVALID = 218;\nexport var WARN_SPLITS_FILTER_IGNORED = 219;\nexport var WARN_SPLITS_FILTER_INVALID = 220;\nexport var WARN_SPLITS_FILTER_EMPTY = 221;\nexport var WARN_SDK_KEY = 222;\nexport var STREAMING_PARSING_MY_SEGMENTS_UPDATE_V2 = 223;\nexport var STREAMING_PARSING_SPLIT_UPDATE = 224;\nexport var WARN_INVALID_FLAGSET = 225;\nexport var WARN_LOWERCASE_FLAGSET = 226;\nexport var WARN_FLAGSET_NOT_CONFIGURED = 227;\nexport var WARN_FLAGSET_WITHOUT_FLAGS = 228;\nexport var ERROR_ENGINE_COMBINER_IFELSEIF = 300;\nexport var ERROR_LOGLEVEL_INVALID = 301;\nexport var ERROR_CLIENT_LISTENER = 302;\nexport var ERROR_CLIENT_CANNOT_GET_READY = 303;\nexport var ERROR_SYNC_OFFLINE_LOADING = 304;\nexport var ERROR_STREAMING_SSE = 305;\nexport var ERROR_STREAMING_AUTH = 306;\nexport var ERROR_IMPRESSIONS_TRACKER = 307;\nexport var ERROR_IMPRESSIONS_LISTENER = 308;\nexport var ERROR_EVENTS_TRACKER = 309;\nexport var ERROR_EVENT_TYPE_FORMAT = 310;\nexport var ERROR_NOT_PLAIN_OBJECT = 311;\nexport var ERROR_SIZE_EXCEEDED = 312;\nexport var ERROR_NOT_FINITE = 313;\nexport var ERROR_CLIENT_DESTROYED = 314;\nexport var ERROR_NULL = 315;\nexport var ERROR_TOO_LONG = 316;\nexport var ERROR_INVALID_KEY_OBJECT = 317;\nexport var ERROR_INVALID = 318;\nexport var ERROR_EMPTY = 319;\nexport var ERROR_EMPTY_ARRAY = 320;\nexport var ERROR_INVALID_CONFIG_PARAM = 321;\nexport var ERROR_HTTP = 322;\nexport var ERROR_LOCALHOST_MODULE_REQUIRED = 323;\nexport var ERROR_STORAGE_INVALID = 324;\nexport var ERROR_NOT_BOOLEAN = 325;\nexport var ERROR_MIN_CONFIG_PARAM = 326;\nexport var ERROR_TOO_MANY_SETS = 327;\nexport var ERROR_SETS_FILTER_EXCLUSIVE = 328;\n// Log prefixes (a.k.a. tags or categories)\nexport var LOG_PREFIX_SETTINGS = 'settings';\nexport var LOG_PREFIX_INSTANTIATION = 'Factory instantiation';\nexport var LOG_PREFIX_ENGINE = 'engine';\nexport var LOG_PREFIX_ENGINE_COMBINER = LOG_PREFIX_ENGINE + ':combiner: ';\nexport var LOG_PREFIX_ENGINE_MATCHER = LOG_PREFIX_ENGINE + ':matcher: ';\nexport var LOG_PREFIX_ENGINE_VALUE = LOG_PREFIX_ENGINE + ':value: ';\nexport var LOG_PREFIX_SYNC = 'sync';\nexport var LOG_PREFIX_SYNC_MANAGER = LOG_PREFIX_SYNC + ':sync-manager: ';\nexport var LOG_PREFIX_SYNC_OFFLINE = LOG_PREFIX_SYNC + ':offline: ';\nexport var LOG_PREFIX_SYNC_STREAMING = LOG_PREFIX_SYNC + ':streaming: ';\nexport var LOG_PREFIX_SYNC_SPLITS = LOG_PREFIX_SYNC + ':featureflag-changes: ';\nexport var LOG_PREFIX_SYNC_SEGMENTS = LOG_PREFIX_SYNC + ':segment-changes: ';\nexport var LOG_PREFIX_SYNC_MYSEGMENTS = LOG_PREFIX_SYNC + ':my-segments: ';\nexport var LOG_PREFIX_SYNC_POLLING = LOG_PREFIX_SYNC + ':polling-manager: ';\nexport var LOG_PREFIX_SYNC_SUBMITTERS = LOG_PREFIX_SYNC + ':submitter: ';\nexport var LOG_PREFIX_IMPRESSIONS_TRACKER = 'impressions-tracker: ';\nexport var LOG_PREFIX_EVENTS_TRACKER = 'events-tracker: ';\nexport var LOG_PREFIX_UNIQUE_KEYS_TRACKER = 'unique-keys-tracker: ';\nexport var LOG_PREFIX_CLEANUP = 'cleanup: ';\n","import { ERROR_NULL, ERROR_INVALID, WARN_TRIMMING, ERROR_EMPTY } from '../../logger/constants';\nimport { isString } from '../lang';\n// include BOM and nbsp\nvar TRIMMABLE_SPACES_REGEX = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/;\nexport function validateSplit(log, maybeSplit, method, item) {\n    if (item === void 0) { item = 'feature flag name'; }\n    if (maybeSplit == undefined) { // eslint-disable-line eqeqeq\n        log.error(ERROR_NULL, [method, item]);\n    }\n    else if (!isString(maybeSplit)) {\n        log.error(ERROR_INVALID, [method, item]);\n    }\n    else {\n        if (TRIMMABLE_SPACES_REGEX.test(maybeSplit)) {\n            log.warn(WARN_TRIMMING, [method, item, maybeSplit]);\n            maybeSplit = maybeSplit.trim();\n        }\n        if (maybeSplit.length > 0) {\n            return maybeSplit;\n        }\n        else {\n            log.error(ERROR_EMPTY, [method, item]);\n        }\n    }\n    return false;\n}\n","import { ERROR_INVALID_CONFIG_PARAM } from '../../logger/constants';\nimport { DEBUG, OPTIMIZED, NONE } from '../constants';\nimport { stringToUpperCase } from '../lang';\nexport function validImpressionsMode(log, impressionsMode) {\n    impressionsMode = stringToUpperCase(impressionsMode);\n    if ([DEBUG, OPTIMIZED, NONE].indexOf(impressionsMode) > -1)\n        return impressionsMode;\n    log.error(ERROR_INVALID_CONFIG_PARAM, ['impressionsMode', [DEBUG, OPTIMIZED, NONE], OPTIMIZED]);\n    return OPTIMIZED;\n}\n","import { isObject, isString, isFiniteNumber, toString } from '../lang';\nimport { ERROR_NULL, WARN_CONVERTING, ERROR_EMPTY, ERROR_TOO_LONG, ERROR_INVALID, ERROR_INVALID_KEY_OBJECT } from '../../logger/constants';\nvar KEY_MAX_LENGTH = 250;\nfunction validateKeyValue(log, maybeKey, method, type) {\n    if (maybeKey == undefined) { // eslint-disable-line eqeqeq\n        log.error(ERROR_NULL, [method, type]);\n        return false;\n    }\n    if (isFiniteNumber(maybeKey)) {\n        log.warn(WARN_CONVERTING, [method, type, maybeKey]);\n        return toString(maybeKey);\n    }\n    if (isString(maybeKey)) {\n        // It's a string, start by trimming the value.\n        maybeKey = maybeKey.trim();\n        // It's aaaaaall good.\n        if (maybeKey.length > 0 && maybeKey.length <= KEY_MAX_LENGTH)\n            return maybeKey;\n        if (maybeKey.length === 0) {\n            log.error(ERROR_EMPTY, [method, type]);\n        }\n        else if (maybeKey.length > KEY_MAX_LENGTH) {\n            log.error(ERROR_TOO_LONG, [method, type]);\n        }\n    }\n    else {\n        log.error(ERROR_INVALID, [method, type]);\n    }\n    return false;\n}\nexport function validateKey(log, maybeKey, method) {\n    if (isObject(maybeKey)) {\n        // Validate key object\n        var matchingKey = validateKeyValue(log, maybeKey.matchingKey, method, 'matchingKey');\n        var bucketingKey = validateKeyValue(log, maybeKey.bucketingKey, method, 'bucketingKey');\n        if (matchingKey && bucketingKey)\n            return {\n                matchingKey: matchingKey,\n                bucketingKey: bucketingKey\n            };\n        log.error(ERROR_INVALID_KEY_OBJECT, [method]);\n        return false;\n    }\n    else {\n        return validateKeyValue(log, maybeKey, method, 'key');\n    }\n}\n","import { ERROR_NULL, ERROR_INVALID, ERROR_EMPTY, WARN_LOWERCASE_TRAFFIC_TYPE } from '../../logger/constants';\nimport { isString } from '../lang';\nvar CAPITAL_LETTERS_REGEX = /[A-Z]/;\nvar item = 'traffic_type';\nexport function validateTrafficType(log, maybeTT, method) {\n    if (maybeTT == undefined) { // eslint-disable-line eqeqeq\n        log.error(ERROR_NULL, [method, item]);\n    }\n    else if (!isString(maybeTT)) {\n        log.error(ERROR_INVALID, [method, item]);\n    }\n    else {\n        if (maybeTT.length === 0) {\n            log.error(ERROR_EMPTY, [method, item]);\n        }\n        else {\n            if (CAPITAL_LETTERS_REGEX.test(maybeTT)) {\n                log.warn(WARN_LOWERCASE_TRAFFIC_TYPE, [method]);\n                maybeTT = maybeTT.toLowerCase();\n            }\n            return maybeTT;\n        }\n    }\n    return false;\n}\n","import { LogLevels, isLogLevelString } from '@splitsoftware/splitio-commons/esm/logger/index';\nimport { CONSENT_GRANTED } from '@splitsoftware/splitio-commons/esm/utils/constants';\nvar packageVersion = '0.13.1';\n/**\n * In browser, the default debug level, can be set via the `localStorage.splitio_debug` item.\n * Acceptable values are: 'DEBUG', 'INFO', 'WARN', 'ERROR', 'NONE'.\n * Other acceptable values are 'on', 'enable' and 'enabled', which are equivalent to 'DEBUG'.\n * Any other string value is equivalent to disable ('NONE').\n */\nvar initialLogLevel;\nvar LS_KEY = 'splitio_debug';\ntry {\n    var initialState = localStorage.getItem(LS_KEY) || '';\n    // Kept to avoid a breaking change ('on', 'enable' and 'enabled' are equivalent)\n    initialLogLevel = /^(enabled?|on)/i.test(initialState) ? LogLevels.DEBUG : isLogLevelString(initialState) ? initialState : LogLevels.NONE;\n    // eslint-disable-next-line no-empty\n}\ncatch (_a) { }\nexport var defaults = {\n    startup: {\n        // Stress the request time used while starting up the SDK.\n        requestTimeoutBeforeReady: 5,\n        // How many quick retries we will do while starting up the SDK.\n        retriesOnFailureBeforeReady: 1,\n        // Maximum amount of time used before notifies me a timeout.\n        readyTimeout: 10,\n        // Amount of time we will wait before the first push of events.\n        eventsFirstPushWindow: 10\n    },\n    // Consent is considered granted by default\n    userConsent: CONSENT_GRANTED,\n    // Instance version.\n    version: \"browserjs-\" + packageVersion,\n    debug: initialLogLevel\n};\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { find } from '../utils/lang';\nimport { _Map } from '../utils/lang/maps';\nexport var LogLevels = {\n    DEBUG: 'DEBUG',\n    INFO: 'INFO',\n    WARN: 'WARN',\n    ERROR: 'ERROR',\n    NONE: 'NONE'\n};\nvar LogLevelIndexes = {\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4,\n    NONE: 5\n};\nexport function isLogLevelString(str) {\n    return !!find(LogLevels, function (lvl) { return str === lvl; });\n}\n// exported for testing purposes only\nexport function _sprintf(format, args) {\n    if (format === void 0) { format = ''; }\n    if (args === void 0) { args = []; }\n    var i = 0;\n    return format.replace(/%s/g, function () {\n        return args[i++];\n    });\n}\nvar defaultOptions = {\n    prefix: 'splitio',\n    logLevel: LogLevels.NONE,\n    showLevel: true,\n};\nvar Logger = /** @class */ (function () {\n    function Logger(options, codes) {\n        this.options = objectAssign({}, defaultOptions, options);\n        this.codes = codes || new _Map();\n        this.logLevel = LogLevelIndexes[this.options.logLevel];\n    }\n    Logger.prototype.setLogLevel = function (logLevel) {\n        this.options.logLevel = logLevel;\n        this.logLevel = LogLevelIndexes[logLevel];\n    };\n    Logger.prototype.debug = function (msg, args) {\n        if (this._shouldLog(LogLevelIndexes.DEBUG))\n            this._log(LogLevels.DEBUG, msg, args);\n    };\n    Logger.prototype.info = function (msg, args) {\n        if (this._shouldLog(LogLevelIndexes.INFO))\n            this._log(LogLevels.INFO, msg, args);\n    };\n    Logger.prototype.warn = function (msg, args) {\n        if (this._shouldLog(LogLevelIndexes.WARN))\n            this._log(LogLevels.WARN, msg, args);\n    };\n    Logger.prototype.error = function (msg, args) {\n        if (this._shouldLog(LogLevelIndexes.ERROR))\n            this._log(LogLevels.ERROR, msg, args);\n    };\n    Logger.prototype._log = function (level, msg, args) {\n        if (typeof msg === 'number') {\n            var format = this.codes.get(msg);\n            msg = format ? _sprintf(format, args) : \"Message code \" + msg + (args ? ', with args: ' + args.toString() : '');\n        }\n        else {\n            if (args)\n                msg = _sprintf(msg, args);\n        }\n        var formattedText = this._generateLogMessage(level, msg);\n        console.log(formattedText);\n    };\n    Logger.prototype._generateLogMessage = function (level, text) {\n        var textPre = ' => ';\n        var result = '';\n        if (this.options.showLevel) {\n            result += '[' + level + ']' + (level === LogLevels.INFO || level === LogLevels.WARN ? ' ' : '') + ' ';\n        }\n        if (this.options.prefix) {\n            result += this.options.prefix + textPre;\n        }\n        return result += text;\n    };\n    Logger.prototype._shouldLog = function (level) {\n        return level >= this.logLevel;\n    };\n    return Logger;\n}());\nexport { Logger };\n","/**\n * Map implementation based on es6-map polyfill (https://github.com/medikoo/es6-map/blob/master/polyfill.js),\n * with the minimal features used by the SDK.\n\nCopyright (C) 2013 Mariusz Nowak (www.medikoo.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n**/\nvar MapPoly = /** @class */ (function () {\n    // unlike ES6 `Map`, it only accepts an array as first argument iterable\n    function MapPoly(entries) {\n        var _this = this;\n        this.__mapKeysData__ = [];\n        this.__mapValuesData__ = [];\n        if (Array.isArray(entries))\n            entries.forEach(function (entry) { _this.set(entry[0], entry[1]); });\n    }\n    MapPoly.prototype.clear = function () {\n        if (!this.__mapKeysData__.length)\n            return;\n        this.__mapKeysData__.length = 0;\n        this.__mapValuesData__.length = 0;\n    };\n    MapPoly.prototype.delete = function (key) {\n        var index = this.__mapKeysData__.indexOf(key);\n        if (index === -1)\n            return false;\n        this.__mapKeysData__.splice(index, 1);\n        this.__mapValuesData__.splice(index, 1);\n        return true;\n    };\n    MapPoly.prototype.forEach = function (callbackfn, thisArg) {\n        for (var i = 0; i < this.__mapKeysData__.length; i++) {\n            callbackfn.call(thisArg, this.__mapValuesData__[i], this.__mapKeysData__[i], this);\n        }\n    };\n    MapPoly.prototype.get = function (key) {\n        var index = this.__mapKeysData__.indexOf(key);\n        if (index === -1)\n            return;\n        return this.__mapValuesData__[index];\n    };\n    MapPoly.prototype.has = function (key) {\n        return this.__mapKeysData__.indexOf(key) !== -1;\n    };\n    MapPoly.prototype.set = function (key, value) {\n        var index = this.__mapKeysData__.indexOf(key);\n        if (index === -1)\n            index = this.__mapKeysData__.push(key) - 1;\n        this.__mapValuesData__[index] = value;\n        return this;\n    };\n    Object.defineProperty(MapPoly.prototype, \"size\", {\n        get: function () {\n            return this.__mapKeysData__.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return MapPoly;\n}());\nexport { MapPoly };\n/**\n * return the Map constructor to use. If native Map is not available or it doesn't support the required features (e.g., IE11),\n * a ponyfill with minimal features is returned instead.\n *\n * Exported for testing purposes only.\n */\nexport function __getMapConstructor() {\n    // eslint-disable-next-line compat/compat\n    if (typeof Array.from === 'function' && typeof Map === 'function' && Map.prototype && Map.prototype.values) {\n        return Map;\n    }\n    return MapPoly;\n}\nexport var _Map = __getMapConstructor();\n","// For client-side SDKs, machine IP and Hostname are not captured and sent to Split backend.\nexport function validateRuntime() {\n    return {\n        ip: false,\n        hostname: false\n    };\n}\n","import { InMemoryStorageCSFactory } from '../../../storages/inMemory/InMemoryStorageCS';\nimport { ERROR_STORAGE_INVALID } from '../../../logger/constants';\nimport { LOCALHOST_MODE, STANDALONE_MODE, STORAGE_PLUGGABLE, STORAGE_LOCALSTORAGE, STORAGE_MEMORY } from '../../../utils/constants';\nexport function __InLocalStorageMockFactory(params) {\n    var result = InMemoryStorageCSFactory(params);\n    result.splits.checkCache = function () { return true; }; // to emit SDK_READY_FROM_CACHE\n    return result;\n}\n__InLocalStorageMockFactory.type = STORAGE_MEMORY;\n/**\n * This function validates `settings.storage` object\n *\n * @param {any} settings config object provided by the user to initialize the sdk\n *\n * @returns {Object} valid storage factory. Default to `InMemoryStorageCSFactory` if the provided storage is invalid or not compatible with the sdk mode if mode is standalone or localhost\n *\n * @throws error if mode is consumer and the provided storage is not compatible\n */\nexport function validateStorageCS(settings) {\n    var _a = settings.storage, storage = _a === void 0 ? InMemoryStorageCSFactory : _a, log = settings.log, mode = settings.mode;\n    // If an invalid storage is provided, fallback into MEMORY\n    if (typeof storage !== 'function' || [STORAGE_MEMORY, STORAGE_LOCALSTORAGE, STORAGE_PLUGGABLE].indexOf(storage.type) === -1) {\n        storage = InMemoryStorageCSFactory;\n        log.error(ERROR_STORAGE_INVALID);\n    }\n    // In localhost mode with InLocalStorage, fallback to a mock InLocalStorage to emit SDK_READY_FROM_CACHE\n    if (mode === LOCALHOST_MODE && storage.type === STORAGE_LOCALSTORAGE) {\n        return __InLocalStorageMockFactory;\n    }\n    if ([LOCALHOST_MODE, STANDALONE_MODE].indexOf(mode) === -1) {\n        // Consumer modes require an async storage\n        if (storage.type !== STORAGE_PLUGGABLE)\n            throw new Error('A PluggableStorage instance is required on consumer mode');\n    }\n    else {\n        // Standalone and localhost modes require a sync storage\n        if (storage.type === STORAGE_PLUGGABLE) {\n            storage = InMemoryStorageCSFactory;\n            log.error(ERROR_STORAGE_INVALID, [' It requires consumer mode.']);\n        }\n    }\n    // return default InMemory storage if provided one is not valid\n    return storage;\n}\n","import { SplitsCacheInMemory } from './SplitsCacheInMemory';\nimport { MySegmentsCacheInMemory } from './MySegmentsCacheInMemory';\nimport { ImpressionsCacheInMemory } from './ImpressionsCacheInMemory';\nimport { EventsCacheInMemory } from './EventsCacheInMemory';\nimport { ImpressionCountsCacheInMemory } from './ImpressionCountsCacheInMemory';\nimport { DEBUG, LOCALHOST_MODE, NONE, STORAGE_MEMORY } from '../../utils/constants';\nimport { shouldRecordTelemetry, TelemetryCacheInMemory } from './TelemetryCacheInMemory';\nimport { UniqueKeysCacheInMemoryCS } from './UniqueKeysCacheInMemoryCS';\n/**\n * InMemory storage factory for standalone client-side SplitFactory\n *\n * @param params parameters required by EventsCacheSync\n */\nexport function InMemoryStorageCSFactory(params) {\n    var _a = params.settings, _b = _a.scheduler, impressionsQueueSize = _b.impressionsQueueSize, eventsQueueSize = _b.eventsQueueSize, _c = _a.sync, impressionsMode = _c.impressionsMode, __splitFiltersValidation = _c.__splitFiltersValidation;\n    var splits = new SplitsCacheInMemory(__splitFiltersValidation);\n    var segments = new MySegmentsCacheInMemory();\n    var storage = {\n        splits: splits,\n        segments: segments,\n        impressions: new ImpressionsCacheInMemory(impressionsQueueSize),\n        impressionCounts: impressionsMode !== DEBUG ? new ImpressionCountsCacheInMemory() : undefined,\n        events: new EventsCacheInMemory(eventsQueueSize),\n        telemetry: shouldRecordTelemetry(params) ? new TelemetryCacheInMemory(splits, segments) : undefined,\n        uniqueKeys: impressionsMode === NONE ? new UniqueKeysCacheInMemoryCS() : undefined,\n        // When using MEMORY we should clean all the caches to leave them empty\n        destroy: function () {\n            this.splits.clear();\n            this.segments.clear();\n            this.impressions.clear();\n            this.impressionCounts && this.impressionCounts.clear();\n            this.events.clear();\n            this.uniqueKeys && this.uniqueKeys.clear();\n        },\n        // When using shared instanciation with MEMORY we reuse everything but segments (they are unique per key)\n        shared: function () {\n            return {\n                splits: this.splits,\n                segments: new MySegmentsCacheInMemory(),\n                impressions: this.impressions,\n                impressionCounts: this.impressionCounts,\n                events: this.events,\n                telemetry: this.telemetry,\n                // Set a new splits cache to clean it for the client without affecting other clients\n                destroy: function () {\n                    this.splits = new SplitsCacheInMemory(__splitFiltersValidation);\n                    this.segments.clear();\n                }\n            };\n        },\n    };\n    // @TODO revisit storage logic in localhost mode\n    // No tracking data in localhost mode to avoid memory leaks\n    if (params.settings.mode === LOCALHOST_MODE) {\n        var noopTrack = function () { return true; };\n        storage.impressions.track = noopTrack;\n        storage.events.track = noopTrack;\n        if (storage.impressionCounts)\n            storage.impressionCounts.track = noopTrack;\n        if (storage.uniqueKeys)\n            storage.uniqueKeys.track = noopTrack;\n    }\n    return storage;\n}\nInMemoryStorageCSFactory.type = STORAGE_MEMORY;\n","import { __extends } from \"tslib\";\nimport { AbstractSplitsCacheSync, usesSegments } from '../AbstractSplitsCacheSync';\nimport { isFiniteNumber } from '../../utils/lang';\nimport { _Set } from '../../utils/lang/sets';\n/**\n * Default ISplitsCacheSync implementation that stores split definitions in memory.\n * Supported by all JS runtimes.\n */\nvar SplitsCacheInMemory = /** @class */ (function (_super) {\n    __extends(SplitsCacheInMemory, _super);\n    function SplitsCacheInMemory(splitFiltersValidation) {\n        var _this = _super.call(this) || this;\n        _this.splitsCache = {};\n        _this.ttCache = {};\n        _this.changeNumber = -1;\n        _this.splitsWithSegmentsCount = 0;\n        _this.flagSetsCache = {};\n        _this.flagSetsFilter = splitFiltersValidation ? splitFiltersValidation.groupedFilters.bySet : [];\n        return _this;\n    }\n    SplitsCacheInMemory.prototype.clear = function () {\n        this.splitsCache = {};\n        this.ttCache = {};\n        this.changeNumber = -1;\n        this.splitsWithSegmentsCount = 0;\n    };\n    SplitsCacheInMemory.prototype.addSplit = function (name, split) {\n        var previousSplit = this.getSplit(name);\n        if (previousSplit) { // We had this Split already\n            var previousTtName = previousSplit.trafficTypeName;\n            this.ttCache[previousTtName]--;\n            if (!this.ttCache[previousTtName])\n                delete this.ttCache[previousTtName];\n            this.removeFromFlagSets(previousSplit.name, previousSplit.sets);\n            if (usesSegments(previousSplit)) { // Substract from segments count for the previous version of this Split.\n                this.splitsWithSegmentsCount--;\n            }\n        }\n        if (split) {\n            // Store the Split.\n            this.splitsCache[name] = split;\n            // Update TT cache\n            var ttName = split.trafficTypeName;\n            this.ttCache[ttName] = (this.ttCache[ttName] || 0) + 1;\n            this.addToFlagSets(split);\n            // Add to segments count for the new version of the Split\n            if (usesSegments(split))\n                this.splitsWithSegmentsCount++;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    SplitsCacheInMemory.prototype.removeSplit = function (name) {\n        var split = this.getSplit(name);\n        if (split) {\n            // Delete the Split\n            delete this.splitsCache[name];\n            var ttName = split.trafficTypeName;\n            this.ttCache[ttName]--; // Update tt cache\n            if (!this.ttCache[ttName])\n                delete this.ttCache[ttName];\n            this.removeFromFlagSets(split.name, split.sets);\n            // Update the segments count.\n            if (usesSegments(split))\n                this.splitsWithSegmentsCount--;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    SplitsCacheInMemory.prototype.getSplit = function (name) {\n        return this.splitsCache[name] || null;\n    };\n    SplitsCacheInMemory.prototype.setChangeNumber = function (changeNumber) {\n        this.changeNumber = changeNumber;\n        return true;\n    };\n    SplitsCacheInMemory.prototype.getChangeNumber = function () {\n        return this.changeNumber;\n    };\n    SplitsCacheInMemory.prototype.getSplitNames = function () {\n        return Object.keys(this.splitsCache);\n    };\n    SplitsCacheInMemory.prototype.trafficTypeExists = function (trafficType) {\n        return isFiniteNumber(this.ttCache[trafficType]) && this.ttCache[trafficType] > 0;\n    };\n    SplitsCacheInMemory.prototype.usesSegments = function () {\n        return this.getChangeNumber() === -1 || this.splitsWithSegmentsCount > 0;\n    };\n    SplitsCacheInMemory.prototype.getNamesByFlagSets = function (flagSets) {\n        var _this = this;\n        return flagSets.map(function (flagSet) { return _this.flagSetsCache[flagSet] || new _Set(); });\n    };\n    SplitsCacheInMemory.prototype.addToFlagSets = function (featureFlag) {\n        var _this = this;\n        if (!featureFlag.sets)\n            return;\n        featureFlag.sets.forEach(function (featureFlagSet) {\n            if (_this.flagSetsFilter.length > 0 && !_this.flagSetsFilter.some(function (filterFlagSet) { return filterFlagSet === featureFlagSet; }))\n                return;\n            if (!_this.flagSetsCache[featureFlagSet])\n                _this.flagSetsCache[featureFlagSet] = new _Set([]);\n            _this.flagSetsCache[featureFlagSet].add(featureFlag.name);\n        });\n    };\n    SplitsCacheInMemory.prototype.removeFromFlagSets = function (featureFlagName, flagSets) {\n        var _this = this;\n        if (!flagSets)\n            return;\n        flagSets.forEach(function (flagSet) {\n            _this.removeNames(flagSet, featureFlagName);\n        });\n    };\n    SplitsCacheInMemory.prototype.removeNames = function (flagSetName, featureFlagName) {\n        if (!this.flagSetsCache[flagSetName])\n            return;\n        this.flagSetsCache[flagSetName].delete(featureFlagName);\n        if (this.flagSetsCache[flagSetName].size === 0)\n            delete this.flagSetsCache[flagSetName];\n    };\n    return SplitsCacheInMemory;\n}(AbstractSplitsCacheSync));\nexport { SplitsCacheInMemory };\n","import { objectAssign } from '../utils/lang/objectAssign';\n/**\n * This class provides a skeletal implementation of the ISplitsCacheSync interface\n * to minimize the effort required to implement this interface.\n */\nvar AbstractSplitsCacheSync = /** @class */ (function () {\n    function AbstractSplitsCacheSync() {\n    }\n    AbstractSplitsCacheSync.prototype.addSplits = function (entries) {\n        var _this = this;\n        return entries.map(function (keyValuePair) { return _this.addSplit(keyValuePair[0], keyValuePair[1]); });\n    };\n    AbstractSplitsCacheSync.prototype.removeSplits = function (names) {\n        var _this = this;\n        return names.map(function (name) { return _this.removeSplit(name); });\n    };\n    AbstractSplitsCacheSync.prototype.getSplits = function (names) {\n        var _this = this;\n        var splits = {};\n        names.forEach(function (name) {\n            splits[name] = _this.getSplit(name);\n        });\n        return splits;\n    };\n    AbstractSplitsCacheSync.prototype.getAll = function () {\n        var _this = this;\n        return this.getSplitNames().map(function (key) { return _this.getSplit(key); });\n    };\n    /**\n     * Check if the splits information is already stored in cache. This data can be preloaded.\n     * It is used as condition to emit SDK_SPLITS_CACHE_LOADED, and then SDK_READY_FROM_CACHE.\n     */\n    AbstractSplitsCacheSync.prototype.checkCache = function () {\n        return false;\n    };\n    /**\n     * Kill `name` split and set `defaultTreatment` and `changeNumber`.\n     * Used for SPLIT_KILL push notifications.\n     *\n     * @param {string} name\n     * @param {string} defaultTreatment\n     * @param {number} changeNumber\n     * @returns {boolean} `true` if the operation successed updating the split, or `false` if no split is updated,\n     * for instance, if the `changeNumber` is old, or if the split is not found (e.g., `/splitchanges` hasn't been fetched yet), or if the storage fails to apply the update.\n     */\n    AbstractSplitsCacheSync.prototype.killLocally = function (name, defaultTreatment, changeNumber) {\n        var split = this.getSplit(name);\n        if (split && (!split.changeNumber || split.changeNumber < changeNumber)) {\n            var newSplit = objectAssign({}, split);\n            newSplit.killed = true;\n            newSplit.defaultTreatment = defaultTreatment;\n            newSplit.changeNumber = changeNumber;\n            return this.addSplit(name, newSplit);\n        }\n        return false;\n    };\n    return AbstractSplitsCacheSync;\n}());\nexport { AbstractSplitsCacheSync };\n/**\n * Given a parsed split, it returns a boolean flagging if its conditions use segments matchers (rules & whitelists).\n * This util is intended to simplify the implementation of `splitsCache::usesSegments` method\n */\nexport function usesSegments(split) {\n    var conditions = split.conditions || [];\n    for (var i = 0; i < conditions.length; i++) {\n        var matchers = conditions[i].matcherGroup.matchers;\n        for (var j = 0; j < matchers.length; j++) {\n            if (matchers[j].matcherType === 'IN_SEGMENT')\n                return true;\n        }\n    }\n    return false;\n}\n","import { __extends } from \"tslib\";\nimport { AbstractSegmentsCacheSync } from '../AbstractSegmentsCacheSync';\n/**\n * Default MySegmentsCacheInMemory implementation that stores MySegments in memory.\n * Supported by all JS runtimes.\n */\nvar MySegmentsCacheInMemory = /** @class */ (function (_super) {\n    __extends(MySegmentsCacheInMemory, _super);\n    function MySegmentsCacheInMemory() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.segmentCache = {};\n        return _this;\n    }\n    MySegmentsCacheInMemory.prototype.clear = function () {\n        this.segmentCache = {};\n    };\n    MySegmentsCacheInMemory.prototype.addToSegment = function (name) {\n        this.segmentCache[name] = true;\n        return true;\n    };\n    MySegmentsCacheInMemory.prototype.removeFromSegment = function (name) {\n        delete this.segmentCache[name];\n        return true;\n    };\n    MySegmentsCacheInMemory.prototype.isInSegment = function (name) {\n        return this.segmentCache[name] === true;\n    };\n    /**\n     * Reset (update) the cached list of segments with the given list, removing and adding segments if necessary.\n     * @NOTE based on the way we use segments in the browser, this way is the best option\n     *\n     * @param {string[]} names list of segment names\n     * @returns boolean indicating if the cache was updated (i.e., given list was different from the cached one)\n     */\n    MySegmentsCacheInMemory.prototype.resetSegments = function (names) {\n        var _this = this;\n        var isDiff = false;\n        var index;\n        var storedSegmentKeys = Object.keys(this.segmentCache);\n        // Extreme fast => everything is empty\n        if (names.length === 0 && storedSegmentKeys.length === names.length)\n            return isDiff;\n        // Quick path\n        if (storedSegmentKeys.length !== names.length) {\n            isDiff = true;\n            this.segmentCache = {};\n            names.forEach(function (s) {\n                _this.addToSegment(s);\n            });\n        }\n        else {\n            // Slowest path => we need to find at least 1 difference because\n            for (index = 0; index < names.length && this.isInSegment(names[index]); index++) {\n                // TODO: why empty statement?\n            }\n            if (index < names.length) {\n                isDiff = true;\n                this.segmentCache = {};\n                names.forEach(function (s) {\n                    _this.addToSegment(s);\n                });\n            }\n        }\n        return isDiff;\n    };\n    MySegmentsCacheInMemory.prototype.getRegisteredSegments = function () {\n        return Object.keys(this.segmentCache);\n    };\n    MySegmentsCacheInMemory.prototype.getKeysCount = function () {\n        return 1;\n    };\n    return MySegmentsCacheInMemory;\n}(AbstractSegmentsCacheSync));\nexport { MySegmentsCacheInMemory };\n","/**\n * This class provides a skeletal implementation of the ISegmentsCacheSync interface\n * to minimize the effort required to implement this interface.\n */\nvar AbstractSegmentsCacheSync = /** @class */ (function () {\n    function AbstractSegmentsCacheSync() {\n    }\n    /**\n     * For server-side synchronizer: add the given list of segments to the cache, with an empty list of keys. The segments that already exist are not modified.\n     * For client-side synchronizer: the method is not used.\n     */\n    AbstractSegmentsCacheSync.prototype.registerSegments = function (names) { return false; };\n    /**\n     * For server-side synchronizer: set the change number of `name` segment.\n     * For client-side synchronizer: the method is not used.\n     */\n    AbstractSegmentsCacheSync.prototype.setChangeNumber = function (name, changeNumber) { return true; };\n    /**\n     * For server-side synchronizer: get the change number of `name` segment.\n     * For client-side synchronizer: the method is not used.\n     */\n    AbstractSegmentsCacheSync.prototype.getChangeNumber = function (name) { return -1; };\n    /**\n     * For server-side synchronizer: the method is not used.\n     * For client-side synchronizer: reset the cache with the given list of segments.\n     */\n    AbstractSegmentsCacheSync.prototype.resetSegments = function (names) { return true; };\n    return AbstractSegmentsCacheSync;\n}());\nexport { AbstractSegmentsCacheSync };\n","var ImpressionsCacheInMemory = /** @class */ (function () {\n    /**\n     *\n     * @param impressionsQueueSize number of queued impressions to call onFullQueueCb.\n     * Default value is 0, that means no maximum value, in case we want to avoid this being triggered.\n     */\n    function ImpressionsCacheInMemory(impressionsQueueSize) {\n        if (impressionsQueueSize === void 0) { impressionsQueueSize = 0; }\n        this.maxQueue = impressionsQueueSize;\n        this.queue = [];\n    }\n    ImpressionsCacheInMemory.prototype.setOnFullQueueCb = function (cb) {\n        this.onFullQueue = cb;\n    };\n    /**\n     * Store impressions in sequential order\n     */\n    ImpressionsCacheInMemory.prototype.track = function (data) {\n        var _a;\n        (_a = this.queue).push.apply(_a, data);\n        // Check if the cache queue is full and we need to flush it.\n        if (this.maxQueue > 0 && this.queue.length >= this.maxQueue && this.onFullQueue) {\n            this.onFullQueue();\n        }\n    };\n    /**\n     * Clear the data stored on the cache.\n     */\n    ImpressionsCacheInMemory.prototype.clear = function () {\n        this.queue = [];\n    };\n    /**\n     * Pop the collected data, used as payload for posting.\n     */\n    ImpressionsCacheInMemory.prototype.pop = function (toMerge) {\n        var data = this.queue;\n        this.clear();\n        return toMerge ? toMerge.concat(data) : data;\n    };\n    /**\n     * Check if the cache is empty.\n     */\n    ImpressionsCacheInMemory.prototype.isEmpty = function () {\n        return this.queue.length === 0;\n    };\n    return ImpressionsCacheInMemory;\n}());\nexport { ImpressionsCacheInMemory };\n","var MAX_QUEUE_BYTE_SIZE = 5 * 1024 * 1024; // 5M\nvar EventsCacheInMemory = /** @class */ (function () {\n    /**\n     *\n     * @param eventsQueueSize number of queued events to call onFullQueueCb.\n     * Default value is 0, that means no maximum value, in case we want to avoid this being triggered.\n     */\n    function EventsCacheInMemory(eventsQueueSize) {\n        if (eventsQueueSize === void 0) { eventsQueueSize = 0; }\n        this.maxQueue = eventsQueueSize;\n        this.queue = [];\n        this.queueByteSize = 0;\n    }\n    EventsCacheInMemory.prototype.setOnFullQueueCb = function (cb) {\n        this.onFullQueue = cb;\n    };\n    /**\n     * Add a new event object at the end of the queue.\n     */\n    EventsCacheInMemory.prototype.track = function (data, size) {\n        if (size === void 0) { size = 0; }\n        this.queueByteSize += size;\n        this.queue.push(data);\n        this._checkForFlush();\n        return true;\n    };\n    /**\n     * Clear the data stored on the cache.\n     */\n    EventsCacheInMemory.prototype.clear = function () {\n        this.queue = [];\n        this.queueByteSize = 0;\n    };\n    /**\n     * Pop the collected data, used as payload for posting.\n     */\n    EventsCacheInMemory.prototype.pop = function (toMerge) {\n        var data = this.queue;\n        this.clear();\n        return toMerge ? toMerge.concat(data) : data;\n    };\n    /**\n     * Check if the cache is empty.\n     */\n    EventsCacheInMemory.prototype.isEmpty = function () {\n        return this.queue.length === 0;\n    };\n    /**\n     * Check if the cache queue is full and we need to flush it.\n     */\n    EventsCacheInMemory.prototype._checkForFlush = function () {\n        if ((this.queueByteSize > MAX_QUEUE_BYTE_SIZE) ||\n            // 0 means no maximum value, in case we want to avoid this being triggered. Size limit is not affected by it.\n            (this.maxQueue > 0 && this.queue.length >= this.maxQueue)) {\n            this.onFullQueue && this.onFullQueue();\n        }\n    };\n    return EventsCacheInMemory;\n}());\nexport { EventsCacheInMemory };\n","import { truncateTimeFrame } from '../../utils/time';\nimport { DEFAULT_CACHE_SIZE } from '../inRedis/constants';\nvar ImpressionCountsCacheInMemory = /** @class */ (function () {\n    function ImpressionCountsCacheInMemory(impressionCountsCacheSize) {\n        if (impressionCountsCacheSize === void 0) { impressionCountsCacheSize = DEFAULT_CACHE_SIZE; }\n        this.cache = {};\n        this.cacheSize = 0;\n        this.maxStorage = impressionCountsCacheSize;\n    }\n    /**\n    * Builds key to be stored in the cache with the featureName and the timeFrame truncated.\n    */\n    ImpressionCountsCacheInMemory.prototype._makeKey = function (featureName, timeFrame) {\n        return featureName + \"::\" + truncateTimeFrame(timeFrame);\n    };\n    /**\n    * Increments the quantity of impressions with the passed featureName and timeFrame.\n    */\n    ImpressionCountsCacheInMemory.prototype.track = function (featureName, timeFrame, amount) {\n        var key = this._makeKey(featureName, timeFrame);\n        var currentAmount = this.cache[key];\n        this.cache[key] = currentAmount ? currentAmount + amount : amount;\n        if (this.onFullQueue) {\n            this.cacheSize = this.cacheSize + amount;\n            if (this.cacheSize >= this.maxStorage) {\n                this.onFullQueue();\n            }\n        }\n    };\n    /**\n     * Pop the collected data, used as payload for posting.\n     */\n    ImpressionCountsCacheInMemory.prototype.pop = function (toMerge) {\n        var data = this.cache;\n        this.clear();\n        if (toMerge) {\n            Object.keys(data).forEach(function (key) {\n                if (toMerge[key])\n                    toMerge[key] += data[key];\n                else\n                    toMerge[key] = data[key];\n            });\n            return toMerge;\n        }\n        return data;\n    };\n    /**\n     * Clear the data stored on the cache.\n     */\n    ImpressionCountsCacheInMemory.prototype.clear = function () {\n        this.cache = {};\n        this.cacheSize = 0;\n    };\n    /**\n     * Check if the cache is empty.\n     */\n    ImpressionCountsCacheInMemory.prototype.isEmpty = function () {\n        return Object.keys(this.cache).length === 0;\n    };\n    return ImpressionCountsCacheInMemory;\n}());\nexport { ImpressionCountsCacheInMemory };\n","var DEDUP_WINDOW_SIZE_MS = 3600 * 1000;\n/**\n* Truncates de time frame received with the time window.\n*/\nexport function truncateTimeFrame(timestampInMs) {\n    return timestampInMs - (timestampInMs % DEDUP_WINDOW_SIZE_MS);\n}\n","export var LOG_PREFIX = 'storage:redis: ';\nexport var DEFAULT_CACHE_SIZE = 30000;\nexport var REFRESH_RATE = 300000; // 300.000 ms = start after 5 mins\nexport var TTL_REFRESH = 3600; // 1hr\n","import { DEDUPED, DROPPED, LOCALHOST_MODE, QUEUED } from '../../utils/constants';\nimport { findLatencyIndex } from '../findLatencyIndex';\nvar MAX_STREAMING_EVENTS = 20;\nvar MAX_TAGS = 10;\nexport var MAX_LATENCY_BUCKET_COUNT = 23;\nexport function newBuckets() {\n    // MAX_LATENCY_BUCKET_COUNT (length) is 23\n    // Not using Array.fill for old browsers compatibility\n    return [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n}\nvar ACCEPTANCE_RANGE = 0.001;\n/**\n * Record telemetry if mode is not localhost.\n * All factory instances track telemetry on server-side, and 0.1% on client-side.\n */\nexport function shouldRecordTelemetry(_a) {\n    var settings = _a.settings;\n    return settings.mode !== LOCALHOST_MODE && (settings.core.key === undefined || Math.random() <= ACCEPTANCE_RANGE);\n}\nvar TelemetryCacheInMemory = /** @class */ (function () {\n    function TelemetryCacheInMemory(splits, segments) {\n        this.splits = splits;\n        this.segments = segments;\n        // isEmpty flag\n        this.e = true;\n        this.notReadyUsage = 0;\n        /** Usage stats */\n        this.impressionStats = [0, 0, 0];\n        this.eventStats = [0, 0];\n        this.lastSync = {};\n        this.httpErrors = {};\n        this.httpLatencies = {};\n        this.authRejections = 0;\n        this.tokenRefreshes = 0;\n        this.streamingEvents = [];\n        this.tags = [];\n        this.exceptions = {};\n        this.latencies = {};\n        this.updatesFromSSE = {\n            sp: 0,\n            ms: 0\n        };\n    }\n    TelemetryCacheInMemory.prototype.isEmpty = function () { return this.e; };\n    TelemetryCacheInMemory.prototype.clear = function () { };\n    TelemetryCacheInMemory.prototype.pop = function () {\n        this.e = true;\n        return {\n            lS: this.getLastSynchronization(),\n            mL: this.popLatencies(),\n            mE: this.popExceptions(),\n            hE: this.popHttpErrors(),\n            hL: this.popHttpLatencies(),\n            tR: this.popTokenRefreshes(),\n            aR: this.popAuthRejections(),\n            iQ: this.getImpressionStats(QUEUED),\n            iDe: this.getImpressionStats(DEDUPED),\n            iDr: this.getImpressionStats(DROPPED),\n            spC: this.splits && this.splits.getSplitNames().length,\n            seC: this.segments && this.segments.getRegisteredSegments().length,\n            skC: this.segments && this.segments.getKeysCount(),\n            sL: this.getSessionLength(),\n            eQ: this.getEventStats(QUEUED),\n            eD: this.getEventStats(DROPPED),\n            sE: this.popStreamingEvents(),\n            t: this.popTags(),\n            ufs: this.popUpdatesFromSSE(),\n        };\n    };\n    TelemetryCacheInMemory.prototype.getTimeUntilReady = function () {\n        return this.timeUntilReady;\n    };\n    TelemetryCacheInMemory.prototype.recordTimeUntilReady = function (ms) {\n        this.timeUntilReady = ms;\n    };\n    TelemetryCacheInMemory.prototype.getTimeUntilReadyFromCache = function () {\n        return this.timeUntilReadyFromCache;\n    };\n    TelemetryCacheInMemory.prototype.recordTimeUntilReadyFromCache = function (ms) {\n        this.timeUntilReadyFromCache = ms;\n    };\n    TelemetryCacheInMemory.prototype.getNonReadyUsage = function () {\n        return this.notReadyUsage;\n    };\n    TelemetryCacheInMemory.prototype.recordNonReadyUsage = function () {\n        this.notReadyUsage++;\n    };\n    TelemetryCacheInMemory.prototype.getImpressionStats = function (type) {\n        return this.impressionStats[type];\n    };\n    TelemetryCacheInMemory.prototype.recordImpressionStats = function (type, count) {\n        this.impressionStats[type] += count;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.getEventStats = function (type) {\n        return this.eventStats[type];\n    };\n    TelemetryCacheInMemory.prototype.recordEventStats = function (type, count) {\n        this.eventStats[type] += count;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.getLastSynchronization = function () {\n        return this.lastSync;\n    };\n    TelemetryCacheInMemory.prototype.recordSuccessfulSync = function (resource, timeMs) {\n        this.lastSync[resource] = timeMs;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.popHttpErrors = function () {\n        var result = this.httpErrors;\n        this.httpErrors = {};\n        return result;\n    };\n    TelemetryCacheInMemory.prototype.recordHttpError = function (resource, status) {\n        var statusErrors = (this.httpErrors[resource] = this.httpErrors[resource] || {});\n        statusErrors[status] = (statusErrors[status] || 0) + 1;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.popHttpLatencies = function () {\n        var result = this.httpLatencies;\n        this.httpLatencies = {};\n        return result;\n    };\n    TelemetryCacheInMemory.prototype.recordHttpLatency = function (resource, latencyMs) {\n        var latencyBuckets = (this.httpLatencies[resource] = this.httpLatencies[resource] || newBuckets());\n        latencyBuckets[findLatencyIndex(latencyMs)]++;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.popAuthRejections = function () {\n        var result = this.authRejections;\n        this.authRejections = 0;\n        return result;\n    };\n    TelemetryCacheInMemory.prototype.recordAuthRejections = function () {\n        this.authRejections++;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.popTokenRefreshes = function () {\n        var result = this.tokenRefreshes;\n        this.tokenRefreshes = 0;\n        return result;\n    };\n    TelemetryCacheInMemory.prototype.recordTokenRefreshes = function () {\n        this.tokenRefreshes++;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.popStreamingEvents = function () {\n        return this.streamingEvents.splice(0);\n    };\n    TelemetryCacheInMemory.prototype.recordStreamingEvents = function (streamingEvent) {\n        if (this.streamingEvents.length < MAX_STREAMING_EVENTS) {\n            this.streamingEvents.push(streamingEvent);\n        }\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.popTags = function () {\n        return this.tags.splice(0);\n    };\n    TelemetryCacheInMemory.prototype.addTag = function (tag) {\n        if (this.tags.length < MAX_TAGS) {\n            this.tags.push(tag);\n        }\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.getSessionLength = function () {\n        return this.sessionLength;\n    };\n    TelemetryCacheInMemory.prototype.recordSessionLength = function (ms) {\n        this.sessionLength = ms;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.popExceptions = function () {\n        var result = this.exceptions;\n        this.exceptions = {};\n        return result;\n    };\n    TelemetryCacheInMemory.prototype.recordException = function (method) {\n        this.exceptions[method] = (this.exceptions[method] || 0) + 1;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.popLatencies = function () {\n        var result = this.latencies;\n        this.latencies = {};\n        return result;\n    };\n    TelemetryCacheInMemory.prototype.recordLatency = function (method, latencyMs) {\n        var latencyBuckets = (this.latencies[method] = this.latencies[method] || newBuckets());\n        latencyBuckets[findLatencyIndex(latencyMs)]++;\n        this.e = false;\n    };\n    TelemetryCacheInMemory.prototype.popUpdatesFromSSE = function () {\n        var result = this.updatesFromSSE;\n        this.updatesFromSSE = {\n            sp: 0,\n            ms: 0,\n        };\n        return result;\n    };\n    TelemetryCacheInMemory.prototype.recordUpdatesFromSSE = function (type) {\n        this.updatesFromSSE[type]++;\n        this.e = false;\n    };\n    return TelemetryCacheInMemory;\n}());\nexport { TelemetryCacheInMemory };\n","import { isNaNNumber } from '../utils/lang';\nvar MIN = 0;\nvar MAX = 22;\nvar BASE = 1.5;\n/**\n * Calculates buckets from latency in milliseconds\n *\n * @param latencyInMs\n * @returns a bucket index from 0 to 22 inclusive\n */\nexport function findLatencyIndex(latencyInMs) {\n    var index = Math.min(MAX, Math.max(MIN, Math.ceil(Math.log(latencyInMs) / Math.log(BASE))));\n    return isNaNNumber(index) ? 0 : index; // index is NaN if latency is not a positive number\n}\n","import { setToArray, _Set } from '../../utils/lang/sets';\nimport { DEFAULT_CACHE_SIZE } from '../inRedis/constants';\nvar UniqueKeysCacheInMemoryCS = /** @class */ (function () {\n    /**\n     *\n     * @param impressionsQueueSize number of queued impressions to call onFullQueueCb.\n     * Default value is 0, that means no maximum value, in case we want to avoid this being triggered.\n     */\n    function UniqueKeysCacheInMemoryCS(uniqueKeysQueueSize) {\n        if (uniqueKeysQueueSize === void 0) { uniqueKeysQueueSize = DEFAULT_CACHE_SIZE; }\n        this.uniqueTrackerSize = 0;\n        this.uniqueKeysTracker = {};\n        this.maxStorage = uniqueKeysQueueSize;\n    }\n    UniqueKeysCacheInMemoryCS.prototype.setOnFullQueueCb = function (cb) {\n        this.onFullQueue = cb;\n    };\n    /**\n     * Store unique keys per feature.\n     */\n    UniqueKeysCacheInMemoryCS.prototype.track = function (userKey, featureName) {\n        if (!this.uniqueKeysTracker[userKey])\n            this.uniqueKeysTracker[userKey] = new _Set();\n        var tracker = this.uniqueKeysTracker[userKey];\n        if (!tracker.has(featureName)) {\n            tracker.add(featureName);\n            this.uniqueTrackerSize++;\n        }\n        if (this.uniqueTrackerSize >= this.maxStorage && this.onFullQueue) {\n            this.onFullQueue();\n        }\n    };\n    /**\n     * Clear the data stored on the cache.\n     */\n    UniqueKeysCacheInMemoryCS.prototype.clear = function () {\n        this.uniqueTrackerSize = 0;\n        this.uniqueKeysTracker = {};\n    };\n    /**\n     * Pop the collected data, used as payload for posting.\n     */\n    UniqueKeysCacheInMemoryCS.prototype.pop = function () {\n        var data = this.uniqueKeysTracker;\n        this.clear();\n        return this.fromUniqueKeysCollector(data);\n    };\n    /**\n     * Check if the cache is empty.\n     */\n    UniqueKeysCacheInMemoryCS.prototype.isEmpty = function () {\n        return Object.keys(this.uniqueKeysTracker).length === 0;\n    };\n    /**\n     * Converts `uniqueKeys` data from cache into request payload.\n     */\n    UniqueKeysCacheInMemoryCS.prototype.fromUniqueKeysCollector = function (uniqueKeys) {\n        var payload = [];\n        var userKeys = Object.keys(uniqueKeys);\n        for (var k = 0; k < userKeys.length; k++) {\n            var userKey = userKeys[k];\n            var featureNames = setToArray(uniqueKeys[userKey]);\n            var uniqueKeysPayload = {\n                k: userKey,\n                fs: featureNames\n            };\n            payload.push(uniqueKeysPayload);\n        }\n        return { keys: payload };\n    };\n    return UniqueKeysCacheInMemoryCS;\n}());\nexport { UniqueKeysCacheInMemoryCS };\n","import { validateIntegrations } from './common';\n/**\n * This function validates `settings.integrations` object that consists of a list of pluggable integration factories.\n *\n * @param {any} settings config object provided by the user to initialize the sdk\n *\n * @returns {Array} array of valid integration factories. The array might be empty if `settings` object does not have valid integrations.\n */\nexport function validatePluggableIntegrations(settings) {\n    return validateIntegrations(settings, function (integration) { return typeof integration === 'function'; }, 'Integration items must be functions that initialize the integrations');\n}\n","import { WARN_INTEGRATION_INVALID } from '../../../logger/constants';\n/**\n * This function validates `settings.integrations` object\n *\n * @param {any} settings config object provided by the user to initialize the sdk\n * @param {function} integrationValidator filter used to remove invalid integration items\n * @param {string} extraWarning optional string used to better describe why an item might be invalid\n *\n * @returns {Array} array of valid integration items. The array might be empty if `settings` object does not have valid integrations.\n */\nexport function validateIntegrations(settings, integrationValidator, extraWarning) {\n    var integrations = settings.integrations, log = settings.log;\n    // If integrations is not an array or an empty array, we return an empty array (no integrations).\n    if (!Array.isArray(integrations) || integrations.length === 0)\n        return [];\n    // We remove invalid integration items\n    var validIntegrations = integrations.filter(integrationValidator);\n    // Log a warning if at least one item is invalid\n    var invalids = integrations.length - validIntegrations.length;\n    if (invalids)\n        log.warn(WARN_INTEGRATION_INVALID, [invalids, extraWarning || '']);\n    return validIntegrations;\n}\n","import { Logger, LogLevels } from '../../../logger';\nimport { getLogLevel } from './commons';\nfunction isLogger(log) {\n    return log && typeof log.debug === 'function' && typeof log.info === 'function' && typeof log.warn === 'function' && typeof log.error === 'function' && typeof log.setLogLevel === 'function';\n}\n// By default it starts disabled.\nvar initialLogLevel = LogLevels.NONE;\n/**\n * Validates the `debug` property at config and use it to set the logger.\n *\n * @param settings user config object, with an optional `debug` property of type boolean, string log level or a Logger object.\n * @returns a logger instance, that might be: the provided logger at `settings.debug`, or one with the given `debug` log level,\n * or one with NONE log level if `debug` is not defined or invalid.\n */\nexport function validateLogger(settings) {\n    var debug = settings.debug;\n    var logLevel = initialLogLevel;\n    if (debug !== undefined) {\n        if (isLogger(debug))\n            return debug;\n        logLevel = getLogLevel(settings.debug);\n    }\n    var log = new Logger({ logLevel: logLevel || initialLogLevel });\n    // @ts-ignore // `debug` value is invalid if logLevel is undefined at this point\n    if (!logLevel)\n        log._log(LogLevels.ERROR, 'Invalid `debug` value at config. Logs will be disabled.');\n    return log;\n}\n","import { LogLevels, isLogLevelString } from '../../../logger';\n/**\n * Returns the LogLevel for the given debugValue or undefined if it is invalid,\n * i.e., if the debugValue is not a boolean or LogLevel string.\n *\n * @param debugValue debug value at config\n * @returns LogLevel of the given debugValue or undefined if the provided value is invalid\n */\nexport function getLogLevel(debugValue) {\n    if (typeof debugValue === 'boolean') {\n        if (debugValue) {\n            return LogLevels.DEBUG;\n        }\n        else {\n            return LogLevels.NONE;\n        }\n    }\n    else if (typeof debugValue === 'string' && isLogLevelString(debugValue)) {\n        return debugValue;\n    }\n    else {\n        return undefined;\n    }\n}\n","import { LocalhostFromObject } from '../../../sync/offline/LocalhostFromObject';\nimport { validateLocalhost } from './pluggable';\n/**\n * This function validates `settings.sync.localhostMode` object\n *\n * @param {any} settings config object provided by the user to initialize the sdk\n *\n * @returns {Object} provided localhost mode module at `settings.sync.localhostMode` if valid, or a default LocalhostFromObject instance if not provided or invalid\n */\nexport function validateLocalhostWithDefault(settings) {\n    if (!settings.sync.localhostMode)\n        return LocalhostFromObject();\n    return validateLocalhost(settings) || LocalhostFromObject();\n}\n","import { splitsParserFromSettingsFactory } from './splitsParser/splitsParserFromSettings';\nimport { syncManagerOfflineFactory } from './syncManagerOffline';\n// Singleton instance of the factory function for offline SyncManager from object (a.k.a. localhostFromObject)\n// SDK instances instantiate their SyncManagers with the same factory\nvar localhostFromObject = syncManagerOfflineFactory(splitsParserFromSettingsFactory);\nlocalhostFromObject.type = 'LocalhostFromObject';\nexport function LocalhostFromObject() {\n    return localhostFromObject;\n}\n","import { isObject, forOwn } from '../../../utils/lang';\nimport { parseCondition } from './parseCondition';\nfunction hasTreatmentChanged(prev, curr) {\n    if (typeof prev !== typeof curr)\n        return true;\n    if (typeof prev === 'string') { // strings treatments, just compare\n        return prev !== curr;\n    }\n    else { // has treatment and config, compare both\n        return prev.treatment !== curr.treatment || prev.config !== curr.config;\n    }\n}\nexport function splitsParserFromSettingsFactory() {\n    var previousMock = { 'emptyMock': '1' };\n    function mockUpdated(currentData) {\n        var names = Object.keys(currentData);\n        // Different amount of items\n        if (names.length !== Object.keys(previousMock).length) {\n            previousMock = currentData;\n            return true;\n        }\n        return names.some(function (name) {\n            var newSplit = !previousMock[name];\n            var newTreatment = hasTreatmentChanged(previousMock[name], currentData[name]);\n            var changed = newSplit || newTreatment;\n            if (changed)\n                previousMock = currentData;\n            return changed;\n        });\n    }\n    /**\n     *\n     * @param settings validated object with mocked features mapping.\n     */\n    return function splitsParserFromSettings(settings) {\n        var features = settings.features || {};\n        if (!mockUpdated(features))\n            return false;\n        var splitObjects = {};\n        forOwn(features, function (data, splitName) {\n            var treatment = data;\n            var config = null;\n            if (isObject(data)) {\n                treatment = data.treatment;\n                config = data.config || config;\n            }\n            var configurations = {};\n            if (config !== null)\n                configurations[treatment] = config;\n            splitObjects[splitName] = {\n                trafficTypeName: 'localhost',\n                conditions: [parseCondition({ treatment: treatment })],\n                configurations: configurations\n            };\n        });\n        return splitObjects;\n    };\n}\n","import { isString } from '../../../utils/lang';\nexport function parseCondition(data) {\n    var treatment = data.treatment;\n    if (data.keys) {\n        return {\n            conditionType: 'WHITELIST',\n            matcherGroup: {\n                combiner: 'AND',\n                matchers: [\n                    {\n                        keySelector: null,\n                        matcherType: 'WHITELIST',\n                        negate: false,\n                        whitelistMatcherData: {\n                            whitelist: isString(data.keys) ? [data.keys] : data.keys\n                        }\n                    }\n                ]\n            },\n            partitions: [\n                {\n                    treatment: treatment,\n                    size: 100\n                }\n            ],\n            label: \"whitelisted \" + treatment\n        };\n    }\n    else {\n        return {\n            conditionType: 'ROLLOUT',\n            matcherGroup: {\n                combiner: 'AND',\n                matchers: [\n                    {\n                        keySelector: null,\n                        matcherType: 'ALL_KEYS',\n                        negate: false\n                    }\n                ]\n            },\n            partitions: [\n                {\n                    treatment: treatment,\n                    size: 100\n                }\n            ],\n            label: 'default rule'\n        };\n    }\n}\n","import { fromObjectSyncTaskFactory } from './syncTasks/fromObjectSyncTask';\nimport { objectAssign } from '../../utils/lang/objectAssign';\nimport { SDK_SEGMENTS_ARRIVED } from '../../readiness/constants';\nfunction flush() {\n    return Promise.resolve();\n}\n/**\n * Offline SyncManager factory.\n * Can be used for server-side API, and client-side API with or without multiple clients.\n *\n * @param splitsParser e.g., `splitsParserFromFile`, `splitsParserFromSettings`.\n */\nexport function syncManagerOfflineFactory(splitsParserFactory) {\n    /**\n     * SyncManager factory for modular SDK\n     */\n    return function (_a) {\n        var settings = _a.settings, readiness = _a.readiness, storage = _a.storage;\n        return objectAssign(fromObjectSyncTaskFactory(splitsParserFactory(), storage, readiness, settings), {\n            // fake flush, that resolves immediately\n            flush: flush,\n            // [Only used for client-side]\n            shared: function (matchingKey, readinessManager) {\n                return {\n                    start: function () {\n                        // In LOCALHOST mode, shared clients are ready in the next event-loop cycle than created\n                        // SDK_READY cannot be emitted directly because this will not update the readiness status\n                        setTimeout(function () {\n                            readinessManager.segments.emit(SDK_SEGMENTS_ARRIVED); // SDK_SPLITS_ARRIVED emitted by main SyncManager\n                        }, 0);\n                    },\n                    stop: function () { },\n                    isRunning: function () {\n                        return true;\n                    },\n                    flush: flush,\n                };\n            }\n        });\n    };\n}\n","import { forOwn } from '../../../utils/lang';\nimport { syncTaskFactory } from '../../syncTask';\nimport { CONTROL } from '../../../utils/constants';\nimport { SDK_SPLITS_ARRIVED, SDK_SEGMENTS_ARRIVED, SDK_SPLITS_CACHE_LOADED } from '../../../readiness/constants';\nimport { SYNC_OFFLINE_DATA, ERROR_SYNC_OFFLINE_LOADING } from '../../../logger/constants';\n/**\n * Offline equivalent of `splitChangesUpdaterFactory`\n */\nexport function fromObjectUpdaterFactory(splitsParser, storage, readiness, settings) {\n    var log = settings.log, splitsCache = storage.splits;\n    var startingUp = true;\n    return function objectUpdater() {\n        var splits = [];\n        var loadError = null;\n        var splitsMock = {};\n        try {\n            splitsMock = splitsParser(settings);\n        }\n        catch (err) {\n            loadError = err;\n            log.error(ERROR_SYNC_OFFLINE_LOADING, [err]);\n        }\n        if (!loadError && splitsMock) {\n            log.debug(SYNC_OFFLINE_DATA, [JSON.stringify(splitsMock)]);\n            forOwn(splitsMock, function (val, name) {\n                splits.push([\n                    name, {\n                        name: name,\n                        status: 'ACTIVE',\n                        killed: false,\n                        trafficAllocation: 100,\n                        defaultTreatment: CONTROL,\n                        conditions: val.conditions || [],\n                        configurations: val.configurations,\n                        trafficTypeName: val.trafficTypeName\n                    }\n                ]);\n            });\n            return Promise.all([\n                splitsCache.clear(),\n                splitsCache.addSplits(splits)\n            ]).then(function () {\n                readiness.splits.emit(SDK_SPLITS_ARRIVED);\n                if (startingUp) {\n                    startingUp = false;\n                    Promise.resolve(splitsCache.checkCache()).then(function (cacheReady) {\n                        // Emits SDK_READY_FROM_CACHE\n                        if (cacheReady)\n                            readiness.splits.emit(SDK_SPLITS_CACHE_LOADED);\n                        // Emits SDK_READY\n                        readiness.segments.emit(SDK_SEGMENTS_ARRIVED);\n                    });\n                }\n                return true;\n            });\n        }\n        else {\n            return Promise.resolve(true);\n        }\n    };\n}\n/**\n * PollingManager in Offline mode\n */\nexport function fromObjectSyncTaskFactory(splitsParser, storage, readiness, settings) {\n    return syncTaskFactory(settings.log, fromObjectUpdaterFactory(splitsParser, storage, readiness, settings), settings.scheduler.offlineRefreshRate, 'offlineUpdater');\n}\n","import { SYNC_TASK_EXECUTE, SYNC_TASK_START, SYNC_TASK_STOP } from '../logger/constants';\n/**\n * Creates an object that handles the periodic execution of a given task via \"start\" and \"stop\" methods.\n * The task can be also executed by calling the \"execute\" method. Multiple calls run sequentially to avoid race conditions (e.g., submitters executed on SDK destroy or full queue, while periodic execution is pending).\n *\n * @param log  Logger instance.\n * @param task  Task to execute that returns a promise that NEVER REJECTS. Otherwise, periodic execution can result in Unhandled Promise Rejections.\n * @param period  Period in milliseconds to execute the task.\n * @param taskName  Optional task name for logging.\n * @returns A sync task that wraps the given task.\n */\nexport function syncTaskFactory(log, task, period, taskName) {\n    if (taskName === void 0) { taskName = 'task'; }\n    // Flag that indicates if the task is executing\n    var executing = 0;\n    // Promise chain to resolve tasks sequentially\n    var promiseChain;\n    // flag that indicates if the task periodic execution has been started/stopped.\n    var running = false;\n    // Auxiliar counter used to avoid race condition when calling `start` & `stop` intermittently\n    var runningId = 0;\n    // Params passed to `task` when called periodically\n    var runningArgs;\n    // Id of the periodic call timeout\n    var timeoutID;\n    function execute() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        executing++;\n        log.debug(SYNC_TASK_EXECUTE, [taskName]);\n        // Update `promiseChain` with last promise, to run tasks serially\n        promiseChain = (promiseChain ? promiseChain.then(function () { return task.apply(void 0, args); }) : task.apply(void 0, args))\n            .then(function (result) {\n            executing--;\n            return result;\n        });\n        return promiseChain;\n    }\n    function periodicExecute(currentRunningId) {\n        return execute.apply(void 0, runningArgs).then(function (result) {\n            // Call `setTimeout` if periodic execution was started and `currentRunningId === runningId`\n            // to avoid a race condition when calling `start`, `stop` and `start` again\n            if (running && currentRunningId === runningId)\n                timeoutID = setTimeout(periodicExecute, period, currentRunningId);\n            return result;\n        });\n    }\n    return {\n        execute: execute,\n        isExecuting: function () {\n            return executing > 0;\n        },\n        start: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (!running) {\n                running = true;\n                runningId++;\n                runningArgs = args;\n                log.debug(SYNC_TASK_START, [taskName, period]);\n                return periodicExecute(runningId);\n            }\n        },\n        stop: function () {\n            running = false;\n            if (timeoutID) {\n                log.debug(SYNC_TASK_STOP, [taskName]);\n                clearTimeout(timeoutID);\n                timeoutID = undefined;\n            }\n        },\n        isRunning: function () {\n            return running;\n        }\n    };\n}\n","// Splits events:\nexport var SDK_SPLITS_ARRIVED = 'state::splits-arrived';\nexport var SDK_SPLITS_CACHE_LOADED = 'state::splits-cache-loaded';\n// Segments events:\nexport var SDK_SEGMENTS_ARRIVED = 'state::segments-arrived';\n// Readiness events:\nexport var SDK_READY_TIMED_OUT = 'init::timeout';\nexport var SDK_READY = 'init::ready';\nexport var SDK_READY_FROM_CACHE = 'init::cache-ready';\nexport var SDK_UPDATE = 'state::update';\n","import { ERROR_LOCALHOST_MODULE_REQUIRED } from '../../../logger/constants';\nimport { LOCALHOST_MODE } from '../../constants';\n/**\n * This function validates `settings.sync.localhostMode` object\n *\n * @param {any} settings config object provided by the user to initialize the sdk\n *\n * @returns {Object | undefined} provided localhost mode module at `settings.sync.localhostMode`, or undefined if it is not provided or invalid\n */\nexport function validateLocalhost(settings) {\n    var localhostMode = settings.sync.localhostMode;\n    // localhostMode.type is used for internal validation. Not considered part of the public API, and might be updated eventually.\n    if (settings.mode === LOCALHOST_MODE && (typeof localhostMode !== 'function' || localhostMode.type !== 'LocalhostFromObject')) {\n        settings.log.error(ERROR_LOCALHOST_MODULE_REQUIRED);\n        return undefined;\n    }\n    return localhostMode;\n}\n","import { ERROR_INVALID_CONFIG_PARAM } from '../../logger/constants';\nimport { CONSENT_DECLINED, CONSENT_GRANTED, CONSENT_UNKNOWN } from '../constants';\nimport { stringToUpperCase } from '../lang';\nvar userConsentValues = [CONSENT_DECLINED, CONSENT_GRANTED, CONSENT_UNKNOWN];\nexport function validateConsent(_a) {\n    var userConsent = _a.userConsent, log = _a.log;\n    userConsent = stringToUpperCase(userConsent);\n    if (userConsentValues.indexOf(userConsent) > -1)\n        return userConsent;\n    log.error(ERROR_INVALID_CONFIG_PARAM, ['userConsent', userConsentValues, CONSENT_GRANTED]);\n    return CONSENT_GRANTED;\n}\n","import { splitApiFactory } from '@splitsoftware/splitio-commons/esm/services/splitApi';\nimport { syncManagerOnlineFactory } from '@splitsoftware/splitio-commons/esm/sync/syncManagerOnline';\nimport { pushManagerFactory } from '@splitsoftware/splitio-commons/esm/sync/streaming/pushManager';\nimport { pollingManagerCSFactory } from '@splitsoftware/splitio-commons/esm/sync/polling/pollingManagerCS';\nimport { sdkManagerFactory } from '@splitsoftware/splitio-commons/esm/sdkManager/index';\nimport { sdkClientMethodCSFactory } from '@splitsoftware/splitio-commons/esm/sdkClient/sdkClientMethodCS';\nimport { BrowserSignalListener } from '@splitsoftware/splitio-commons/esm/listeners/browser';\nimport { impressionObserverCSFactory } from '@splitsoftware/splitio-commons/esm/trackers/impressionObserver/impressionObserverCS';\nimport { pluggableIntegrationsManagerFactory } from '@splitsoftware/splitio-commons/esm/integrations/pluggable';\nimport { CONSUMER_MODE, CONSUMER_PARTIAL_MODE, LOCALHOST_MODE } from '@splitsoftware/splitio-commons/esm/utils/constants';\nimport { createUserConsentAPI } from '@splitsoftware/splitio-commons/esm/consent/sdkUserConsent';\nvar syncManagerStandaloneFactory;\nvar syncManagerSubmittersFactory;\nexport function getModules(settings, platform) {\n    if (!syncManagerStandaloneFactory)\n        syncManagerStandaloneFactory = syncManagerOnlineFactory(pollingManagerCSFactory, pushManagerFactory);\n    var modules = {\n        settings: settings,\n        platform: platform,\n        storageFactory: settings.storage,\n        splitApiFactory: splitApiFactory,\n        syncManagerFactory: syncManagerStandaloneFactory,\n        sdkManagerFactory: sdkManagerFactory,\n        sdkClientMethodFactory: sdkClientMethodCSFactory,\n        SignalListener: BrowserSignalListener,\n        integrationsManagerFactory: settings.integrations && settings.integrations.length > 0 ? pluggableIntegrationsManagerFactory.bind(null, settings.integrations) : undefined,\n        impressionsObserverFactory: impressionObserverCSFactory,\n        extraProps: function (params) {\n            return {\n                UserConsent: createUserConsentAPI(params)\n            };\n        },\n    };\n    switch (settings.mode) {\n        case LOCALHOST_MODE:\n            modules.splitApiFactory = undefined;\n            modules.syncManagerFactory = settings.sync.localhostMode;\n            modules.SignalListener = undefined;\n            break;\n        case CONSUMER_MODE:\n            modules.syncManagerFactory = undefined;\n            break;\n        case CONSUMER_PARTIAL_MODE:\n            if (!syncManagerSubmittersFactory)\n                syncManagerSubmittersFactory = syncManagerOnlineFactory(undefined, undefined);\n            modules.syncManagerFactory = syncManagerSubmittersFactory;\n    }\n    return modules;\n}\n","import { splitHttpClientFactory } from './splitHttpClient';\nimport { objectAssign } from '../utils/lang/objectAssign';\nimport { SPLITS, IMPRESSIONS, IMPRESSIONS_COUNT, EVENTS, TELEMETRY, TOKEN, SEGMENT, MY_SEGMENT } from '../utils/constants';\nimport { ERROR_TOO_MANY_SETS } from '../logger/constants';\nvar noCacheHeaderOptions = { headers: { 'Cache-Control': 'no-cache' } };\nfunction userKeyToQueryParam(userKey) {\n    return 'users=' + encodeURIComponent(userKey); // no need to check availability of `encodeURIComponent`, since it is a global highly supported.\n}\n/**\n * Factory of SplitApi objects, which group the collection of Split HTTP endpoints used by the SDK\n *\n * @param settings validated settings object\n * @param platform object containing environment-specific dependencies\n * @param telemetryTracker telemetry tracker\n */\nexport function splitApiFactory(settings, platform, telemetryTracker) {\n    var urls = settings.urls;\n    var filterQueryString = settings.sync.__splitFiltersValidation && settings.sync.__splitFiltersValidation.queryString;\n    var SplitSDKImpressionsMode = settings.sync.impressionsMode;\n    var splitHttpClient = splitHttpClientFactory(settings, platform.getFetch);\n    return {\n        // @TODO throw errors if health check requests fail, to log them in the Synchronizer\n        getSdkAPIHealthCheck: function () {\n            var url = urls.sdk + \"/version\";\n            return splitHttpClient(url).then(function () { return true; }).catch(function () { return false; });\n        },\n        getEventsAPIHealthCheck: function () {\n            var url = urls.events + \"/version\";\n            return splitHttpClient(url).then(function () { return true; }).catch(function () { return false; });\n        },\n        fetchAuth: function (userMatchingKeys) {\n            var url = urls.auth + \"/v2/auth\";\n            if (userMatchingKeys) { // accounting the possibility that `userMatchingKeys` is undefined (server-side API)\n                var queryParams = userMatchingKeys.map(userKeyToQueryParam).join('&');\n                if (queryParams) // accounting the possibility that `userKeys` and thus `queryParams` are empty\n                    url += '?' + queryParams;\n            }\n            return splitHttpClient(url, undefined, telemetryTracker.trackHttp(TOKEN));\n        },\n        fetchSplitChanges: function (since, noCache, till) {\n            var url = urls.sdk + \"/splitChanges?since=\" + since + (till ? '&till=' + till : '') + (filterQueryString || '');\n            return splitHttpClient(url, noCache ? noCacheHeaderOptions : undefined, telemetryTracker.trackHttp(SPLITS))\n                .catch(function (err) {\n                if (err.statusCode === 414)\n                    settings.log.error(ERROR_TOO_MANY_SETS);\n                throw err;\n            });\n        },\n        fetchSegmentChanges: function (since, segmentName, noCache, till) {\n            var url = urls.sdk + \"/segmentChanges/\" + segmentName + \"?since=\" + since + (till ? '&till=' + till : '');\n            return splitHttpClient(url, noCache ? noCacheHeaderOptions : undefined, telemetryTracker.trackHttp(SEGMENT));\n        },\n        fetchMySegments: function (userMatchingKey, noCache) {\n            /**\n             * URI encoding of user keys in order to:\n             *  - avoid 400 responses (due to URI malformed). E.g.: '/api/mySegments/%'\n             *  - avoid 404 responses. E.g.: '/api/mySegments/foo/bar'\n             *  - match user keys with special characters. E.g.: 'foo%bar', 'foo/bar'\n             */\n            var url = urls.sdk + \"/mySegments/\" + encodeURIComponent(userMatchingKey);\n            return splitHttpClient(url, noCache ? noCacheHeaderOptions : undefined, telemetryTracker.trackHttp(MY_SEGMENT));\n        },\n        /**\n         * Post events.\n         *\n         * @param body  Events bulk payload\n         * @param headers  Optionals headers to overwrite default ones. For example, it is used in producer mode to overwrite metadata headers.\n         */\n        postEventsBulk: function (body, headers) {\n            var url = urls.events + \"/events/bulk\";\n            return splitHttpClient(url, { method: 'POST', body: body, headers: headers }, telemetryTracker.trackHttp(EVENTS));\n        },\n        /**\n         * Post impressions.\n         *\n         * @param body  Impressions bulk payload\n         * @param headers  Optionals headers to overwrite default ones. For example, it is used in producer mode to overwrite metadata headers.\n         */\n        postTestImpressionsBulk: function (body, headers) {\n            var url = urls.events + \"/testImpressions/bulk\";\n            return splitHttpClient(url, {\n                // Adding extra headers to send impressions in OPTIMIZED or DEBUG modes.\n                method: 'POST',\n                body: body,\n                headers: objectAssign({ SplitSDKImpressionsMode: SplitSDKImpressionsMode }, headers)\n            }, telemetryTracker.trackHttp(IMPRESSIONS));\n        },\n        /**\n         * Post impressions counts.\n         *\n         * @param body  Impressions counts payload\n         * @param headers  Optionals headers to overwrite default ones. For example, it is used in producer mode to overwrite metadata headers.\n         */\n        postTestImpressionsCount: function (body, headers) {\n            var url = urls.events + \"/testImpressions/count\";\n            return splitHttpClient(url, { method: 'POST', body: body, headers: headers }, telemetryTracker.trackHttp(IMPRESSIONS_COUNT));\n        },\n        /**\n         * Post unique keys for client side.\n         *\n         * @param body  unique keys payload\n         * @param headers  Optionals headers to overwrite default ones. For example, it is used in producer mode to overwrite metadata headers.\n         */\n        postUniqueKeysBulkCs: function (body, headers) {\n            var url = urls.telemetry + \"/v1/keys/cs\";\n            return splitHttpClient(url, { method: 'POST', body: body, headers: headers }, telemetryTracker.trackHttp(TELEMETRY));\n        },\n        /**\n         * Post unique keys for server side.\n         *\n         * @param body  unique keys payload\n         * @param headers  Optionals headers to overwrite default ones. For example, it is used in producer mode to overwrite metadata headers.\n         */\n        postUniqueKeysBulkSs: function (body, headers) {\n            var url = urls.telemetry + \"/v1/keys/ss\";\n            return splitHttpClient(url, { method: 'POST', body: body, headers: headers }, telemetryTracker.trackHttp(TELEMETRY));\n        },\n        postMetricsConfig: function (body, headers) {\n            var url = urls.telemetry + \"/v1/metrics/config\";\n            return splitHttpClient(url, { method: 'POST', body: body, headers: headers }, telemetryTracker.trackHttp(TELEMETRY), true);\n        },\n        postMetricsUsage: function (body, headers) {\n            var url = urls.telemetry + \"/v1/metrics/usage\";\n            return splitHttpClient(url, { method: 'POST', body: body, headers: headers }, telemetryTracker.trackHttp(TELEMETRY), true);\n        }\n    };\n}\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { ERROR_HTTP, ERROR_CLIENT_CANNOT_GET_READY } from '../logger/constants';\nvar messageNoFetch = 'Global fetch API is not available.';\n/**\n * Factory of Split HTTP clients, which are HTTP clients with predefined headers for Split endpoints.\n *\n * @param settings SDK settings, used to access authorizationKey, logger instance and metadata (SDK version, ip and hostname) to set additional headers\n * @param getFetch retrieves the Fetch API for HTTP requests\n */\nexport function splitHttpClientFactory(settings, getFetch) {\n    var log = settings.log, authorizationKey = settings.core.authorizationKey, version = settings.version, _a = settings.runtime, ip = _a.ip, hostname = _a.hostname;\n    var fetch = getFetch && getFetch();\n    // if fetch is not available, log Error\n    if (!fetch)\n        log.error(ERROR_CLIENT_CANNOT_GET_READY, [messageNoFetch]);\n    var headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + authorizationKey,\n        'SplitSDKVersion': version\n    };\n    if (ip)\n        headers['SplitSDKMachineIP'] = ip;\n    if (hostname)\n        headers['SplitSDKMachineName'] = hostname;\n    return function httpClient(url, reqOpts, latencyTracker, logErrorsAsInfo) {\n        if (reqOpts === void 0) { reqOpts = {}; }\n        if (latencyTracker === void 0) { latencyTracker = function () { }; }\n        if (logErrorsAsInfo === void 0) { logErrorsAsInfo = false; }\n        var request = {\n            headers: reqOpts.headers ? objectAssign({}, headers, reqOpts.headers) : headers,\n            method: reqOpts.method || 'GET',\n            body: reqOpts.body\n        };\n        // using `fetch(url, options)` signature to work with unfetch, a lightweight ponyfill of fetch API.\n        return fetch ? fetch(url, request)\n            // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Checking_that_the_fetch_was_successful\n            .then(function (response) {\n            if (!response.ok) {\n                return response.text().then(function (message) { return Promise.reject({ response: response, message: message }); });\n            }\n            latencyTracker();\n            return response;\n        })\n            .catch(function (error) {\n            var resp = error && error.response;\n            var msg = '';\n            if (resp) { // An HTTP error\n                switch (resp.status) {\n                    case 404:\n                        msg = 'Invalid SDK key or resource not found.';\n                        break;\n                    // Don't use resp.statusText since reason phrase is removed in HTTP/2\n                    default:\n                        msg = error.message;\n                        break;\n                }\n            }\n            else { // Something else, either an error making the request or a Network error.\n                msg = error.message || 'Network Error';\n            }\n            if (!resp || resp.status !== 403) { // 403's log we'll be handled somewhere else.\n                log[logErrorsAsInfo ? 'info' : 'error'](ERROR_HTTP, [resp ? resp.status : 'NO_STATUS', url, msg]);\n            }\n            var networkError = new Error(msg);\n            // passes `undefined` as statusCode if not an HTTP error (resp === undefined)\n            networkError.statusCode = resp && resp.status;\n            latencyTracker(networkError);\n            throw networkError;\n        }) : Promise.reject(new Error(messageNoFetch));\n    };\n}\n","import { submitterManagerFactory } from './submitters/submitterManager';\nimport { PUSH_SUBSYSTEM_UP, PUSH_SUBSYSTEM_DOWN } from './streaming/constants';\nimport { SYNC_START_POLLING, SYNC_CONTINUE_POLLING, SYNC_STOP_POLLING } from '../logger/constants';\nimport { isConsentGranted } from '../consent';\nimport { POLLING, STREAMING, SYNC_MODE_UPDATE } from '../utils/constants';\n/**\n * Online SyncManager factory.\n * Can be used for server-side API, and client-side API with or without multiple clients.\n *\n * @param pollingManagerFactory allows to specialize the SyncManager for server-side or client-side API by passing\n * `pollingManagerSSFactory` or `pollingManagerCSFactory` respectively.\n * @param pushManagerFactory optional to build a SyncManager with or without streaming support\n */\nexport function syncManagerOnlineFactory(pollingManagerFactory, pushManagerFactory) {\n    /**\n     * SyncManager factory for modular SDK\n     */\n    return function (params) {\n        var settings = params.settings, _a = params.settings, log = _a.log, streamingEnabled = _a.streamingEnabled, syncEnabled = _a.sync.enabled, telemetryTracker = params.telemetryTracker;\n        /** Polling Manager */\n        var pollingManager = pollingManagerFactory && pollingManagerFactory(params);\n        /** Push Manager */\n        var pushManager = syncEnabled && streamingEnabled && pollingManager && pushManagerFactory ?\n            pushManagerFactory(params, pollingManager) :\n            undefined;\n        /** Submitter Manager */\n        // It is not inyected as push and polling managers, because at the moment it is required\n        var submitterManager = submitterManagerFactory(params);\n        /** Sync Manager logic */\n        function startPolling() {\n            if (pollingManager.isRunning()) {\n                log.info(SYNC_CONTINUE_POLLING);\n            }\n            else {\n                log.info(SYNC_START_POLLING);\n                pollingManager.start();\n                telemetryTracker.streamingEvent(SYNC_MODE_UPDATE, POLLING);\n            }\n        }\n        function stopPollingAndSyncAll() {\n            log.info(SYNC_STOP_POLLING);\n            // if polling, stop\n            if (pollingManager.isRunning()) {\n                pollingManager.stop();\n                telemetryTracker.streamingEvent(SYNC_MODE_UPDATE, STREAMING);\n            }\n            // fetch splits and segments. There is no need to catch this promise (it is always resolved)\n            pollingManager.syncAll();\n        }\n        if (pushManager) {\n            pushManager.on(PUSH_SUBSYSTEM_UP, stopPollingAndSyncAll);\n            pushManager.on(PUSH_SUBSYSTEM_DOWN, startPolling);\n        }\n        var running = false; // flag that indicates whether the syncManager has been started (true) or stopped (false)\n        var startFirstTime = true; // flag to distinguish calling the `start` method for the first time, to support pausing and resuming the synchronization\n        return {\n            // Exposed for fine-grained control of synchronization.\n            // E.g.: user consent, app state changes (Page hide, Foreground/Background, Online/Offline).\n            pollingManager: pollingManager,\n            pushManager: pushManager,\n            submitterManager: submitterManager,\n            /**\n             * Method used to start the syncManager for the first time, or resume it after being stopped.\n             */\n            start: function () {\n                running = true;\n                // start syncing splits and segments\n                if (pollingManager) {\n                    // If synchronization is disabled pushManager and pollingManager should not start\n                    if (syncEnabled) {\n                        if (pushManager) {\n                            // Doesn't call `syncAll` when the syncManager is resuming\n                            if (startFirstTime) {\n                                pollingManager.syncAll();\n                                startFirstTime = false;\n                            }\n                            pushManager.start();\n                        }\n                        else {\n                            pollingManager.start();\n                        }\n                    }\n                    else {\n                        if (startFirstTime) {\n                            pollingManager.syncAll();\n                            startFirstTime = false;\n                        }\n                    }\n                }\n                // start periodic data recording (events, impressions, telemetry).\n                submitterManager.start(!isConsentGranted(settings));\n            },\n            /**\n             * Method used to stop/pause the syncManager.\n             */\n            stop: function () {\n                running = false;\n                // stop syncing\n                if (pushManager)\n                    pushManager.stop();\n                if (pollingManager && pollingManager.isRunning())\n                    pollingManager.stop();\n                // stop periodic data recording (events, impressions, telemetry).\n                submitterManager.stop();\n            },\n            isRunning: function () {\n                return running;\n            },\n            flush: function () {\n                return submitterManager.execute(!isConsentGranted(settings));\n            },\n            // [Only used for client-side]\n            // If polling and push managers are defined (standalone mode), they implement the interfaces for client-side\n            shared: function (matchingKey, readinessManager, storage) {\n                if (!pollingManager)\n                    return;\n                var mySegmentsSyncTask = pollingManager.add(matchingKey, readinessManager, storage);\n                return {\n                    isRunning: mySegmentsSyncTask.isRunning,\n                    start: function () {\n                        if (syncEnabled) {\n                            if (pushManager) {\n                                if (pollingManager.isRunning()) {\n                                    // if doing polling, we must start the periodic fetch of data\n                                    if (storage.splits.usesSegments())\n                                        mySegmentsSyncTask.start();\n                                }\n                                else {\n                                    // if not polling, we must execute the sync task for the initial fetch\n                                    // of segments since `syncAll` was already executed when starting the main client\n                                    mySegmentsSyncTask.execute();\n                                }\n                                pushManager.add(matchingKey, mySegmentsSyncTask);\n                            }\n                            else {\n                                if (storage.splits.usesSegments())\n                                    mySegmentsSyncTask.start();\n                            }\n                        }\n                        else {\n                            if (!readinessManager.isReady())\n                                mySegmentsSyncTask.execute();\n                        }\n                    },\n                    stop: function () {\n                        // check in case `client.destroy()` has been invoked more than once for the same client\n                        var mySegmentsSyncTask = pollingManager.get(matchingKey);\n                        if (mySegmentsSyncTask) {\n                            // stop syncing\n                            if (pushManager)\n                                pushManager.remove(matchingKey);\n                            if (mySegmentsSyncTask.isRunning())\n                                mySegmentsSyncTask.stop();\n                            pollingManager.remove(matchingKey);\n                        }\n                    },\n                    flush: function () { return Promise.resolve(); }\n                };\n            }\n        };\n    };\n}\n","import { eventsSubmitterFactory } from './eventsSubmitter';\nimport { impressionsSubmitterFactory } from './impressionsSubmitter';\nimport { impressionCountsSubmitterFactory } from './impressionCountsSubmitter';\nimport { telemetrySubmitterFactory } from './telemetrySubmitter';\nimport { uniqueKeysSubmitterFactory } from './uniqueKeysSubmitter';\nexport function submitterManagerFactory(params) {\n    var submitters = [\n        impressionsSubmitterFactory(params),\n        eventsSubmitterFactory(params)\n    ];\n    var impressionCountsSubmitter = impressionCountsSubmitterFactory(params);\n    if (impressionCountsSubmitter)\n        submitters.push(impressionCountsSubmitter);\n    var telemetrySubmitter = telemetrySubmitterFactory(params);\n    if (params.storage.uniqueKeys)\n        submitters.push(uniqueKeysSubmitterFactory(params));\n    return {\n        // `onlyTelemetry` true if SDK is created with userConsent not GRANTED\n        start: function (onlyTelemetry) {\n            if (!onlyTelemetry)\n                submitters.forEach(function (submitter) { return submitter.start(); });\n            if (telemetrySubmitter)\n                telemetrySubmitter.start();\n        },\n        // `allExceptTelemetry` true if userConsent is changed to DECLINED\n        stop: function (allExceptTelemetry) {\n            submitters.forEach(function (submitter) { return submitter.stop(); });\n            if (!allExceptTelemetry && telemetrySubmitter)\n                telemetrySubmitter.stop();\n        },\n        isRunning: function () {\n            return submitters.some(function (submitter) { return submitter.isRunning(); });\n        },\n        // Flush data. Called with `onlyTelemetry` true if SDK is destroyed with userConsent not GRANTED\n        execute: function (onlyTelemetry) {\n            var promises = onlyTelemetry ? [] : submitters.map(function (submitter) { return submitter.execute(); });\n            if (telemetrySubmitter)\n                promises.push(telemetrySubmitter.execute());\n            return Promise.all(promises);\n        },\n        isExecuting: function () {\n            return submitters.some(function (submitter) { return submitter.isExecuting(); });\n        }\n    };\n}\n","import { submitterFactory, firstPushWindowDecorator } from './submitter';\nimport { SUBMITTERS_PUSH_FULL_QUEUE } from '../../logger/constants';\nvar DATA_NAME = 'events';\n/**\n * Submitter that periodically posts tracked events\n */\nexport function eventsSubmitterFactory(params) {\n    var _a = params.settings, log = _a.log, eventsPushRate = _a.scheduler.eventsPushRate, eventsFirstPushWindow = _a.startup.eventsFirstPushWindow, postEventsBulk = params.splitApi.postEventsBulk, events = params.storage.events;\n    // don't retry events.\n    var submitter = submitterFactory(log, postEventsBulk, events, eventsPushRate, DATA_NAME);\n    // Set a timer for the first push window of events.\n    if (eventsFirstPushWindow > 0)\n        submitter = firstPushWindowDecorator(submitter, eventsFirstPushWindow);\n    // register events submitter to be executed when events cache is full\n    events.setOnFullQueueCb(function () {\n        if (submitter.isRunning()) {\n            log.info(SUBMITTERS_PUSH_FULL_QUEUE, [DATA_NAME]);\n            submitter.execute();\n        }\n        // If submitter is stopped (e.g., user consent declined or unknown, or app state offline), we don't send the data.\n        // Data will be sent when submitter is resumed.\n    });\n    return submitter;\n}\n","import { syncTaskFactory } from '../syncTask';\nimport { SUBMITTERS_PUSH, SUBMITTERS_PUSH_FAILS, SUBMITTERS_PUSH_RETRY } from '../../logger/constants';\n/**\n * Base function to create submitters, such as ImpressionsSubmitter and EventsSubmitter\n */\nexport function submitterFactory(log, postClient, sourceCache, postRate, dataName, fromCacheToPayload, maxRetries, debugLogs // true for telemetry submitters\n) {\n    if (maxRetries === void 0) { maxRetries = 0; }\n    var retries = 0;\n    var data;\n    function postData() {\n        if (sourceCache.isEmpty() && !data)\n            return Promise.resolve();\n        data = sourceCache.pop(data);\n        var dataCountMessage = typeof data.length === 'number' ? data.length + \" \" + dataName : dataName;\n        log[debugLogs ? 'debug' : 'info'](SUBMITTERS_PUSH, [dataCountMessage]);\n        var jsonPayload = JSON.stringify(fromCacheToPayload ? fromCacheToPayload(data) : data);\n        if (!maxRetries)\n            data = undefined;\n        return postClient(jsonPayload).then(function () {\n            retries = 0;\n            data = undefined;\n        }).catch(function (err) {\n            if (!maxRetries) {\n                log[debugLogs ? 'debug' : 'warn'](SUBMITTERS_PUSH_FAILS, [dataCountMessage, err]);\n            }\n            else if (retries === maxRetries) {\n                retries = 0;\n                data = undefined;\n                log[debugLogs ? 'debug' : 'warn'](SUBMITTERS_PUSH_FAILS, [dataCountMessage, err]);\n            }\n            else {\n                retries++;\n                log[debugLogs ? 'debug' : 'warn'](SUBMITTERS_PUSH_RETRY, [dataCountMessage, err]);\n            }\n        });\n    }\n    return syncTaskFactory(log, postData, postRate, dataName + ' submitter');\n}\n/**\n * Decorates a provided submitter with a first execution window\n */\nexport function firstPushWindowDecorator(submitter, firstPushWindow) {\n    var running = false;\n    var stopEventPublisherTimeout;\n    var originalStart = submitter.start;\n    submitter.start = function () {\n        running = true;\n        stopEventPublisherTimeout = setTimeout(originalStart, firstPushWindow);\n    };\n    var originalStop = submitter.stop;\n    submitter.stop = function () {\n        running = false;\n        clearTimeout(stopEventPublisherTimeout);\n        originalStop();\n    };\n    submitter.isRunning = function () {\n        return running;\n    };\n    return submitter;\n}\n","import { groupBy, forOwn } from '../../utils/lang';\nimport { submitterFactory } from './submitter';\nimport { SUBMITTERS_PUSH_FULL_QUEUE } from '../../logger/constants';\nvar DATA_NAME = 'impressions';\n/**\n * Converts `impressions` data from cache into request payload.\n */\nexport function fromImpressionsCollector(sendLabels, data) {\n    var groupedByFeature = groupBy(data, 'feature');\n    var dto = [];\n    // using forOwn instead of for...in since the last also iterates over prototype enumerables\n    forOwn(groupedByFeature, function (value, name) {\n        dto.push({\n            f: name,\n            i: value.map(function (entry) {\n                var keyImpression = {\n                    k: entry.keyName,\n                    t: entry.treatment,\n                    m: entry.time,\n                    c: entry.changeNumber,\n                    r: sendLabels ? entry.label : undefined,\n                    b: entry.bucketingKey ? entry.bucketingKey : undefined,\n                    pt: entry.pt ? entry.pt : undefined // Previous time\n                };\n                return keyImpression;\n            })\n        });\n    });\n    return dto;\n}\n/**\n * Submitter that periodically posts impressions data\n */\nexport function impressionsSubmitterFactory(params) {\n    var _a = params.settings, log = _a.log, impressionsRefreshRate = _a.scheduler.impressionsRefreshRate, labelsEnabled = _a.core.labelsEnabled, postTestImpressionsBulk = params.splitApi.postTestImpressionsBulk, impressions = params.storage.impressions;\n    // retry impressions only once.\n    var syncTask = submitterFactory(log, postTestImpressionsBulk, impressions, impressionsRefreshRate, DATA_NAME, fromImpressionsCollector.bind(undefined, labelsEnabled), 1);\n    // register impressions submitter to be executed when impressions cache is full\n    impressions.setOnFullQueueCb(function () {\n        if (syncTask.isRunning()) {\n            log.info(SUBMITTERS_PUSH_FULL_QUEUE, [DATA_NAME]);\n            syncTask.execute();\n        }\n        // If submitter is stopped (e.g., user consent declined or unknown, or app state offline), we don't send the data.\n        // Data will be sent when submitter is resumed.\n    });\n    return syncTask;\n}\n","import { submitterFactory } from './submitter';\n/**\n * Converts `impressionCounts` data from cache into request payload.\n */\nexport function fromImpressionCountsCollector(impressionsCount) {\n    var pf = [];\n    var keys = Object.keys(impressionsCount);\n    for (var i = 0; i < keys.length; i++) {\n        var splitted = keys[i].split('::');\n        if (splitted.length !== 2)\n            continue;\n        var featureName = splitted[0];\n        var timeFrame = splitted[1];\n        var impressionsInTimeframe = {\n            f: featureName,\n            m: Number(timeFrame),\n            rc: impressionsCount[keys[i]] // Count\n        };\n        pf.push(impressionsInTimeframe);\n    }\n    return { pf: pf };\n}\nvar IMPRESSIONS_COUNT_RATE = 1800000; // 30 minutes\n/**\n * Submitter that periodically posts impression counts\n */\nexport function impressionCountsSubmitterFactory(params) {\n    var log = params.settings.log, postTestImpressionsCount = params.splitApi.postTestImpressionsCount, impressionCounts = params.storage.impressionCounts;\n    if (impressionCounts) {\n        // retry impressions counts only once.\n        return submitterFactory(log, postTestImpressionsCount, impressionCounts, IMPRESSIONS_COUNT_RATE, 'impression counts', fromImpressionCountsCollector, 1);\n    }\n}\n","var _a, _b, _c;\nimport { submitterFactory, firstPushWindowDecorator } from './submitter';\nimport { CONSUMER_MODE, CONSUMER_ENUM, STANDALONE_MODE, CONSUMER_PARTIAL_MODE, STANDALONE_ENUM, CONSUMER_PARTIAL_ENUM, OPTIMIZED, DEBUG, NONE, DEBUG_ENUM, OPTIMIZED_ENUM, NONE_ENUM, CONSENT_GRANTED, CONSENT_DECLINED, CONSENT_UNKNOWN } from '../../utils/constants';\nimport { SDK_READY, SDK_READY_FROM_CACHE } from '../../readiness/constants';\nimport { base } from '../../utils/settingsValidation';\nimport { usedKeysMap } from '../../utils/inputValidation/apiKey';\nimport { timer } from '../../utils/timeTracker/timer';\nimport { objectAssign } from '../../utils/lang/objectAssign';\nvar OPERATION_MODE_MAP = (_a = {},\n    _a[STANDALONE_MODE] = STANDALONE_ENUM,\n    _a[CONSUMER_MODE] = CONSUMER_ENUM,\n    _a[CONSUMER_PARTIAL_MODE] = CONSUMER_PARTIAL_ENUM,\n    _a);\nvar IMPRESSIONS_MODE_MAP = (_b = {},\n    _b[OPTIMIZED] = OPTIMIZED_ENUM,\n    _b[DEBUG] = DEBUG_ENUM,\n    _b[NONE] = NONE_ENUM,\n    _b);\nvar USER_CONSENT_MAP = (_c = {},\n    _c[CONSENT_UNKNOWN] = 1,\n    _c[CONSENT_GRANTED] = 2,\n    _c[CONSENT_DECLINED] = 3,\n    _c);\nfunction getActiveFactories() {\n    return Object.keys(usedKeysMap).length;\n}\nfunction getRedundantActiveFactories() {\n    return Object.keys(usedKeysMap).reduce(function (acum, sdkKey) {\n        return acum + usedKeysMap[sdkKey] - 1;\n    }, 0);\n}\nfunction getTelemetryFlagSetsStats(splitFiltersValidation) {\n    // Group every configured flag set in an unique array called originalSets\n    var flagSetsTotal = 0;\n    splitFiltersValidation.validFilters.forEach(function (filter) {\n        if (filter.type === 'bySet')\n            flagSetsTotal += filter.values.length;\n    });\n    var flagSetsValid = splitFiltersValidation.groupedFilters.bySet.length;\n    var flagSetsIgnored = flagSetsTotal - flagSetsValid;\n    return { flagSetsTotal: flagSetsTotal, flagSetsIgnored: flagSetsIgnored };\n}\nexport function getTelemetryConfigStats(mode, storageType) {\n    return {\n        oM: OPERATION_MODE_MAP[mode],\n        st: storageType.toLowerCase(),\n        aF: getActiveFactories(),\n        rF: getRedundantActiveFactories(),\n    };\n}\n/**\n * Converts data from telemetry cache and settings into /metrics/config request payload.\n */\nexport function telemetryCacheConfigAdapter(telemetry, settings) {\n    return {\n        isEmpty: function () { return false; },\n        clear: function () { },\n        pop: function () {\n            var urls = settings.urls, scheduler = settings.scheduler;\n            var isClientSide = settings.core.key !== undefined;\n            var _a = getTelemetryFlagSetsStats(settings.sync.__splitFiltersValidation), flagSetsTotal = _a.flagSetsTotal, flagSetsIgnored = _a.flagSetsIgnored;\n            return objectAssign(getTelemetryConfigStats(settings.mode, settings.storage.type), {\n                sE: settings.streamingEnabled,\n                rR: {\n                    sp: scheduler.featuresRefreshRate / 1000,\n                    se: isClientSide ? undefined : scheduler.segmentsRefreshRate / 1000,\n                    ms: isClientSide ? scheduler.segmentsRefreshRate / 1000 : undefined,\n                    im: scheduler.impressionsRefreshRate / 1000,\n                    ev: scheduler.eventsPushRate / 1000,\n                    te: scheduler.telemetryRefreshRate / 1000,\n                },\n                uO: {\n                    s: urls.sdk !== base.urls.sdk,\n                    e: urls.events !== base.urls.events,\n                    a: urls.auth !== base.urls.auth,\n                    st: urls.streaming !== base.urls.streaming,\n                    t: urls.telemetry !== base.urls.telemetry,\n                },\n                iQ: scheduler.impressionsQueueSize,\n                eQ: scheduler.eventsQueueSize,\n                iM: IMPRESSIONS_MODE_MAP[settings.sync.impressionsMode],\n                iL: settings.impressionListener ? true : false,\n                hP: false,\n                tR: telemetry.getTimeUntilReady(),\n                tC: telemetry.getTimeUntilReadyFromCache(),\n                nR: telemetry.getNonReadyUsage(),\n                t: telemetry.popTags(),\n                i: settings.integrations && settings.integrations.map(function (int) { return int.type; }),\n                uC: settings.userConsent ? USER_CONSENT_MAP[settings.userConsent] : 0,\n                fsT: flagSetsTotal,\n                fsI: flagSetsIgnored\n            });\n        }\n    };\n}\n/**\n * Submitter that periodically posts telemetry data\n */\nexport function telemetrySubmitterFactory(params) {\n    var telemetry = params.storage.telemetry, now = params.platform.now;\n    if (!telemetry || !now)\n        return; // No submitter created if telemetry cache is not defined\n    var settings = params.settings, _a = params.settings, log = _a.log, telemetryRefreshRate = _a.scheduler.telemetryRefreshRate, splitApi = params.splitApi, readiness = params.readiness, sdkReadinessManager = params.sdkReadinessManager;\n    var startTime = timer(now);\n    var submitter = firstPushWindowDecorator(submitterFactory(log, splitApi.postMetricsUsage, telemetry, telemetryRefreshRate, 'telemetry stats', undefined, 0, true), telemetryRefreshRate);\n    readiness.gate.once(SDK_READY_FROM_CACHE, function () {\n        telemetry.recordTimeUntilReadyFromCache(startTime());\n    });\n    sdkReadinessManager.incInternalReadyCbCount();\n    readiness.gate.once(SDK_READY, function () {\n        telemetry.recordTimeUntilReady(startTime());\n        // Post config data when the SDK is ready and if the telemetry submitter was started\n        if (submitter.isRunning()) {\n            var postMetricsConfigTask = submitterFactory(log, splitApi.postMetricsConfig, telemetryCacheConfigAdapter(telemetry, settings), 0, 'telemetry config', undefined, 0, true);\n            postMetricsConfigTask.execute();\n        }\n    });\n    return submitter;\n}\n","import { ERROR_NULL, ERROR_EMPTY, ERROR_INVALID, WARN_SDK_KEY, LOG_PREFIX_INSTANTIATION } from '../../logger/constants';\nimport { isString } from '../lang';\nvar item = 'sdk_key';\n// @TODO replace ApiKey with SdkKey in function names\n/** validates the given SDK key */\nexport function validateApiKey(log, maybeSdkKey) {\n    var sdkKey = false;\n    if (maybeSdkKey == undefined) { // eslint-disable-line eqeqeq\n        log.error(ERROR_NULL, [LOG_PREFIX_INSTANTIATION, item]);\n    }\n    else if (isString(maybeSdkKey)) {\n        if (maybeSdkKey.length > 0)\n            sdkKey = maybeSdkKey;\n        else\n            log.error(ERROR_EMPTY, [LOG_PREFIX_INSTANTIATION, item]);\n    }\n    else {\n        log.error(ERROR_INVALID, [LOG_PREFIX_INSTANTIATION, item]);\n    }\n    return sdkKey;\n}\n// Exported for telemetry\nexport var usedKeysMap = {};\n/** validates the given SDK key and also warns if it is in use */\nexport function validateAndTrackApiKey(log, maybeSdkKey) {\n    var sdkKey = validateApiKey(log, maybeSdkKey);\n    // If sdkKey is correct, we'll save it as the instance creation should work.\n    if (sdkKey) {\n        if (!usedKeysMap[sdkKey]) {\n            // If this key is not present, only warning scenarios is that we have factories for other keys.\n            usedKeysMap[sdkKey] = 1;\n            if (Object.keys(usedKeysMap).length > 1) {\n                log.warn(WARN_SDK_KEY, ['an instance of the Split factory']);\n            }\n        }\n        else {\n            log.warn(WARN_SDK_KEY, [usedKeysMap[sdkKey] + \" factory/ies with this SDK Key\"]);\n            usedKeysMap[sdkKey]++;\n        }\n    }\n    return sdkKey;\n}\nexport function releaseApiKey(sdkKey) {\n    if (usedKeysMap[sdkKey])\n        usedKeysMap[sdkKey]--;\n    if (usedKeysMap[sdkKey] === 0)\n        delete usedKeysMap[sdkKey];\n}\n","export function timer(now) {\n    var st = now();\n    return function stop() {\n        return Math.round(now() - st);\n    };\n}\n","import { SUBMITTERS_PUSH_FULL_QUEUE } from '../../logger/constants';\nimport { submitterFactory } from './submitter';\nvar DATA_NAME = 'unique keys';\nvar UNIQUE_KEYS_RATE = 900000; // 15 minutes\n/**\n * Submitter that periodically posts impression counts\n */\nexport function uniqueKeysSubmitterFactory(params) {\n    var _a = params.settings, log = _a.log, key = _a.core.key, _b = params.splitApi, postUniqueKeysBulkCs = _b.postUniqueKeysBulkCs, postUniqueKeysBulkSs = _b.postUniqueKeysBulkSs, uniqueKeys = params.storage.uniqueKeys;\n    var isClientSide = key !== undefined;\n    var postUniqueKeysBulk = isClientSide ? postUniqueKeysBulkCs : postUniqueKeysBulkSs;\n    var syncTask = submitterFactory(log, postUniqueKeysBulk, uniqueKeys, UNIQUE_KEYS_RATE, DATA_NAME);\n    // register unique keys submitter to be executed when uniqueKeys cache is full\n    uniqueKeys.setOnFullQueueCb(function () {\n        if (syncTask.isRunning()) {\n            log.info(SUBMITTERS_PUSH_FULL_QUEUE, [DATA_NAME]);\n            syncTask.execute();\n        }\n        // If submitter is stopped (e.g., user consent declined or unknown, or app state offline), we don't send the data.\n        // Data will be sent when submitter is resumed.\n    });\n    return syncTask;\n}\n","// time for refresh token\nexport var SECONDS_BEFORE_EXPIRATION = 600;\n// Internal SDK events, subscribed by SyncManager and PushManager\n/**\n * emitted on SSE and Authenticate non-recoverable errors, STREAMING_DISABLED control notification and authentication with pushEnabled false\n * triggers `handleNonRetryableError` call\n */\nexport var PUSH_NONRETRYABLE_ERROR = 'PUSH_NONRETRYABLE_ERROR';\n/**\n * emitted on SSE and Authenticate recoverable errors\n * triggers `handleRetryableError` call\n */\nexport var PUSH_RETRYABLE_ERROR = 'PUSH_RETRYABLE_ERROR';\n/**\n * emitted on STREAMING_RESUMED control notification, OCCUPANCY different than 0, and SSE onopen event\n * triggers `stopPollingAndSyncAll` call\n */\nexport var PUSH_SUBSYSTEM_UP = 'PUSH_SUBSYSTEM_UP';\n/**\n * emitted on STREAMING_PAUSED control notification, OCCUPANCY equal to 0, PUSH_NONRETRYABLE_ERROR and PUSH_RETRYABLE_ERROR events.\n * triggers `startPolling` and `stopWorkers` calls\n */\nexport var PUSH_SUBSYSTEM_DOWN = 'PUSH_SUBSYSTEM_DOWN';\n// Update-type push notifications, handled by NotificationProcessor\nexport var MY_SEGMENTS_UPDATE = 'MY_SEGMENTS_UPDATE';\nexport var MY_SEGMENTS_UPDATE_V2 = 'MY_SEGMENTS_UPDATE_V2';\nexport var SEGMENT_UPDATE = 'SEGMENT_UPDATE';\nexport var SPLIT_KILL = 'SPLIT_KILL';\nexport var SPLIT_UPDATE = 'SPLIT_UPDATE';\n// Control-type push notifications, handled by NotificationKeeper\nexport var CONTROL = 'CONTROL';\nexport var OCCUPANCY = 'OCCUPANCY';\nexport var ControlType;\n(function (ControlType) {\n    ControlType[\"STREAMING_DISABLED\"] = \"STREAMING_DISABLED\";\n    ControlType[\"STREAMING_PAUSED\"] = \"STREAMING_PAUSED\";\n    ControlType[\"STREAMING_RESUMED\"] = \"STREAMING_RESUMED\";\n    ControlType[\"STREAMING_RESET\"] = \"STREAMING_RESET\";\n})(ControlType || (ControlType = {}));\n","import { CONSENT_GRANTED } from '../utils/constants';\nexport function isConsentGranted(settings) {\n    var userConsent = settings.userConsent;\n    // undefined userConsent is handled as granted (default)\n    return !userConsent || userConsent === CONSENT_GRANTED;\n}\n","import { objectAssign } from '../../utils/lang/objectAssign';\nimport { Backoff } from '../../utils/Backoff';\nimport { SSEHandlerFactory } from './SSEHandler';\nimport { MySegmentsUpdateWorker } from './UpdateWorkers/MySegmentsUpdateWorker';\nimport { SegmentsUpdateWorker } from './UpdateWorkers/SegmentsUpdateWorker';\nimport { SplitsUpdateWorker } from './UpdateWorkers/SplitsUpdateWorker';\nimport { authenticateFactory, hashUserKey } from './AuthClient';\nimport { forOwn } from '../../utils/lang';\nimport { SSEClient } from './SSEClient';\nimport { getMatching } from '../../utils/key';\nimport { MY_SEGMENTS_UPDATE, MY_SEGMENTS_UPDATE_V2, PUSH_NONRETRYABLE_ERROR, PUSH_SUBSYSTEM_DOWN, SECONDS_BEFORE_EXPIRATION, SEGMENT_UPDATE, SPLIT_KILL, SPLIT_UPDATE, PUSH_RETRYABLE_ERROR, PUSH_SUBSYSTEM_UP, ControlType } from './constants';\nimport { STREAMING_FALLBACK, STREAMING_REFRESH_TOKEN, STREAMING_CONNECTING, STREAMING_DISABLED, ERROR_STREAMING_AUTH, STREAMING_DISCONNECTING, STREAMING_RECONNECT, STREAMING_PARSING_MY_SEGMENTS_UPDATE_V2, STREAMING_PARSING_SPLIT_UPDATE } from '../../logger/constants';\nimport { UpdateStrategy } from './SSEHandler/types';\nimport { isInBitmap, parseBitmap, parseFFUpdatePayload, parseKeyList } from './parseUtils';\nimport { _Set } from '../../utils/lang/sets';\nimport { hash64 } from '../../utils/murmur3/murmur3_64';\nimport { TOKEN_REFRESH, AUTH_REJECTION } from '../../utils/constants';\n/**\n * PushManager factory:\n * - for server-side if key is not provided in settings.\n * - for client-side, with support for multiple clients, if key is provided in settings\n */\nexport function pushManagerFactory(params, pollingManager) {\n    var settings = params.settings, storage = params.storage, splitApi = params.splitApi, readiness = params.readiness, platform = params.platform, telemetryTracker = params.telemetryTracker;\n    // `userKey` is the matching key of main client in client-side SDK.\n    // It can be used to check if running on client-side or server-side SDK.\n    var userKey = settings.core.key ? getMatching(settings.core.key) : undefined;\n    var log = settings.log;\n    var sseClient;\n    try {\n        // `useHeaders` false for client-side, even if the platform EventSource supports headers (e.g., React Native).\n        sseClient = new SSEClient(settings, userKey ? false : true, platform.getEventSource);\n    }\n    catch (e) {\n        log.warn(STREAMING_FALLBACK, [e]);\n        return;\n    }\n    var authenticate = authenticateFactory(splitApi.fetchAuth);\n    // init feedback loop\n    var pushEmitter = new platform.EventEmitter();\n    var sseHandler = SSEHandlerFactory(log, pushEmitter, telemetryTracker);\n    sseClient.setEventHandler(sseHandler);\n    // init workers\n    // MySegmentsUpdateWorker (client-side) are initiated in `add` method\n    var segmentsUpdateWorker = userKey ? undefined : SegmentsUpdateWorker(log, pollingManager.segmentsSyncTask, storage.segments);\n    // For server-side we pass the segmentsSyncTask, used by SplitsUpdateWorker to fetch new segments\n    var splitsUpdateWorker = SplitsUpdateWorker(log, storage.splits, pollingManager.splitsSyncTask, readiness.splits, telemetryTracker, userKey ? undefined : pollingManager.segmentsSyncTask);\n    // [Only for client-side] map of hashes to user keys, to dispatch MY_SEGMENTS_UPDATE events to the corresponding MySegmentsUpdateWorker\n    var userKeyHashes = {};\n    // [Only for client-side] map of user keys to their corresponding hash64 and MySegmentsUpdateWorkers.\n    // Hash64 is used to process MY_SEGMENTS_UPDATE_V2 events and dispatch actions to the corresponding MySegmentsUpdateWorker.\n    var clients = {};\n    // [Only for client-side] variable to flag that a new client was added. It is needed to reconnect streaming.\n    var connectForNewClient = false;\n    // flag that indicates if `stop/disconnectPush` was called, either by the SyncManager, when the client is destroyed, or due to a PUSH_NONRETRYABLE_ERROR error.\n    // It is used to halt the `connectPush` process if it was in progress.\n    var disconnected;\n    // flag that indicates a PUSH_NONRETRYABLE_ERROR, condition with which starting pushManager again is ignored.\n    // true if STREAMING_DISABLED control event, or 'pushEnabled: false', or non-recoverable SSE or Auth errors.\n    var disabled; // `disabled` implies `disconnected === true`\n    /** PushManager functions related to initialization */\n    var connectPushRetryBackoff = new Backoff(connectPush, settings.scheduler.pushRetryBackoffBase);\n    var timeoutIdTokenRefresh;\n    var timeoutIdSseOpen;\n    function scheduleTokenRefreshAndSse(authData) {\n        // clear scheduled tasks if exist\n        if (timeoutIdTokenRefresh)\n            clearTimeout(timeoutIdTokenRefresh);\n        if (timeoutIdSseOpen)\n            clearTimeout(timeoutIdSseOpen);\n        // Set token refresh 10 minutes before `expirationTime - issuedAt`\n        var decodedToken = authData.decodedToken;\n        var refreshTokenDelay = decodedToken.exp - decodedToken.iat - SECONDS_BEFORE_EXPIRATION;\n        // Default connDelay of 60 secs\n        var connDelay = typeof authData.connDelay === 'number' && authData.connDelay >= 0 ? authData.connDelay : 60;\n        log.info(STREAMING_REFRESH_TOKEN, [refreshTokenDelay, connDelay]);\n        timeoutIdTokenRefresh = setTimeout(connectPush, refreshTokenDelay * 1000);\n        timeoutIdSseOpen = setTimeout(function () {\n            // halt if disconnected\n            if (disconnected)\n                return;\n            sseClient.open(authData);\n        }, connDelay * 1000);\n        telemetryTracker.streamingEvent(TOKEN_REFRESH, decodedToken.exp);\n    }\n    function connectPush() {\n        // Guard condition in case `stop/disconnectPush` has been called (e.g., calling SDK destroy, or app signal close/background)\n        if (disconnected)\n            return;\n        // @TODO distinguish log for 'Connecting' (1st time) and 'Re-connecting'\n        log.info(STREAMING_CONNECTING);\n        disconnected = false;\n        var userKeys = userKey ? Object.keys(clients) : undefined;\n        authenticate(userKeys).then(function (authData) {\n            if (disconnected)\n                return;\n            // 'pushEnabled: false' is handled as a PUSH_NONRETRYABLE_ERROR instead of PUSH_SUBSYSTEM_DOWN, in order to\n            // close the sseClient in case the org has been bloqued while the instance was connected to streaming\n            if (!authData.pushEnabled) {\n                log.info(STREAMING_DISABLED);\n                pushEmitter.emit(PUSH_NONRETRYABLE_ERROR);\n                return;\n            }\n            // [Only for client-side] don't open SSE connection if a new shared client was added, since it means that a new authentication is taking place\n            if (userKeys && userKeys.length < Object.keys(clients).length)\n                return;\n            // Schedule SSE connection and refresh token\n            scheduleTokenRefreshAndSse(authData);\n        }).catch(function (error) {\n            if (disconnected)\n                return;\n            log.error(ERROR_STREAMING_AUTH, [error.message]);\n            // Handle 4XX HTTP errors: 401 (invalid SDK Key) or 400 (using incorrect SDK Key, i.e., client-side SDK Key on server-side)\n            if (error.statusCode >= 400 && error.statusCode < 500) {\n                telemetryTracker.streamingEvent(AUTH_REJECTION);\n                pushEmitter.emit(PUSH_NONRETRYABLE_ERROR);\n                return;\n            }\n            // Handle other HTTP and network errors as recoverable errors\n            pushEmitter.emit(PUSH_RETRYABLE_ERROR);\n        });\n    }\n    // close SSE connection and cancel scheduled tasks\n    function disconnectPush() {\n        // Halt disconnecting, just to avoid redundant logs if called multiple times\n        if (disconnected)\n            return;\n        disconnected = true;\n        sseClient.close();\n        log.info(STREAMING_DISCONNECTING);\n        if (timeoutIdTokenRefresh)\n            clearTimeout(timeoutIdTokenRefresh);\n        if (timeoutIdSseOpen)\n            clearTimeout(timeoutIdSseOpen);\n        connectPushRetryBackoff.reset();\n        stopWorkers();\n    }\n    // cancel scheduled fetch retries of Splits, Segments, and MySegments Update Workers\n    function stopWorkers() {\n        splitsUpdateWorker.stop();\n        if (userKey)\n            forOwn(clients, function (_a) {\n                var worker = _a.worker;\n                return worker.stop();\n            });\n        else\n            segmentsUpdateWorker.stop();\n    }\n    pushEmitter.on(PUSH_SUBSYSTEM_DOWN, stopWorkers);\n    // Only required when streaming connects after a PUSH_RETRYABLE_ERROR.\n    // Otherwise it is unnecessary (e.g, STREAMING_RESUMED).\n    pushEmitter.on(PUSH_SUBSYSTEM_UP, function () {\n        connectPushRetryBackoff.reset();\n    });\n    /** Fallback to polling without retry due to: STREAMING_DISABLED control event, or 'pushEnabled: false', or non-recoverable SSE and Authentication errors */\n    pushEmitter.on(PUSH_NONRETRYABLE_ERROR, function handleNonRetryableError() {\n        disabled = true;\n        // Note: `stopWorkers` is been called twice, but it is not harmful\n        disconnectPush();\n        pushEmitter.emit(PUSH_SUBSYSTEM_DOWN); // no harm if polling already\n    });\n    /** Fallback to polling with retry due to recoverable SSE and Authentication errors */\n    pushEmitter.on(PUSH_RETRYABLE_ERROR, function handleRetryableError() {\n        // SSE connection is closed to avoid repeated errors due to retries\n        sseClient.close();\n        // retry streaming reconnect with backoff algorithm\n        var delayInMillis = connectPushRetryBackoff.scheduleCall();\n        log.info(STREAMING_RECONNECT, [delayInMillis / 1000]);\n        pushEmitter.emit(PUSH_SUBSYSTEM_DOWN); // no harm if polling already\n    });\n    /** STREAMING_RESET notification. Unlike a PUSH_RETRYABLE_ERROR, it doesn't emit PUSH_SUBSYSTEM_DOWN to fallback polling */\n    pushEmitter.on(ControlType.STREAMING_RESET, function handleStreamingReset() {\n        if (disconnected)\n            return; // should never happen\n        // Minimum required clean-up.\n        // `disconnectPush` cannot be called because it sets `disconnected` and thus `connectPush` will not execute\n        if (timeoutIdTokenRefresh)\n            clearTimeout(timeoutIdTokenRefresh);\n        connectPush();\n    });\n    /** Functions related to synchronization (Queues and Workers in the spec) */\n    pushEmitter.on(SPLIT_KILL, splitsUpdateWorker.killSplit);\n    pushEmitter.on(SPLIT_UPDATE, function (parsedData) {\n        if (parsedData.d && parsedData.c !== undefined) {\n            try {\n                var payload = parseFFUpdatePayload(parsedData.c, parsedData.d);\n                if (payload) {\n                    splitsUpdateWorker.put(parsedData, payload);\n                    return;\n                }\n            }\n            catch (e) {\n                log.warn(STREAMING_PARSING_SPLIT_UPDATE, [e]);\n            }\n        }\n        splitsUpdateWorker.put(parsedData);\n    });\n    if (userKey) {\n        pushEmitter.on(MY_SEGMENTS_UPDATE, function handleMySegmentsUpdate(parsedData, channel) {\n            var userKeyHash = channel.split('_')[2];\n            var userKey = userKeyHashes[userKeyHash];\n            if (userKey && clients[userKey]) { // check existence since it can be undefined if client has been destroyed\n                clients[userKey].worker.put(parsedData.changeNumber, parsedData.includesPayload ? parsedData.segmentList ? parsedData.segmentList : [] : undefined);\n            }\n        });\n        pushEmitter.on(MY_SEGMENTS_UPDATE_V2, function handleMySegmentsUpdate(parsedData) {\n            switch (parsedData.u) {\n                case UpdateStrategy.BoundedFetchRequest: {\n                    var bitmap_1;\n                    try {\n                        bitmap_1 = parseBitmap(parsedData.d, parsedData.c);\n                    }\n                    catch (e) {\n                        log.warn(STREAMING_PARSING_MY_SEGMENTS_UPDATE_V2, ['BoundedFetchRequest', e]);\n                        break;\n                    }\n                    forOwn(clients, function (_a) {\n                        var hash64 = _a.hash64, worker = _a.worker;\n                        if (isInBitmap(bitmap_1, hash64.hex)) {\n                            worker.put(parsedData.changeNumber); // fetch mySegments\n                        }\n                    });\n                    return;\n                }\n                case UpdateStrategy.KeyList: {\n                    var keyList = void 0, added_1, removed_1;\n                    try {\n                        keyList = parseKeyList(parsedData.d, parsedData.c);\n                        added_1 = new _Set(keyList.a);\n                        removed_1 = new _Set(keyList.r);\n                    }\n                    catch (e) {\n                        log.warn(STREAMING_PARSING_MY_SEGMENTS_UPDATE_V2, ['KeyList', e]);\n                        break;\n                    }\n                    forOwn(clients, function (_a) {\n                        var hash64 = _a.hash64, worker = _a.worker;\n                        var add = added_1.has(hash64.dec) ? true : removed_1.has(hash64.dec) ? false : undefined;\n                        if (add !== undefined) {\n                            worker.put(parsedData.changeNumber, {\n                                name: parsedData.segmentName,\n                                add: add\n                            });\n                        }\n                    });\n                    return;\n                }\n                case UpdateStrategy.SegmentRemoval:\n                    if (!parsedData.segmentName) {\n                        log.warn(STREAMING_PARSING_MY_SEGMENTS_UPDATE_V2, ['SegmentRemoval', 'No segment name was provided']);\n                        break;\n                    }\n                    forOwn(clients, function (_a) {\n                        var worker = _a.worker;\n                        return worker.put(parsedData.changeNumber, {\n                            name: parsedData.segmentName,\n                            add: false\n                        });\n                    });\n                    return;\n            }\n            // `UpdateStrategy.UnboundedFetchRequest` and fallbacks of other cases\n            forOwn(clients, function (_a) {\n                var worker = _a.worker;\n                worker.put(parsedData.changeNumber);\n            });\n        });\n    }\n    else {\n        pushEmitter.on(SEGMENT_UPDATE, segmentsUpdateWorker.put);\n    }\n    return objectAssign(\n    // Expose Event Emitter functionality and Event constants\n    Object.create(pushEmitter), {\n        // Stop/pause push mode.\n        // It doesn't emit events. Neither PUSH_SUBSYSTEM_DOWN to start polling.\n        stop: function () {\n            disconnectPush(); // `handleNonRetryableError` cannot be used as `stop`, because it emits PUSH_SUBSYSTEM_DOWN event, which starts polling.\n            if (userKey)\n                this.remove(userKey); // Necessary to properly resume streaming in client-side (e.g., RN SDK transition to foreground).\n        },\n        // Start/resume push mode.\n        // It eventually emits PUSH_SUBSYSTEM_DOWN, that starts polling, or PUSH_SUBSYSTEM_UP, that executes a syncAll\n        start: function () {\n            // Guard condition to avoid calling `connectPush` again if the `start` method is called multiple times or if push has been disabled.\n            if (disabled || disconnected === false)\n                return;\n            disconnected = false;\n            if (userKey)\n                this.add(userKey, pollingManager.segmentsSyncTask); // client-side\n            else\n                setTimeout(connectPush); // server-side runs in next cycle as in client-side, for consistency with client-side\n        },\n        // true/false if start or stop was called last respectively\n        isRunning: function () {\n            return disconnected === false;\n        },\n        // [Only for client-side]\n        add: function (userKey, mySegmentsSyncTask) {\n            var hash = hashUserKey(userKey);\n            if (!userKeyHashes[hash]) {\n                userKeyHashes[hash] = userKey;\n                clients[userKey] = { hash64: hash64(userKey), worker: MySegmentsUpdateWorker(mySegmentsSyncTask, telemetryTracker) };\n                connectForNewClient = true; // we must reconnect on start, to listen the channel for the new user key\n                // Reconnects in case of a new client.\n                // Run in next event-loop cycle to save authentication calls\n                // in case multiple clients are created in the current cycle.\n                setTimeout(function checkForReconnect() {\n                    if (connectForNewClient) {\n                        connectForNewClient = false;\n                        connectPush();\n                    }\n                }, 0);\n            }\n        },\n        // [Only for client-side]\n        remove: function (userKey) {\n            var hash = hashUserKey(userKey);\n            delete userKeyHashes[hash];\n            delete clients[userKey];\n        }\n    });\n}\n","var Backoff = /** @class */ (function () {\n    /**\n     * Schedule function calls with exponential backoff\n     *\n     * @param {function} cb\n     * @param {number} baseMillis\n     * @param {number} maxMillis\n     */\n    function Backoff(cb, baseMillis, maxMillis) {\n        this.baseMillis = Backoff.__TEST__BASE_MILLIS || baseMillis || Backoff.DEFAULT_BASE_MILLIS;\n        this.maxMillis = Backoff.__TEST__MAX_MILLIS || maxMillis || Backoff.DEFAULT_MAX_MILLIS;\n        this.attempts = 0;\n        this.cb = cb;\n    }\n    /**\n     * Schedule a next call to `cb`\n     * @returns scheduled delay in milliseconds\n     */\n    Backoff.prototype.scheduleCall = function () {\n        var _this = this;\n        var delayInMillis = Math.min(this.baseMillis * Math.pow(2, this.attempts), this.maxMillis);\n        if (this.timeoutID)\n            clearTimeout(this.timeoutID);\n        this.timeoutID = setTimeout(function () {\n            _this.timeoutID = undefined;\n            _this.cb();\n        }, delayInMillis);\n        this.attempts++;\n        return delayInMillis;\n    };\n    Backoff.prototype.reset = function () {\n        this.attempts = 0;\n        if (this.timeoutID) {\n            clearTimeout(this.timeoutID);\n            this.timeoutID = undefined;\n        }\n    };\n    Backoff.DEFAULT_BASE_MILLIS = 1000; // 1 second\n    Backoff.DEFAULT_MAX_MILLIS = 1800000; // 30 minutes\n    return Backoff;\n}());\nexport { Backoff };\n","import { errorParser, messageParser } from './NotificationParser';\nimport { notificationKeeperFactory } from './NotificationKeeper';\nimport { PUSH_RETRYABLE_ERROR, PUSH_NONRETRYABLE_ERROR, OCCUPANCY, CONTROL, MY_SEGMENTS_UPDATE, MY_SEGMENTS_UPDATE_V2, SEGMENT_UPDATE, SPLIT_KILL, SPLIT_UPDATE } from '../constants';\nimport { STREAMING_PARSING_ERROR_FAILS, ERROR_STREAMING_SSE, STREAMING_PARSING_MESSAGE_FAILS, STREAMING_NEW_MESSAGE } from '../../../logger/constants';\nimport { ABLY_ERROR, NON_REQUESTED, SSE_CONNECTION_ERROR } from '../../../utils/constants';\n/**\n * Factory for SSEHandler, which processes SSEClient messages and emits the corresponding push events.\n *\n * @param log factory logger\n * @param pushEmitter emitter for events related to streaming support\n */\nexport function SSEHandlerFactory(log, pushEmitter, telemetryTracker) {\n    var notificationKeeper = notificationKeeperFactory(pushEmitter, telemetryTracker);\n    function isRetryableError(error) {\n        if (error.parsedData && error.parsedData.code) {\n            // Ably error\n            var code = error.parsedData.code;\n            telemetryTracker.streamingEvent(ABLY_ERROR, code);\n            // 401 errors due to invalid or expired token (e.g., if refresh token coudn't be executed)\n            if (40140 <= code && code <= 40149)\n                return true;\n            // Others 4XX errors (e.g., bad request from the SDK)\n            if (40000 <= code && code <= 49999)\n                return false;\n        }\n        else {\n            // network errors or 5XX HTTP errors\n            telemetryTracker.streamingEvent(SSE_CONNECTION_ERROR, NON_REQUESTED);\n        }\n        return true;\n    }\n    return {\n        handleOpen: function () {\n            notificationKeeper.handleOpen();\n        },\n        /* HTTP & Network errors */\n        handleError: function (error) {\n            var errorWithParsedData = error;\n            try {\n                errorWithParsedData = errorParser(error);\n            }\n            catch (err) {\n                log.warn(STREAMING_PARSING_ERROR_FAILS, [err]);\n            }\n            var errorMessage = (errorWithParsedData.parsedData && errorWithParsedData.parsedData.message) || errorWithParsedData.message;\n            log.error(ERROR_STREAMING_SSE, [errorMessage]);\n            if (isRetryableError(errorWithParsedData)) {\n                pushEmitter.emit(PUSH_RETRYABLE_ERROR);\n            }\n            else {\n                pushEmitter.emit(PUSH_NONRETRYABLE_ERROR);\n            }\n        },\n        /* NotificationProcessor */\n        handleMessage: function (message) {\n            var messageWithParsedData;\n            try {\n                messageWithParsedData = messageParser(message);\n                if (!messageWithParsedData)\n                    return; // Messages with empty data are ignored\n            }\n            catch (err) {\n                log.warn(STREAMING_PARSING_MESSAGE_FAILS, [err]);\n                return;\n            }\n            var parsedData = messageWithParsedData.parsedData, data = messageWithParsedData.data, channel = messageWithParsedData.channel, timestamp = messageWithParsedData.timestamp;\n            log.debug(STREAMING_NEW_MESSAGE, [data]);\n            // we only handle update events if streaming is up.\n            if (!notificationKeeper.isStreamingUp() && [OCCUPANCY, CONTROL].indexOf(parsedData.type) === -1)\n                return;\n            switch (parsedData.type) {\n                /* update events */\n                case SPLIT_UPDATE:\n                case SEGMENT_UPDATE:\n                case MY_SEGMENTS_UPDATE_V2:\n                case SPLIT_KILL:\n                    pushEmitter.emit(parsedData.type, parsedData);\n                    break;\n                case MY_SEGMENTS_UPDATE:\n                    pushEmitter.emit(parsedData.type, parsedData, channel);\n                    break;\n                /* occupancy & control events, handled by NotificationManagerKeeper */\n                case OCCUPANCY:\n                    notificationKeeper.handleOccupancyEvent(parsedData.metrics.publishers, channel, timestamp);\n                    break;\n                case CONTROL:\n                    notificationKeeper.handleControlEvent(parsedData.controlType, channel, timestamp);\n                    break;\n                default:\n                    break;\n            }\n        },\n    };\n}\n","import { OCCUPANCY } from '../constants';\nimport { isString } from '../../../utils/lang';\n/**\n * Parses the `data` JSON string, if exists, of a given SSE error notifications.\n * HTTP errors handled by Ably (e.g., 400 due to invalid token, 401 due to expired token, 500) have the `data` property.\n * Other network and HTTP errors do not have this property.\n *\n * @param {Object} error\n * @throws {SyntaxError} if `error.data` is an invalid JSON string\n */\nexport function errorParser(error) {\n    // @ts-ignore\n    if (isString(error.data))\n        error.parsedData = JSON.parse(error.data); // cannot assign to read only property 'data'\n    return error;\n}\n/**\n * Parses the `data` JSON string of a given SSE message notifications.\n * Also assigns the type OCCUPANCY, if it corresponds, so that all supported messages (e.g., SPLIT_UPDATE, CONTROL) have a type.\n *\n * @param message\n * @returns parsed notification message or undefined if the given event data is falsy (e.g, '' or undefined).\n * For example, the EventSource implementation of React-Native for iOS emits a message event with empty data for Ably keepalive comments.\n * @throws {SyntaxError} if `message.data` or `JSON.parse(message.data).data` are invalid JSON strings\n */\nexport function messageParser(message) {\n    if (!message.data)\n        return;\n    var messageData = JSON.parse(message.data);\n    messageData.parsedData = JSON.parse(messageData.data);\n    // set the event type to OCCUPANCY, to handle all events uniformely\n    if (messageData.name && messageData.name === '[meta]occupancy')\n        messageData.parsedData.type = OCCUPANCY;\n    return messageData;\n}\n","import { CONNECTION_ESTABLISHED, DISABLED, ENABLED, OCCUPANCY_PRI, OCCUPANCY_SEC, PAUSED, STREAMING_STATUS } from '../../../utils/constants';\nimport { ControlType, PUSH_SUBSYSTEM_UP, PUSH_NONRETRYABLE_ERROR, PUSH_SUBSYSTEM_DOWN } from '../constants';\nvar CONTROL_CHANNEL_REGEXS = [/control_pri$/, /control_sec$/];\nvar STREAMING_EVENT_TYPES = [OCCUPANCY_PRI, OCCUPANCY_SEC];\n/**\n * Factory of notification keeper, which process OCCUPANCY and CONTROL notifications and emits the corresponding push events.\n *\n * @param pushEmitter emitter for events related to streaming support\n */\n// @TODO update logic to handle OCCUPANCY for any region and rename according to new spec (e.g.: PUSH_SUBSYSTEM_UP --> PUSH_SUBSYSTEM_UP)\nexport function notificationKeeperFactory(pushEmitter, telemetryTracker) {\n    var channels = CONTROL_CHANNEL_REGEXS.map(function (regex) { return ({\n        regex: regex,\n        hasPublishers: true,\n        oTime: -1,\n        cTime: -1 // keep track of most recent control notification timestamp per channel\n    }); });\n    // false if the number of publishers is equal to 0 in all regions\n    var hasPublishers = true;\n    // false if last CONTROL event was STREAMING_PAUSED or STREAMING_DISABLED\n    var hasResumed = true;\n    function getHasPublishers() {\n        return channels.some(function (c) { return c.hasPublishers; });\n    }\n    return {\n        handleOpen: function () {\n            telemetryTracker.streamingEvent(CONNECTION_ESTABLISHED);\n            pushEmitter.emit(PUSH_SUBSYSTEM_UP);\n        },\n        isStreamingUp: function () {\n            return hasResumed && hasPublishers;\n        },\n        handleOccupancyEvent: function (publishers, channel, timestamp) {\n            for (var i = 0; i < channels.length; i++) {\n                var c = channels[i];\n                if (c.regex.test(channel)) {\n                    telemetryTracker.streamingEvent(STREAMING_EVENT_TYPES[i], publishers);\n                    if (timestamp > c.oTime) {\n                        c.oTime = timestamp;\n                        c.hasPublishers = publishers !== 0;\n                        var hasPublishersNow = getHasPublishers();\n                        if (hasResumed) {\n                            if (!hasPublishersNow && hasPublishers) {\n                                pushEmitter.emit(PUSH_SUBSYSTEM_DOWN);\n                            }\n                            else if (hasPublishersNow && !hasPublishers) {\n                                pushEmitter.emit(PUSH_SUBSYSTEM_UP);\n                            }\n                            // nothing to do when hasResumed === false:\n                            // streaming is already down for `!hasPublishersNow`, and cannot be up for `hasPublishersNow`\n                        }\n                        hasPublishers = hasPublishersNow;\n                    }\n                    return;\n                }\n            }\n        },\n        handleControlEvent: function (controlType, channel, timestamp) {\n            /* STREAMING_RESET control event is handled by PushManager directly since it doesn't require\n             * tracking timestamp and state like OCCUPANCY or CONTROL. It also ignores previous\n             * OCCUPANCY and CONTROL notifications, and whether PUSH_SUBSYSTEM_DOWN has been emitted or not */\n            if (controlType === ControlType.STREAMING_RESET) {\n                pushEmitter.emit(controlType);\n                return;\n            }\n            for (var i = 0; i < channels.length; i++) {\n                var c = channels[i];\n                if (c.regex.test(channel)) {\n                    if (timestamp > c.cTime) {\n                        c.cTime = timestamp;\n                        if (controlType === ControlType.STREAMING_DISABLED) {\n                            telemetryTracker.streamingEvent(STREAMING_STATUS, DISABLED);\n                            pushEmitter.emit(PUSH_NONRETRYABLE_ERROR);\n                        }\n                        else if (hasPublishers) {\n                            if (controlType === ControlType.STREAMING_PAUSED && hasResumed) {\n                                telemetryTracker.streamingEvent(STREAMING_STATUS, PAUSED);\n                                pushEmitter.emit(PUSH_SUBSYSTEM_DOWN);\n                            }\n                            else if (controlType === ControlType.STREAMING_RESUMED && !hasResumed) {\n                                telemetryTracker.streamingEvent(STREAMING_STATUS, ENABLED);\n                                pushEmitter.emit(PUSH_SUBSYSTEM_UP);\n                            }\n                            // nothing to do when hasPublishers === false:\n                            // streaming is already down for `STREAMING_PAUSED`, and cannot be up for `STREAMING_RESUMED`\n                        }\n                        hasResumed = controlType === ControlType.STREAMING_RESUMED;\n                    }\n                    return;\n                }\n            }\n        },\n    };\n}\n","import { Backoff } from '../../../utils/Backoff';\nimport { MY_SEGMENT } from '../../../utils/constants';\n/**\n * MySegmentsUpdateWorker factory\n */\nexport function MySegmentsUpdateWorker(mySegmentsSyncTask, telemetryTracker) {\n    var maxChangeNumber = 0; // keeps the maximum changeNumber among queued events\n    var currentChangeNumber = -1;\n    var handleNewEvent = false;\n    var isHandlingEvent;\n    var _segmentsData; // keeps the segmentsData (if included in notification payload) from the queued event with maximum changeNumber\n    var backoff = new Backoff(__handleMySegmentsUpdateCall);\n    function __handleMySegmentsUpdateCall() {\n        isHandlingEvent = true;\n        if (maxChangeNumber > currentChangeNumber) {\n            handleNewEvent = false;\n            var currentMaxChangeNumber_1 = maxChangeNumber;\n            // fetch mySegments revalidating data if cached\n            mySegmentsSyncTask.execute(_segmentsData, true).then(function (result) {\n                if (!isHandlingEvent)\n                    return; // halt if `stop` has been called\n                if (result !== false) { // Unlike `Splits|SegmentsUpdateWorker`, we cannot use `mySegmentsCache.getChangeNumber` since `/mySegments` endpoint doesn't provide this value.\n                    if (_segmentsData)\n                        telemetryTracker.trackUpdatesFromSSE(MY_SEGMENT);\n                    currentChangeNumber = Math.max(currentChangeNumber, currentMaxChangeNumber_1); // use `currentMaxChangeNumber`, in case that `maxChangeNumber` was updated during fetch.\n                }\n                if (handleNewEvent) {\n                    __handleMySegmentsUpdateCall();\n                }\n                else {\n                    backoff.scheduleCall();\n                }\n            });\n        }\n        else {\n            isHandlingEvent = false;\n        }\n    }\n    return {\n        /**\n         * Invoked by NotificationProcessor on MY_SEGMENTS_UPDATE event\n         *\n         * @param {number} changeNumber change number of the MY_SEGMENTS_UPDATE notification\n         * @param {SegmentsData | undefined} segmentsData might be undefined\n         */\n        put: function (changeNumber, segmentsData) {\n            if (changeNumber <= currentChangeNumber || changeNumber <= maxChangeNumber)\n                return;\n            maxChangeNumber = changeNumber;\n            handleNewEvent = true;\n            _segmentsData = segmentsData;\n            if (backoff.timeoutID || !isHandlingEvent)\n                __handleMySegmentsUpdateCall();\n            backoff.reset();\n        },\n        stop: function () {\n            isHandlingEvent = false;\n            backoff.reset();\n        }\n    };\n}\n","import { Backoff } from '../../../utils/Backoff';\nimport { FETCH_BACKOFF_BASE, FETCH_BACKOFF_MAX_RETRIES, FETCH_BACKOFF_MAX_WAIT } from './constants';\n/**\n * SegmentsUpdateWorker factory\n */\nexport function SegmentsUpdateWorker(log, segmentsSyncTask, segmentsCache) {\n    // Handles retries with CDN bypass per segment name\n    function SegmentUpdateWorker(segment) {\n        var maxChangeNumber = 0;\n        var handleNewEvent = false;\n        var isHandlingEvent;\n        var cdnBypass;\n        var backoff = new Backoff(__handleSegmentUpdateCall, FETCH_BACKOFF_BASE, FETCH_BACKOFF_MAX_WAIT);\n        function __handleSegmentUpdateCall() {\n            isHandlingEvent = true;\n            if (maxChangeNumber > segmentsCache.getChangeNumber(segment)) {\n                handleNewEvent = false;\n                // fetch segments revalidating data if cached\n                segmentsSyncTask.execute(false, segment, true, cdnBypass ? maxChangeNumber : undefined).then(function () {\n                    if (!isHandlingEvent)\n                        return; // halt if `stop` has been called\n                    if (handleNewEvent) {\n                        __handleSegmentUpdateCall();\n                    }\n                    else {\n                        var attempts = backoff.attempts + 1;\n                        if (maxChangeNumber <= segmentsCache.getChangeNumber(segment)) {\n                            log.debug(\"Refresh completed\" + (cdnBypass ? ' bypassing the CDN' : '') + \" in \" + attempts + \" attempts.\");\n                            isHandlingEvent = false;\n                            return;\n                        }\n                        if (attempts < FETCH_BACKOFF_MAX_RETRIES) {\n                            backoff.scheduleCall();\n                            return;\n                        }\n                        if (cdnBypass) {\n                            log.debug(\"No changes fetched after \" + attempts + \" attempts with CDN bypassed.\");\n                            isHandlingEvent = false;\n                        }\n                        else {\n                            backoff.reset();\n                            cdnBypass = true;\n                            __handleSegmentUpdateCall();\n                        }\n                    }\n                });\n            }\n            else {\n                isHandlingEvent = false;\n            }\n        }\n        return {\n            put: function (changeNumber) {\n                var currentChangeNumber = segmentsCache.getChangeNumber(segment);\n                if (changeNumber <= currentChangeNumber || changeNumber <= maxChangeNumber)\n                    return;\n                maxChangeNumber = changeNumber;\n                handleNewEvent = true;\n                cdnBypass = false;\n                if (backoff.timeoutID || !isHandlingEvent)\n                    __handleSegmentUpdateCall();\n                backoff.reset();\n            },\n            stop: function () {\n                isHandlingEvent = false;\n                backoff.reset();\n            }\n        };\n    }\n    var segments = {};\n    return {\n        /**\n         * Invoked by NotificationProcessor on SEGMENT_UPDATE event\n         *\n         * @param {number} changeNumber change number of the SEGMENT_UPDATE notification\n         * @param {string} segmentName segment name of the SEGMENT_UPDATE notification\n         */\n        put: function (_a) {\n            var changeNumber = _a.changeNumber, segmentName = _a.segmentName;\n            if (!segments[segmentName])\n                segments[segmentName] = SegmentUpdateWorker(segmentName);\n            segments[segmentName].put(changeNumber);\n        },\n        stop: function () {\n            Object.keys(segments).forEach(function (segmentName) { return segments[segmentName].stop(); });\n        }\n    };\n}\n","export var FETCH_BACKOFF_BASE = 10000; // backoff base starting at 10 seconds\nexport var FETCH_BACKOFF_MAX_WAIT = 60000; // don't wait for more than 1 minute\nexport var FETCH_BACKOFF_MAX_RETRIES = 10; // max retries\n","import { SDK_SPLITS_ARRIVED } from '../../../readiness/constants';\nimport { Backoff } from '../../../utils/Backoff';\nimport { SPLITS } from '../../../utils/constants';\nimport { FETCH_BACKOFF_BASE, FETCH_BACKOFF_MAX_WAIT, FETCH_BACKOFF_MAX_RETRIES } from './constants';\n/**\n * SplitsUpdateWorker factory\n */\nexport function SplitsUpdateWorker(log, splitsCache, splitsSyncTask, splitsEventEmitter, telemetryTracker, segmentsSyncTask) {\n    var maxChangeNumber = 0;\n    var handleNewEvent = false;\n    var isHandlingEvent;\n    var cdnBypass;\n    var payload;\n    var backoff = new Backoff(__handleSplitUpdateCall, FETCH_BACKOFF_BASE, FETCH_BACKOFF_MAX_WAIT);\n    function __handleSplitUpdateCall() {\n        isHandlingEvent = true;\n        if (maxChangeNumber > splitsCache.getChangeNumber()) {\n            handleNewEvent = false;\n            var splitUpdateNotification_1 = payload ? { payload: payload, changeNumber: maxChangeNumber } : undefined;\n            // fetch splits revalidating data if cached\n            splitsSyncTask.execute(true, cdnBypass ? maxChangeNumber : undefined, splitUpdateNotification_1).then(function () {\n                if (!isHandlingEvent)\n                    return; // halt if `stop` has been called\n                if (handleNewEvent) {\n                    __handleSplitUpdateCall();\n                }\n                else {\n                    if (splitUpdateNotification_1)\n                        telemetryTracker.trackUpdatesFromSSE(SPLITS);\n                    // fetch new registered segments for server-side API. Not retrying on error\n                    if (segmentsSyncTask)\n                        segmentsSyncTask.execute(true);\n                    var attempts = backoff.attempts + 1;\n                    if (maxChangeNumber <= splitsCache.getChangeNumber()) {\n                        log.debug(\"Refresh completed\" + (cdnBypass ? ' bypassing the CDN' : '') + \" in \" + attempts + \" attempts.\");\n                        isHandlingEvent = false;\n                        return;\n                    }\n                    if (attempts < FETCH_BACKOFF_MAX_RETRIES) {\n                        backoff.scheduleCall();\n                        return;\n                    }\n                    if (cdnBypass) {\n                        log.debug(\"No changes fetched after \" + attempts + \" attempts with CDN bypassed.\");\n                        isHandlingEvent = false;\n                    }\n                    else {\n                        backoff.reset();\n                        cdnBypass = true;\n                        __handleSplitUpdateCall();\n                    }\n                }\n            });\n        }\n        else {\n            isHandlingEvent = false;\n        }\n    }\n    /**\n     * Invoked by NotificationProcessor on SPLIT_UPDATE event\n     *\n     * @param {number} changeNumber change number of the SPLIT_UPDATE notification\n     */\n    function put(_a, _payload) {\n        var changeNumber = _a.changeNumber, pcn = _a.pcn;\n        var currentChangeNumber = splitsCache.getChangeNumber();\n        if (changeNumber <= currentChangeNumber || changeNumber <= maxChangeNumber)\n            return;\n        maxChangeNumber = changeNumber;\n        handleNewEvent = true;\n        cdnBypass = false;\n        payload = undefined;\n        if (_payload && currentChangeNumber === pcn) {\n            payload = _payload;\n        }\n        if (backoff.timeoutID || !isHandlingEvent)\n            __handleSplitUpdateCall();\n        backoff.reset();\n    }\n    return {\n        put: put,\n        /**\n         * Invoked by NotificationProcessor on SPLIT_KILL event\n         *\n         * @param {number} changeNumber change number of the SPLIT_UPDATE notification\n         * @param {string} splitName name of split to kill\n         * @param {string} defaultTreatment default treatment value\n         */\n        killSplit: function (_a) {\n            var changeNumber = _a.changeNumber, splitName = _a.splitName, defaultTreatment = _a.defaultTreatment;\n            if (splitsCache.killLocally(splitName, defaultTreatment, changeNumber)) {\n                // trigger an SDK_UPDATE if Split was killed locally\n                splitsEventEmitter.emit(SDK_SPLITS_ARRIVED, true);\n            }\n            // queues the SplitChanges fetch (only if changeNumber is newer)\n            put({ changeNumber: changeNumber });\n        },\n        stop: function () {\n            isHandlingEvent = false;\n            backoff.reset();\n        }\n    };\n}\n","import { objectAssign } from '../../../utils/lang/objectAssign';\nimport { encodeToBase64 } from '../../../utils/base64';\nimport { decodeJWTtoken } from '../../../utils/jwt';\nimport { hash } from '../../../utils/murmur3/murmur3';\n/**\n * Factory of authentication function.\n *\n * @param fetchAuth `SplitAPI.fetchAuth` endpoint\n */\nexport function authenticateFactory(fetchAuth) {\n    /**\n     * Run authentication requests to Auth Server, and returns a promise that resolves with the decoded JTW token.\n     * @param {string[] | undefined} userKeys set of user Keys to track MY_SEGMENTS_CHANGES. It is undefined for server-side API.\n     */\n    return function authenticate(userKeys) {\n        return fetchAuth(userKeys)\n            .then(function (resp) { return resp.json(); })\n            .then(function (json) {\n            if (json.token) { // empty token when `\"pushEnabled\": false`\n                var decodedToken = decodeJWTtoken(json.token);\n                if (typeof decodedToken.iat !== 'number' || typeof decodedToken.exp !== 'number')\n                    throw new Error('token properties \"issuedAt\" (iat) or \"expiration\" (exp) are missing or invalid');\n                var channels = JSON.parse(decodedToken['x-ably-capability']);\n                return objectAssign({\n                    decodedToken: decodedToken,\n                    channels: channels\n                }, json);\n            }\n            return json;\n        });\n    };\n}\n/**\n * Returns the hash of a given user key\n */\nexport function hashUserKey(userKey) {\n    return encodeToBase64(hash(userKey, 0).toString());\n}\n","/**\n * Base64 utils in pure JS, for browser, node and others which don't provide globals `btoa` and `atob`.\n * Implementation based on davidchambers/Base64 (https://github.com/davidchambers/Base64.js).\n\n   Copyright 2019 David Chambers\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n/**\n * Decode a given string value in Base64 format\n *\n * @param {string} input value to decode\n */\nexport function decodeFromBase64(input) {\n    var str = (String(input)).replace(/[=]+$/, ''); // #31: ExtendScript bad parse of /=\n    if (str.length % 4 === 1) {\n        throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    var output = '';\n    for (\n    // initialize result and counters\n    var bc = 0, bs = void 0, buffer = void 0, idx = 0; \n    // get next character\n    buffer = str.charAt(idx++); // eslint-disable-line no-cond-assign\n     \n    // character found in table? initialize bit storage and add its ascii value;\n    // @ts-ignore\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n/**\n * Encode a given string value to Base64 format.\n *\n * @param {string} input value to encode\n */\nexport function encodeToBase64(input) {\n    var str = String(input);\n    var output = '';\n    for (\n    // initialize result and counter\n    var block = void 0, charCode = void 0, idx = 0, map = chars; \n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1); \n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n        charCode = str.charCodeAt(idx += 3 / 4);\n        if (charCode > 0xFF) {\n            throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n        }\n        // @ts-ignore\n        block = block << 8 | charCode;\n    }\n    return output;\n}\n","import { decodeFromBase64 } from '../base64';\n/**\n * Decode a JWT token.\n */\nexport function decodeJWTtoken(token) {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    // no need to check availability of `encodeURIComponent`, since it is a function highly supported in browsers, node and other platforms.\n    var jsonPayload = decodeURIComponent(decodeFromBase64(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n}\n","/* eslint-disable no-fallthrough */\nimport { UTF16ToUTF8, x86Fmix, x86Multiply, x86Rotl } from './common';\n/*\n * +----------------------------------------------------------------------------------+\n * | murmurHash3.js v3.0.0 (http://github.com/karanlyons/murmurHash3.js)              |\n * | A TypeScript/JavaScript implementation of MurmurHash3's hashing algorithms.      |\n * |----------------------------------------------------------------------------------|\n * | Copyright (c) 2012-2020 Karan Lyons. Freely distributable under the MIT license. |\n * +----------------------------------------------------------------------------------+\n */\n// PUBLIC FUNCTIONS\n// ----------------\nfunction hash32(key, seed) {\n    //\n    // Given a string and an optional seed as an int, returns a 32 bit hash\n    // using the x86 flavor of MurmurHash3, as an unsigned int.\n    //\n    key = key || '';\n    seed = seed || 0;\n    var remainder = key.length % 4;\n    var bytes = key.length - remainder;\n    var h1 = seed;\n    var k1 = 0;\n    var c1 = 0xcc9e2d51;\n    var c2 = 0x1b873593;\n    for (var i = 0; i < bytes; i = i + 4) {\n        k1 = ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) & 0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24);\n        k1 = x86Multiply(k1, c1);\n        k1 = x86Rotl(k1, 15);\n        k1 = x86Multiply(k1, c2);\n        h1 ^= k1;\n        h1 = x86Rotl(h1, 13);\n        h1 = x86Multiply(h1, 5) + 0xe6546b64;\n    }\n    k1 = 0;\n    switch (remainder) {\n        case 3:\n            k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n        case 2:\n            k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n        case 1:\n            k1 ^= (key.charCodeAt(i) & 0xff);\n            k1 = x86Multiply(k1, c1);\n            k1 = x86Rotl(k1, 15);\n            k1 = x86Multiply(k1, c2);\n            h1 ^= k1;\n    }\n    h1 ^= key.length;\n    h1 = x86Fmix(h1);\n    return h1 >>> 0;\n}\nexport function hash(str, seed) {\n    return hash32(UTF16ToUTF8(str), seed >>> 0);\n}\nexport function bucket(str, seed) {\n    return Math.abs(hash(str, seed) % 100) + 1;\n}\n","import { stringSource, stringDestination, encodeUTF16toUTF8 } from './utfx';\nexport function UTF16ToUTF8(key) {\n    var sd;\n    encodeUTF16toUTF8(stringSource(key), sd = stringDestination());\n    return sd();\n}\n/*!\n * +----------------------------------------------------------------------------------+\n * | murmurHash3.js v3.0.0 (http://github.com/karanlyons/murmurHash3.js)              |\n * | A TypeScript/JavaScript implementation of MurmurHash3's hashing algorithms.      |\n * |----------------------------------------------------------------------------------|\n * | Copyright (c) 2012-2020 Karan Lyons. Freely distributable under the MIT license. |\n * +----------------------------------------------------------------------------------+\n */\nexport function x86Multiply(m, n) {\n    //\n    // Given two 32bit ints, returns the two multiplied together as a\n    // 32bit int.\n    //\n    return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n}\nexport function x86Rotl(m, n) {\n    //\n    // Given a 32bit int and an int representing a number of bit positions,\n    // returns the 32bit int rotated left by that number of positions.\n    //\n    return (m << n) | (m >>> (32 - n));\n}\nexport function x86Fmix(h) {\n    //\n    // Given a block, returns murmurHash3's final x86 mix of that block.\n    //\n    h ^= h >>> 16;\n    h = x86Multiply(h, 0x85ebca6b);\n    h ^= h >>> 13;\n    h = x86Multiply(h, 0xc2b2ae35);\n    h ^= h >>> 16;\n    return h;\n}\n","/*\n Trimmed version of \"utfx\" library (https://www.npmjs.com/package/utfx/v/1.0.1) used to encode,\n decode and convert UTF8 / UTF16 in JavaScript, with the minimal methods used by the SDK.\n\n utfx (c) 2014 Daniel Wirtz <dcode@dcode.io>\n Released under the Apache License, Version 2.0\n see: https://github.com/dcodeIO/utfx for details\n*/\n/**\n * Encodes UTF8 code points to UTF8 bytes.\n * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\n *  respectively `null` if there are no more code points left or a single numeric code point.\n * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\n * @expose\n */\nfunction encodeUTF8(src, dst) {\n    var cp = null;\n    if (typeof src === 'number')\n        cp = src, src = function () { return null; };\n    while (cp !== null || (cp = src()) !== null) {\n        if (cp < 0x80)\n            dst(cp & 0x7F);\n        else if (cp < 0x800)\n            dst(((cp >> 6) & 0x1F) | 0xC0), dst((cp & 0x3F) | 0x80);\n        else if (cp < 0x10000)\n            dst(((cp >> 12) & 0x0F) | 0xE0), dst(((cp >> 6) & 0x3F) | 0x80), dst((cp & 0x3F) | 0x80);\n        else\n            dst(((cp >> 18) & 0x07) | 0xF0), dst(((cp >> 12) & 0x3F) | 0x80), dst(((cp >> 6) & 0x3F) | 0x80), dst((cp & 0x3F) | 0x80);\n        cp = null;\n    }\n}\n/**\n * Converts UTF16 characters to UTF8 code points.\n * @param {!function():number|null} src Characters source as a function returning the next char code respectively\n *  `null` if there are no more characters left.\n * @param {!function(number)} dst Code points destination as a function successively called with each converted code\n *  point.\n * @expose\n */\nfunction UTF16toUTF8(src, dst) {\n    var c1, c2 = null;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        if ((c1 = c2 !== null ? c2 : src()) === null)\n            break;\n        if (c1 >= 0xD800 && c1 <= 0xDFFF) {\n            if ((c2 = src()) !== null) {\n                if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\n                    dst((c1 - 0xD800) * 0x400 + c2 - 0xDC00 + 0x10000);\n                    c2 = null;\n                    continue;\n                }\n            }\n        }\n        dst(c1);\n    }\n    if (c2 !== null)\n        dst(c2);\n}\n/**\n * Converts and encodes UTF16 characters to UTF8 bytes.\n * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\n *  if there are no more characters left.\n * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\n * @expose\n */\nexport function encodeUTF16toUTF8(src, dst) {\n    UTF16toUTF8(src, function (cp) {\n        encodeUTF8(cp, dst);\n    });\n}\n/**\n * String.fromCharCode reference for compile time renaming.\n * @type {!function(...[number]):string}\n * @inner\n */\nvar stringFromCharCode = String.fromCharCode;\n/**\n * Creates a source function for a string.\n * @param {string} s String to read from\n * @returns {!function():number|null} Source function returning the next char code respectively `null` if there are\n *  no more characters left.\n * @throws {TypeError} If the argument is invalid\n * @expose\n */\nexport function stringSource(s) {\n    if (typeof s !== 'string')\n        throw TypeError('Illegal argument: ' + (typeof s));\n    var i = 0;\n    return function () {\n        return i >= s.length ? null : s.charCodeAt(i++);\n    };\n}\n/**\n * Creates a destination function for a string.\n * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\n *  Returns the final string when called without arguments.\n * @expose\n */\nexport function stringDestination() {\n    var cs = [], ps = [];\n    return function () {\n        if (arguments.length === 0)\n            return ps.join('') + stringFromCharCode.apply(String, cs);\n        if (cs.length + arguments.length > 1024)\n            ps.push(stringFromCharCode.apply(String, cs)), cs.length = 0; // @ts-ignore\n        Array.prototype.push.apply(cs, arguments);\n    };\n}\n","import { isString } from '../../../utils/lang';\nvar VERSION = '1.1';\nvar CONTROL_CHANNEL_REGEX = /^control_/;\n/**\n * Build metadata headers for SSE connection.\n *\n * @param {ISettings} settings Validated settings.\n * @returns {Record<string, string>} Headers object\n */\nfunction buildSSEHeaders(settings) {\n    var headers = {\n        SplitSDKClientKey: isString(settings.core.authorizationKey) ? settings.core.authorizationKey.slice(-4) : '',\n        SplitSDKVersion: settings.version,\n    };\n    // ip and hostname are false if IPAddressesEnabled is false\n    var _a = settings.runtime, ip = _a.ip, hostname = _a.hostname;\n    if (ip)\n        headers['SplitSDKMachineIP'] = ip;\n    if (hostname)\n        headers['SplitSDKMachineName'] = hostname;\n    return headers;\n}\n/**\n * Handles streaming connections with EventSource API\n */\nvar SSEClient = /** @class */ (function () {\n    /**\n     * SSEClient constructor.\n     *\n     * @param settings Validated settings.\n     * @param useHeaders True to send metadata as headers or false to send as query params. If `true`, the provided EventSource must support headers.\n     * @param getEventSource Function to get the EventSource constructor.\n     * @throws 'EventSource API is not available. ' if EventSource is not available.\n     */\n    function SSEClient(settings, useHeaders, getEventSource) {\n        this.eventSource = getEventSource && getEventSource();\n        // if eventSource is not available, throw an exception\n        if (!this.eventSource)\n            throw new Error('EventSource API is not available. ');\n        this.streamingUrl = settings.urls.streaming + '/sse';\n        // @TODO get `useHeaders` flag from `getEventSource`, to use EventSource headers on client-side SDKs when possible.\n        this.useHeaders = useHeaders;\n        this.headers = buildSSEHeaders(settings);\n    }\n    SSEClient.prototype.setEventHandler = function (handler) {\n        this.handler = handler;\n    };\n    /**\n     * Open the connection with a given authToken\n     *\n     * @param {IAuthTokenPushEnabled} authToken\n     * @throws {TypeError} Will throw an error if `authToken` is undefined\n     */\n    SSEClient.prototype.open = function (authToken) {\n        this.close(); // it closes connection if previously opened\n        var channelsQueryParam = Object.keys(authToken.channels).map(function (channel) {\n            var params = CONTROL_CHANNEL_REGEX.test(channel) ? '[?occupancy=metrics.publishers]' : '';\n            return encodeURIComponent(params + channel);\n        }).join(',');\n        var url = this.streamingUrl + \"?channels=\" + channelsQueryParam + \"&accessToken=\" + authToken.token + \"&v=\" + VERSION + \"&heartbeats=true\"; // same results using `&heartbeats=false`\n        this.connection = new this.eventSource(\n        // For client-side SDKs, SplitSDKClientKey and SplitSDKClientKey metadata is passed as query params,\n        // because native EventSource implementations for browser doesn't support headers.\n        this.useHeaders ? url : url + (\"&SplitSDKVersion=\" + this.headers.SplitSDKVersion + \"&SplitSDKClientKey=\" + this.headers.SplitSDKClientKey), \n        // @ts-ignore. For server-side SDKs, metadata is passed via headers. EventSource must support headers, like 'eventsource' package for Node.\n        this.useHeaders ? { headers: this.headers } : undefined);\n        if (this.handler) { // no need to check if SSEClient is used only by PushManager\n            this.connection.addEventListener('open', this.handler.handleOpen);\n            this.connection.addEventListener('message', this.handler.handleMessage);\n            this.connection.addEventListener('error', this.handler.handleError);\n        }\n    };\n    /** Close connection  */\n    SSEClient.prototype.close = function () {\n        if (this.connection)\n            this.connection.close();\n    };\n    return SSEClient;\n}());\nexport { SSEClient };\n","import { isObject } from '../lang';\n// function isSplitKeyObject(key: any): key is SplitIO.SplitKeyObject {\n//   return key !== undefined && key !== null && typeof key.matchingKey === 'string';\n// }\n// returns the matchingKey if the Key is defined as an object or the key itself if it is a string\nexport function getMatching(key) {\n    return isObject(key) ? key.matchingKey : key;\n}\n// if the key is a string, there's no bucketingKey (undefined)\nexport function getBucketing(key) {\n    return isObject(key) ? key.bucketingKey : undefined;\n}\n/**\n * Verify type of key and return a valid object key used for get treatment for a\n * specific split.\n */\nexport function keyParser(key) {\n    if (isObject(key)) {\n        return {\n            matchingKey: key.matchingKey,\n            bucketingKey: key.bucketingKey\n        };\n    }\n    else {\n        return {\n            matchingKey: key,\n            bucketingKey: key\n        };\n    }\n}\n","export var Compression;\n(function (Compression) {\n    Compression[Compression[\"None\"] = 0] = \"None\";\n    Compression[Compression[\"Gzip\"] = 1] = \"Gzip\";\n    Compression[Compression[\"Zlib\"] = 2] = \"Zlib\";\n})(Compression || (Compression = {}));\nexport var UpdateStrategy;\n(function (UpdateStrategy) {\n    UpdateStrategy[UpdateStrategy[\"UnboundedFetchRequest\"] = 0] = \"UnboundedFetchRequest\";\n    UpdateStrategy[UpdateStrategy[\"BoundedFetchRequest\"] = 1] = \"BoundedFetchRequest\";\n    UpdateStrategy[UpdateStrategy[\"KeyList\"] = 2] = \"KeyList\";\n    UpdateStrategy[UpdateStrategy[\"SegmentRemoval\"] = 3] = \"SegmentRemoval\";\n})(UpdateStrategy || (UpdateStrategy = {}));\n","import { algorithms } from '../../utils/decompress';\nimport { decodeFromBase64 } from '../../utils/base64';\nvar GZIP = 1;\nvar ZLIB = 2;\nfunction Uint8ArrayToString(myUint8Arr) {\n    return String.fromCharCode.apply(null, myUint8Arr);\n}\nfunction StringToUint8Array(myString) {\n    var charCodes = myString.split('').map(function (e) { return e.charCodeAt(0); });\n    // eslint-disable-next-line compat/compat\n    return new Uint8Array(charCodes);\n}\n/**\n * Decode and decompress 'data' with 'compression' algorithm\n *\n * @param {string} data\n * @param {number} compression 1 GZIP, 2 ZLIB\n * @returns {Uint8Array}\n * @throws if data string cannot be decoded, decompressed or the provided compression value is invalid (not 1 or 2)\n */\nfunction decompress(data, compression) {\n    var compressData = decodeFromBase64(data);\n    var binData = StringToUint8Array(compressData);\n    if (typeof algorithms === 'string')\n        throw new Error(algorithms);\n    if (compression === GZIP)\n        return algorithms.gunzipSync(binData);\n    if (compression === ZLIB)\n        return algorithms.unzlibSync(binData);\n    throw new Error(\"Invalid compression algorithm #\" + compression);\n}\n/**\n * Decode, decompress and parse the provided 'data' into a KeyList object\n *\n * @param {string} data\n * @param {number} compression\n * @param {boolean} avoidPrecisionLoss true as default, set it as false if dont need to avoid precission loss\n * @returns {{a?: string[], r?: string[] }}\n * @throws if data string cannot be decoded, decompressed or parsed\n */\nexport function parseKeyList(data, compression, avoidPrecisionLoss) {\n    if (avoidPrecisionLoss === void 0) { avoidPrecisionLoss = true; }\n    var binKeyList = decompress(data, compression);\n    var strKeyList = Uint8ArrayToString(binKeyList);\n    // replace numbers to strings, to avoid losing precision\n    if (avoidPrecisionLoss)\n        strKeyList = strKeyList.replace(/\\d+/g, '\"$&\"');\n    return JSON.parse(strKeyList);\n}\n/**\n * Decode, decompress and parse the provided 'data' into a Bitmap object\n *\n * @param {string} data\n * @param {number} compression\n * @returns {Uint8Array}\n * @throws if data string cannot be decoded or decompressed\n */\nexport function parseBitmap(data, compression) {\n    return decompress(data, compression);\n}\n/**\n * Check if the 'bitmap' bit at 'hash64hex' position is 1\n *\n * @param {Uint8Array} bitmap\n * @param {string} hash64hex 16-chars string, representing a number in hexa\n * @returns {boolean}\n */\nexport function isInBitmap(bitmap, hash64hex) {\n    // using the lowest 32 bits as index, to avoid losing precision when converting to number\n    var index = parseInt(hash64hex.slice(8), 16) % (bitmap.length * 8);\n    var internal = Math.floor(index / 8);\n    var offset = index % 8;\n    return (bitmap[internal] & 1 << offset) > 0;\n}\n/**\n * Parse feature flags notifications for instant feature flag updates\n *\n * @param {ISplitUpdateData} data\n * @returns {KeyList}\n */\nexport function parseFFUpdatePayload(compression, data) {\n    var avoidPrecisionLoss = false;\n    if (compression > 0)\n        return parseKeyList(data, compression, avoidPrecisionLoss);\n    else\n        return JSON.parse(decodeFromBase64(data));\n}\n","/*\nTrimmed version of \"fflate\" library (https://www.npmjs.com/package/fflate/v/0.7.1)\nused for GZIP/Zlib decompression in JavaScript, with the minimal modules used by the SDK.\n\nMIT License\n\nCopyright (c) 2020 Arjun Barrett\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n/* eslint-disable */\n// @ts-nocheck\nexport var algorithms = (function iifeDecompress() {\n    // Handle runtimes without typed arrays\n    if ([typeof Uint8Array, typeof Uint16Array, typeof Uint32Array].some(function (v) { return v != 'function'; })) {\n        return 'global Uint8Array object is not available for gzip/zlib decompression';\n    }\n    // DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n    // aliases for shorter compressed code (most minifers don't do this)\n    var u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n    // fixed length extra bits\n    var fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n    // fixed distance extra bits\n    // see fleb note\n    var fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n    // code length index map\n    var clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n    // get base, reverse index map from extra bits\n    var freb = function (eb, start) {\n        var b = new u16(31);\n        for (var i = 0; i < 31; ++i) {\n            b[i] = start += 1 << eb[i - 1];\n        }\n        // numbers here are at max 18 bits\n        var r = new u32(b[30]);\n        for (var i = 1; i < 30; ++i) {\n            for (var j = b[i]; j < b[i + 1]; ++j) {\n                r[j] = ((j - b[i]) << 5) | i;\n            }\n        }\n        return [b, r];\n    };\n    var _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n    // we can ignore the fact that the other numbers are wrong; they never happen anyway\n    fl[28] = 258, revfl[258] = 28;\n    var _b = freb(fdeb, 0), fd = _b[0];\n    // map of value to reverse (assuming 16 bits)\n    var rev = new u16(32768);\n    for (var i = 0; i < 32768; ++i) {\n        // reverse table algorithm from SO\n        var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n        x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n        x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n        rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n    }\n    // create huffman tree from u8 \"map\": index -> code length for code index\n    // mb (max bits) must be at most 15\n    // TODO: optimize/split up?\n    var hMap = (function (cd, mb, r) {\n        var s = cd.length;\n        // index\n        var i = 0;\n        // u16 \"map\": index -> # of codes with bit length = index\n        var l = new u16(mb);\n        // length of cd must be 288 (total # of codes)\n        for (; i < s; ++i)\n            ++l[cd[i] - 1];\n        // u16 \"map\": index -> minimum code for bit length = index\n        var le = new u16(mb);\n        for (i = 0; i < mb; ++i) {\n            le[i] = (le[i - 1] + l[i - 1]) << 1;\n        }\n        var co;\n        if (r) {\n            // u16 \"map\": index -> number of actual bits, symbol for code\n            co = new u16(1 << mb);\n            // bits to remove for reverser\n            var rvb = 15 - mb;\n            for (i = 0; i < s; ++i) {\n                // ignore 0 lengths\n                if (cd[i]) {\n                    // num encoding both symbol and bits read\n                    var sv = (i << 4) | cd[i];\n                    // free bits\n                    var r_1 = mb - cd[i];\n                    // start value\n                    var v = le[cd[i] - 1]++ << r_1;\n                    // m is end value\n                    for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                        // every 16 bit value starting with the code yields the same result\n                        co[rev[v] >>> rvb] = sv;\n                    }\n                }\n            }\n        }\n        else {\n            co = new u16(s);\n            for (i = 0; i < s; ++i) {\n                if (cd[i]) {\n                    co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n                }\n            }\n        }\n        return co;\n    });\n    // fixed length tree\n    var flt = new u8(288);\n    for (var i = 0; i < 144; ++i)\n        flt[i] = 8;\n    for (var i = 144; i < 256; ++i)\n        flt[i] = 9;\n    for (var i = 256; i < 280; ++i)\n        flt[i] = 7;\n    for (var i = 280; i < 288; ++i)\n        flt[i] = 8;\n    // fixed distance tree\n    var fdt = new u8(32);\n    for (var i = 0; i < 32; ++i)\n        fdt[i] = 5;\n    // fixed length map\n    var flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n    // fixed distance map\n    var fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n    // find max of array\n    var max = function (a) {\n        var m = a[0];\n        for (var i = 1; i < a.length; ++i) {\n            if (a[i] > m)\n                m = a[i];\n        }\n        return m;\n    };\n    // read d, starting at bit p and mask with m\n    var bits = function (d, p, m) {\n        var o = (p / 8) | 0;\n        return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n    };\n    // read d, starting at bit p continuing for at least 16 bits\n    var bits16 = function (d, p) {\n        var o = (p / 8) | 0;\n        return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n    };\n    // get end of byte\n    var shft = function (p) { return ((p + 7) / 8) | 0; };\n    // typed array slice - allows garbage collector to free original reference,\n    // while being more compatible than .slice\n    var slc = function (v, s, e) {\n        if (s == null || s < 0)\n            s = 0;\n        if (e == null || e > v.length)\n            e = v.length;\n        // can't use .constructor in case user-supplied\n        var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n        n.set(v.subarray(s, e));\n        return n;\n    };\n    // error codes\n    var ec = [\n        'unexpected EOF',\n        'invalid block type',\n        'invalid length/literal',\n        'invalid distance',\n        'stream finished',\n        'no stream handler',\n        ,\n        'no callback',\n        'invalid UTF-8 data',\n        'extra field too long',\n        'date not in range 1980-2099',\n        'filename too long',\n        'stream finishing',\n        'invalid zip data'\n        // determined by unknown compression method\n    ];\n    var err = function (ind, msg, nt) {\n        var e = new Error(msg || ec[ind]);\n        e.code = ind;\n        if (Error.captureStackTrace)\n            Error.captureStackTrace(e, err);\n        if (!nt)\n            throw e;\n        return e;\n    };\n    // expands raw DEFLATE data\n    var inflt = function (dat, buf, st) {\n        // source length\n        var sl = dat.length;\n        if (!sl || (st && st.f && !st.l))\n            return buf || new u8(0);\n        // have to estimate size\n        var noBuf = !buf || st;\n        // no state\n        var noSt = !st || st.i;\n        if (!st)\n            st = {};\n        // Assumes roughly 33% compression ratio average\n        if (!buf)\n            buf = new u8(sl * 3);\n        // ensure buffer can fit at least l elements\n        var cbuf = function (l) {\n            var bl = buf.length;\n            // need to increase size to fit\n            if (l > bl) {\n                // Double or set to necessary, whichever is greater\n                var nbuf = new u8(Math.max(bl * 2, l));\n                nbuf.set(buf);\n                buf = nbuf;\n            }\n        };\n        //  last chunk         bitpos           bytes\n        var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n        // total bits\n        var tbts = sl * 8;\n        do {\n            if (!lm) {\n                // BFINAL - this is only 1 when last chunk is next\n                final = bits(dat, pos, 1);\n                // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n                var type = bits(dat, pos + 1, 3);\n                pos += 3;\n                if (!type) {\n                    // go to end of byte boundary\n                    var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                    if (t > sl) {\n                        if (noSt)\n                            err(0);\n                        break;\n                    }\n                    // ensure size\n                    if (noBuf)\n                        cbuf(bt + l);\n                    // Copy over uncompressed data\n                    buf.set(dat.subarray(s, t), bt);\n                    // Get new bitpos, update byte count\n                    st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                    continue;\n                }\n                else if (type == 1)\n                    lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n                else if (type == 2) {\n                    //  literal                            lengths\n                    var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                    var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                    pos += 14;\n                    // length+distance tree\n                    var ldt = new u8(tl);\n                    // code length tree\n                    var clt = new u8(19);\n                    for (var i = 0; i < hcLen; ++i) {\n                        // use index map to get real code\n                        clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                    }\n                    pos += hcLen * 3;\n                    // code lengths bits\n                    var clb = max(clt), clbmsk = (1 << clb) - 1;\n                    // code lengths map\n                    var clm = hMap(clt, clb, 1);\n                    for (var i = 0; i < tl;) {\n                        var r = clm[bits(dat, pos, clbmsk)];\n                        // bits read\n                        pos += r & 15;\n                        // symbol\n                        var s = r >>> 4;\n                        // code length to copy\n                        if (s < 16) {\n                            ldt[i++] = s;\n                        }\n                        else {\n                            //  copy   count\n                            var c = 0, n = 0;\n                            if (s == 16)\n                                n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                            else if (s == 17)\n                                n = 3 + bits(dat, pos, 7), pos += 3;\n                            else if (s == 18)\n                                n = 11 + bits(dat, pos, 127), pos += 7;\n                            while (n--)\n                                ldt[i++] = c;\n                        }\n                    }\n                    //    length tree                 distance tree\n                    var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                    // max length bits\n                    lbt = max(lt);\n                    // max dist bits\n                    dbt = max(dt);\n                    lm = hMap(lt, lbt, 1);\n                    dm = hMap(dt, dbt, 1);\n                }\n                else\n                    err(1);\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n            }\n            // Make sure the buffer can hold this + the largest possible addition\n            // Maximum chunk size (practically, theoretically infinite) is 2^17;\n            if (noBuf)\n                cbuf(bt + 131072);\n            var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n            var lpos = pos;\n            for (;; lpos = pos) {\n                // bits read, code\n                var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n                pos += c & 15;\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (!c)\n                    err(2);\n                if (sym < 256)\n                    buf[bt++] = sym;\n                else if (sym == 256) {\n                    lpos = pos, lm = null;\n                    break;\n                }\n                else {\n                    var add = sym - 254;\n                    // no extra bits needed if less\n                    if (sym > 264) {\n                        // index\n                        var i = sym - 257, b = fleb[i];\n                        add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                        pos += b;\n                    }\n                    // dist\n                    var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                    if (!d)\n                        err(3);\n                    pos += d & 15;\n                    var dt = fd[dsym];\n                    if (dsym > 3) {\n                        var b = fdeb[dsym];\n                        dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                    }\n                    if (pos > tbts) {\n                        if (noSt)\n                            err(0);\n                        break;\n                    }\n                    if (noBuf)\n                        cbuf(bt + 131072);\n                    var end = bt + add;\n                    for (; bt < end; bt += 4) {\n                        buf[bt] = buf[bt - dt];\n                        buf[bt + 1] = buf[bt + 1 - dt];\n                        buf[bt + 2] = buf[bt + 2 - dt];\n                        buf[bt + 3] = buf[bt + 3 - dt];\n                    }\n                    bt = end;\n                }\n            }\n            st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n            if (lm)\n                final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n        } while (!final);\n        return bt == buf.length ? buf : slc(buf, 0, bt);\n    };\n    // gzip footer: -8 to -4 = CRC, -4 to -0 is length\n    // gzip start\n    var gzs = function (d) {\n        if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n            err(6, 'invalid gzip data');\n        var flg = d[3];\n        var st = 10;\n        if (flg & 4)\n            st += d[10] | (d[11] << 8) + 2;\n        for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n            ;\n        return st + (flg & 2);\n    };\n    // gzip length\n    var gzl = function (d) {\n        var l = d.length;\n        return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n    };\n    // zlib valid\n    var zlv = function (d) {\n        if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n            err(6, 'invalid zlib data');\n        if (d[1] & 32)\n            err(6, 'invalid zlib data: preset dictionaries not supported');\n    };\n    return {\n        /**\n         * Expands GZIP data\n         * @param data The data to decompress\n         * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n         * @returns The decompressed version of the data\n         */\n        gunzipSync: function (data, out) {\n            return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n        },\n        /**\n         * Expands Zlib data\n         * @param data The data to decompress\n         * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n         * @returns The decompressed version of the data\n         */\n        unzlibSync: function (data, out) {\n            return inflt((zlv(data), data.subarray(2, -4)), out);\n        }\n    };\n})();\n","import { hash128 } from './murmur3_128';\n/**\n * Use instead of parseInt, to not lose precision when converting big integers (greater than 2^53 - 1)\n */\nfunction hex2dec(s) {\n    var i, j, digits = [0], carry;\n    for (i = 0; i < s.length; i += 1) {\n        carry = parseInt(s.charAt(i), 16);\n        for (j = digits.length - 1; j >= 0; j -= 1) {\n            digits[j] = digits[j] * 16 + carry;\n            carry = digits[j] / 10 | 0;\n            digits[j] %= 10;\n        }\n        while (carry > 0) {\n            digits.unshift(carry % 10);\n            carry = carry / 10 | 0;\n        }\n    }\n    return digits.join('');\n}\n/**\n * Gets the higher 64 bits of the x64 version of Murmur3 for 128bits, as decimal and hexadecimal number strings.\n * Used for MySegments channel V2 notifications.\n * @param {string} str\n */\nexport function hash64(str) {\n    var hex = hash128(str).slice(0, 16);\n    return {\n        hex: hex,\n        dec: hex2dec(hex) // KeyList notification\n    };\n}\n","/* eslint-disable no-fallthrough */\nimport { UTF16ToUTF8 } from './common';\n/*\n * +----------------------------------------------------------------------------------+\n * | murmurHash3.js v3.0.0 (http://github.com/karanlyons/murmurHash3.js)              |\n * | A TypeScript/JavaScript implementation of MurmurHash3's hashing algorithms.      |\n * |----------------------------------------------------------------------------------|\n * | Copyright (c) 2012-2020 Karan Lyons. Freely distributable under the MIT license. |\n * +----------------------------------------------------------------------------------+\n */\n// PRIVATE FUNCTIONS\n// -----------------\nfunction _x64Add(m, n) {\n    //\n    // Given two 64bit ints (as an array of two 32bit ints) returns the two\n    // added together as a 64bit int (as an array of two 32bit ints).\n    //\n    m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n    n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n    var o = [0, 0, 0, 0];\n    o[3] += m[3] + n[3];\n    o[2] += o[3] >>> 16;\n    o[3] &= 0xffff;\n    o[2] += m[2] + n[2];\n    o[1] += o[2] >>> 16;\n    o[2] &= 0xffff;\n    o[1] += m[1] + n[1];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n    o[0] += m[0] + n[0];\n    o[0] &= 0xffff;\n    return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n}\nfunction _x64Multiply(m, n) {\n    //\n    // Given two 64bit ints (as an array of two 32bit ints) returns the two\n    // multiplied together as a 64bit int (as an array of two 32bit ints).\n    //\n    m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n    n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n    var o = [0, 0, 0, 0];\n    o[3] += m[3] * n[3];\n    o[2] += o[3] >>> 16;\n    o[3] &= 0xffff;\n    o[2] += m[2] * n[3];\n    o[1] += o[2] >>> 16;\n    o[2] &= 0xffff;\n    o[2] += m[3] * n[2];\n    o[1] += o[2] >>> 16;\n    o[2] &= 0xffff;\n    o[1] += m[1] * n[3];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n    o[1] += m[2] * n[2];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n    o[1] += m[3] * n[1];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n    o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n    o[0] &= 0xffff;\n    return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n}\nfunction _x64Rotl(m, n) {\n    //\n    // Given a 64bit int (as an array of two 32bit ints) and an int\n    // representing a number of bit positions, returns the 64bit int (as an\n    // array of two 32bit ints) rotated left by that number of positions.\n    //\n    n %= 64;\n    if (n === 32) {\n        return [m[1], m[0]];\n    }\n    else if (n < 32) {\n        return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n    }\n    else {\n        n -= 32;\n        return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n    }\n}\nfunction _x64LeftShift(m, n) {\n    //\n    // Given a 64bit int (as an array of two 32bit ints) and an int\n    // representing a number of bit positions, returns the 64bit int (as an\n    // array of two 32bit ints) shifted left by that number of positions.\n    //\n    n %= 64;\n    if (n === 0) {\n        return m;\n    }\n    else if (n < 32) {\n        return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n    }\n    else {\n        return [m[1] << (n - 32), 0];\n    }\n}\nfunction _x64Xor(m, n) {\n    //\n    // Given two 64bit ints (as an array of two 32bit ints) returns the two\n    // xored together as a 64bit int (as an array of two 32bit ints).\n    //\n    return [m[0] ^ n[0], m[1] ^ n[1]];\n}\nfunction _x64Fmix(h) {\n    //\n    // Given a block, returns murmurHash3's final x64 mix of that block.\n    // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n    // only place where we need to right shift 64bit ints.)\n    //\n    h = _x64Xor(h, [0, h[0] >>> 1]);\n    h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n    h = _x64Xor(h, [0, h[0] >>> 1]);\n    h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n    h = _x64Xor(h, [0, h[0] >>> 1]);\n    return h;\n}\n// PUBLIC FUNCTIONS\n// ----------------\nfunction hash128x64(key, seed) {\n    //\n    // Given a string and an optional seed as an int, returns a 128 bit\n    // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n    //\n    key = key || '';\n    seed = seed || 0;\n    var remainder = key.length % 16;\n    var bytes = key.length - remainder;\n    var h1 = [0, seed];\n    var h2 = [0, seed];\n    var k1 = [0, 0];\n    var k2 = [0, 0];\n    var c1 = [0x87c37b91, 0x114253d5];\n    var c2 = [0x4cf5ad43, 0x2745937f];\n    for (var i = 0; i < bytes; i = i + 16) {\n        k1 = [((key.charCodeAt(i + 4) & 0xff)) | ((key.charCodeAt(i + 5) & 0xff) << 8) | ((key.charCodeAt(i + 6) & 0xff) << 16) | ((key.charCodeAt(i + 7) & 0xff) << 24), ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) &\n                0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24)];\n        k2 = [((key.charCodeAt(i + 12) & 0xff)) | ((key.charCodeAt(i + 13) & 0xff) << 8) | ((key.charCodeAt(i + 14) & 0xff) << 16) | ((key.charCodeAt(i + 15) & 0xff) << 24), ((key.charCodeAt(i + 8) & 0xff)) | ((key.charCodeAt(i +\n                9) & 0xff) << 8) | ((key.charCodeAt(i + 10) & 0xff) << 16) | ((key.charCodeAt(i + 11) & 0xff) << 24)];\n        k1 = _x64Multiply(k1, c1);\n        k1 = _x64Rotl(k1, 31);\n        k1 = _x64Multiply(k1, c2);\n        h1 = _x64Xor(h1, k1);\n        h1 = _x64Rotl(h1, 27);\n        h1 = _x64Add(h1, h2);\n        h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n        k2 = _x64Multiply(k2, c2);\n        k2 = _x64Rotl(k2, 33);\n        k2 = _x64Multiply(k2, c1);\n        h2 = _x64Xor(h2, k2);\n        h2 = _x64Rotl(h2, 31);\n        h2 = _x64Add(h2, h1);\n        h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n    }\n    k1 = [0, 0];\n    k2 = [0, 0];\n    switch (remainder) {\n        case 15:\n            k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 14)], 48));\n        case 14:\n            k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 13)], 40));\n        case 13:\n            k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 12)], 32));\n        case 12:\n            k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 11)], 24));\n        case 11:\n            k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 10)], 16));\n        case 10:\n            k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 9)], 8));\n        case 9:\n            k2 = _x64Xor(k2, [0, key.charCodeAt(i + 8)]);\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n        case 8:\n            k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 7)], 56));\n        case 7:\n            k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 6)], 48));\n        case 6:\n            k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 5)], 40));\n        case 5:\n            k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 4)], 32));\n        case 4:\n            k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 3)], 24));\n        case 3:\n            k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 2)], 16));\n        case 2:\n            k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 1)], 8));\n        case 1:\n            k1 = _x64Xor(k1, [0, key.charCodeAt(i)]);\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n    }\n    h1 = _x64Xor(h1, [0, key.length]);\n    h2 = _x64Xor(h2, [0, key.length]);\n    h1 = _x64Add(h1, h2);\n    h2 = _x64Add(h2, h1);\n    h1 = _x64Fmix(h1);\n    h2 = _x64Fmix(h2);\n    h1 = _x64Add(h1, h2);\n    h2 = _x64Add(h2, h1);\n    return ('00000000' + (h1[0] >>> 0).toString(16)).slice(-8) + ('00000000' + (h1[1] >>> 0).toString(16)).slice(-8) + ('00000000' + (h2[0] >>> 0).toString(16)).slice(-8) + ('00000000' + (h2[1] >>> 0).toString(16)).slice(-8);\n}\n/**\n * x64 version of Murmur3 for 128bits.\n *\n * @param {string} str\n */\nexport function hash128(str, seed) {\n    return hash128x64(UTF16ToUTF8(str), seed >>> 0);\n}\n","import { forOwn } from '../../utils/lang';\nimport { mySegmentsSyncTaskFactory } from './syncTasks/mySegmentsSyncTask';\nimport { splitsSyncTaskFactory } from './syncTasks/splitsSyncTask';\nimport { getMatching } from '../../utils/key';\nimport { SDK_SPLITS_ARRIVED, SDK_SEGMENTS_ARRIVED } from '../../readiness/constants';\nimport { POLLING_SMART_PAUSING, POLLING_START, POLLING_STOP } from '../../logger/constants';\n/**\n * Expose start / stop mechanism for polling data from services.\n * For client-side API with multiple clients.\n */\nexport function pollingManagerCSFactory(params) {\n    var splitApi = params.splitApi, storage = params.storage, readiness = params.readiness, settings = params.settings;\n    var log = settings.log;\n    var splitsSyncTask = splitsSyncTaskFactory(splitApi.fetchSplitChanges, storage, readiness, settings, true);\n    // Map of matching keys to their corresponding MySegmentsSyncTask.\n    var mySegmentsSyncTasks = {};\n    var matchingKey = getMatching(settings.core.key);\n    var mySegmentsSyncTask = add(matchingKey, readiness, storage);\n    function startMySegmentsSyncTasks() {\n        forOwn(mySegmentsSyncTasks, function (mySegmentsSyncTask) {\n            mySegmentsSyncTask.start();\n        });\n    }\n    function stopMySegmentsSyncTasks() {\n        forOwn(mySegmentsSyncTasks, function (mySegmentsSyncTask) {\n            if (mySegmentsSyncTask.isRunning())\n                mySegmentsSyncTask.stop();\n        });\n    }\n    // smart pausing\n    readiness.splits.on(SDK_SPLITS_ARRIVED, function () {\n        if (!splitsSyncTask.isRunning())\n            return; // noop if not doing polling\n        var splitsHaveSegments = storage.splits.usesSegments();\n        if (splitsHaveSegments !== mySegmentsSyncTask.isRunning()) {\n            log.info(POLLING_SMART_PAUSING, [splitsHaveSegments ? 'ON' : 'OFF']);\n            if (splitsHaveSegments) {\n                startMySegmentsSyncTasks();\n            }\n            else {\n                stopMySegmentsSyncTasks();\n            }\n        }\n    });\n    function add(matchingKey, readiness, storage) {\n        var mySegmentsSyncTask = mySegmentsSyncTaskFactory(splitApi.fetchMySegments, storage, readiness, settings, matchingKey);\n        // smart ready\n        function smartReady() {\n            if (!readiness.isReady() && !storage.splits.usesSegments())\n                readiness.segments.emit(SDK_SEGMENTS_ARRIVED);\n        }\n        if (!storage.splits.usesSegments())\n            setTimeout(smartReady, 0);\n        else\n            readiness.splits.once(SDK_SPLITS_ARRIVED, smartReady);\n        mySegmentsSyncTasks[matchingKey] = mySegmentsSyncTask;\n        return mySegmentsSyncTask;\n    }\n    return {\n        splitsSyncTask: splitsSyncTask,\n        segmentsSyncTask: mySegmentsSyncTask,\n        // Start periodic fetching (polling)\n        start: function () {\n            log.info(POLLING_START);\n            splitsSyncTask.start();\n            if (storage.splits.usesSegments())\n                startMySegmentsSyncTasks();\n        },\n        // Stop periodic fetching (polling)\n        stop: function () {\n            log.info(POLLING_STOP);\n            if (splitsSyncTask.isRunning())\n                splitsSyncTask.stop();\n            stopMySegmentsSyncTasks();\n        },\n        // Used by SyncManager to know if running in polling mode.\n        isRunning: splitsSyncTask.isRunning,\n        // fetch splits and segments\n        syncAll: function () {\n            var promises = [splitsSyncTask.execute()];\n            forOwn(mySegmentsSyncTasks, function (mySegmentsSyncTask) {\n                promises.push(mySegmentsSyncTask.execute());\n            });\n            return Promise.all(promises);\n        },\n        // Support for handling mySegments sync of multiple clients\n        add: add,\n        remove: function (matchingKey) {\n            delete mySegmentsSyncTasks[matchingKey];\n        },\n        get: function (matchingKey) {\n            return mySegmentsSyncTasks[matchingKey];\n        }\n    };\n}\n","import { syncTaskFactory } from '../../syncTask';\nimport { mySegmentsFetcherFactory } from '../fetchers/mySegmentsFetcher';\nimport { mySegmentsUpdaterFactory } from '../updaters/mySegmentsUpdater';\n/**\n * Creates a sync task that periodically executes a `mySegmentsUpdater` task\n */\nexport function mySegmentsSyncTaskFactory(fetchMySegments, storage, readiness, settings, matchingKey) {\n    return syncTaskFactory(settings.log, mySegmentsUpdaterFactory(settings.log, mySegmentsFetcherFactory(fetchMySegments), storage.splits, storage.segments, readiness.segments, settings.startup.requestTimeoutBeforeReady, settings.startup.retriesOnFailureBeforeReady, matchingKey), settings.scheduler.segmentsRefreshRate, 'mySegmentsUpdater');\n}\n","/**\n * Factory of MySegments fetcher.\n * MySegments fetcher is a wrapper around `mySegments` API service that parses the response and handle errors.\n */\nexport function mySegmentsFetcherFactory(fetchMySegments) {\n    return function mySegmentsFetcher(userMatchingKey, noCache, \n    // Optional decorator for `fetchMySegments` promise, such as timeout or time tracker\n    decorator) {\n        var mySegmentsPromise = fetchMySegments(userMatchingKey, noCache);\n        if (decorator)\n            mySegmentsPromise = decorator(mySegmentsPromise);\n        // Extract segment names\n        return mySegmentsPromise\n            .then(function (resp) { return resp.json(); })\n            .then(function (json) { return json.mySegments.map(function (segment) { return segment.name; }); });\n    };\n}\n","import { timeout } from '../../../utils/promise/timeout';\nimport { SDK_SEGMENTS_ARRIVED } from '../../../readiness/constants';\nimport { SYNC_MYSEGMENTS_FETCH_RETRY } from '../../../logger/constants';\n/**\n * factory of MySegments updater, a task that:\n *  - fetches mySegments using `mySegmentsFetcher`\n *  - updates `mySegmentsCache`\n *  - uses `segmentsEventEmitter` to emit events related to segments data updates\n */\nexport function mySegmentsUpdaterFactory(log, mySegmentsFetcher, splitsCache, mySegmentsCache, segmentsEventEmitter, requestTimeoutBeforeReady, retriesOnFailureBeforeReady, matchingKey) {\n    var readyOnAlreadyExistentState = true;\n    var startingUp = true;\n    /** timeout and telemetry decorator for `splitChangesFetcher` promise  */\n    function _promiseDecorator(promise) {\n        if (startingUp)\n            promise = timeout(requestTimeoutBeforeReady, promise);\n        return promise;\n    }\n    // @TODO if allowing pluggable storages, handle async execution\n    function updateSegments(segmentsData) {\n        var shouldNotifyUpdate;\n        if (Array.isArray(segmentsData)) {\n            // Update the list of segment names available\n            shouldNotifyUpdate = mySegmentsCache.resetSegments(segmentsData);\n        }\n        else {\n            // Add/Delete the segment\n            var name_1 = segmentsData.name, add = segmentsData.add;\n            if (mySegmentsCache.isInSegment(name_1) !== add) {\n                shouldNotifyUpdate = true;\n                if (add)\n                    mySegmentsCache.addToSegment(name_1);\n                else\n                    mySegmentsCache.removeFromSegment(name_1);\n            }\n            else {\n                shouldNotifyUpdate = false;\n            }\n        }\n        // Notify update if required\n        if (splitsCache.usesSegments() && (shouldNotifyUpdate || readyOnAlreadyExistentState)) {\n            readyOnAlreadyExistentState = false;\n            segmentsEventEmitter.emit(SDK_SEGMENTS_ARRIVED);\n        }\n    }\n    function _mySegmentsUpdater(retry, segmentsData, noCache) {\n        var updaterPromise = segmentsData ?\n            // If segmentsData is provided, there is no need to fetch mySegments\n            new Promise(function (res) { updateSegments(segmentsData); res(true); }) :\n            // If not provided, fetch mySegments\n            mySegmentsFetcher(matchingKey, noCache, _promiseDecorator).then(function (segments) {\n                // Only when we have downloaded segments completely, we should not keep retrying anymore\n                startingUp = false;\n                updateSegments(segments);\n                return true;\n            });\n        return updaterPromise.catch(function (error) {\n            if (startingUp && retriesOnFailureBeforeReady > retry) {\n                retry += 1;\n                log.warn(SYNC_MYSEGMENTS_FETCH_RETRY, [retry, error]);\n                return _mySegmentsUpdater(retry); // no need to forward `segmentList` and `noCache` params\n            }\n            else {\n                startingUp = false;\n            }\n            return false;\n        });\n    }\n    /**\n     * MySegments updater returns a promise that resolves with a `false` boolean value if it fails to fetch mySegments or synchronize them with the storage.\n     * Returned promise will not be rejected.\n     *\n     * @param {SegmentsData | undefined} segmentsData it can be:\n     *  (1) the list of mySegments names to sync in the storage,\n     *  (2) an object with a segment name and action (true: add, or false: delete) to update the storage,\n     *  (3) or `undefined`, for which the updater will fetch mySegments in order to sync the storage.\n     * @param {boolean | undefined} noCache true to revalidate data to fetch\n     */\n    return function mySegmentsUpdater(segmentsData, noCache) {\n        return _mySegmentsUpdater(0, segmentsData, noCache);\n    };\n}\n","export function timeout(ms, promise) {\n    if (ms < 1)\n        return promise;\n    return new Promise(function (resolve, reject) {\n        var tid = setTimeout(function () {\n            reject(new Error(\"Operation timed out because it exceeded the configured time limit of \" + ms + \" ms.\"));\n        }, ms);\n        promise.then(function (res) {\n            clearTimeout(tid);\n            resolve(res);\n        }, function (err) {\n            clearTimeout(tid);\n            reject(err);\n        });\n    });\n}\n","import { syncTaskFactory } from '../../syncTask';\nimport { splitChangesFetcherFactory } from '../fetchers/splitChangesFetcher';\nimport { splitChangesUpdaterFactory } from '../updaters/splitChangesUpdater';\n/**\n * Creates a sync task that periodically executes a `splitChangesUpdater` task\n */\nexport function splitsSyncTaskFactory(fetchSplitChanges, storage, readiness, settings, isClientSide) {\n    return syncTaskFactory(settings.log, splitChangesUpdaterFactory(settings.log, splitChangesFetcherFactory(fetchSplitChanges), storage.splits, storage.segments, settings.sync.__splitFiltersValidation, readiness.splits, settings.startup.requestTimeoutBeforeReady, settings.startup.retriesOnFailureBeforeReady, isClientSide), settings.scheduler.featuresRefreshRate, 'splitChangesUpdater');\n}\n","/**\n * Factory of SplitChanges fetcher.\n * SplitChanges fetcher is a wrapper around `splitChanges` API service that parses the response and handle errors.\n */\nexport function splitChangesFetcherFactory(fetchSplitChanges) {\n    return function splitChangesFetcher(since, noCache, till, \n    // Optional decorator for `fetchSplitChanges` promise, such as timeout or time tracker\n    decorator) {\n        var splitsPromise = fetchSplitChanges(since, noCache, till);\n        if (decorator)\n            splitsPromise = decorator(splitsPromise);\n        return splitsPromise.then(function (resp) { return resp.json(); });\n    };\n}\n","import { _Set, setToArray } from '../../../utils/lang/sets';\nimport { timeout } from '../../../utils/promise/timeout';\nimport { SDK_SPLITS_ARRIVED, SDK_SPLITS_CACHE_LOADED } from '../../../readiness/constants';\nimport { SYNC_SPLITS_FETCH, SYNC_SPLITS_NEW, SYNC_SPLITS_REMOVED, SYNC_SPLITS_SEGMENTS, SYNC_SPLITS_FETCH_FAILS, SYNC_SPLITS_FETCH_RETRY } from '../../../logger/constants';\nimport { startsWith } from '../../../utils/lang';\n// Checks that all registered segments have been fetched (changeNumber !== -1 for every segment).\n// Returns a promise that could be rejected.\n// @TODO review together with Segments and MySegments storage APIs\nfunction checkAllSegmentsExist(segments) {\n    var registeredSegments = Promise.resolve(segments.getRegisteredSegments());\n    return registeredSegments.then(function (segmentNames) {\n        return Promise.all(segmentNames.map(function (segmentName) { return segments.getChangeNumber(segmentName); }))\n            .then(function (changeNumbers) { return changeNumbers.every(function (changeNumber) { return changeNumber !== -1; }); });\n    });\n}\n/**\n * Collect segments from a raw split definition.\n * Exported for testing purposes.\n */\nexport function parseSegments(_a) {\n    var conditions = _a.conditions;\n    var segments = new _Set();\n    for (var i = 0; i < conditions.length; i++) {\n        var matchers = conditions[i].matcherGroup.matchers;\n        matchers.forEach(function (matcher) {\n            if (matcher.matcherType === 'IN_SEGMENT')\n                segments.add(matcher.userDefinedSegmentMatcherData.segmentName);\n        });\n    }\n    return segments;\n}\n/**\n * If there are defined filters and one feature flag doesn't match with them, its status is changed to 'ARCHIVE' to avoid storing it\n * If there are set filter defined, names filter is ignored\n *\n * @param featureFlag feature flag to be evaluated\n * @param filters splitFiltersValidation bySet | byName\n */\nfunction matchFilters(featureFlag, filters) {\n    var _a = filters.groupedFilters, setsFilter = _a.bySet, namesFilter = _a.byName, prefixFilter = _a.byPrefix;\n    if (setsFilter.length > 0)\n        return featureFlag.sets && featureFlag.sets.some(function (featureFlagSet) { return setsFilter.indexOf(featureFlagSet) > -1; });\n    var namesFilterConfigured = namesFilter.length > 0;\n    var prefixFilterConfigured = prefixFilter.length > 0;\n    if (!namesFilterConfigured && !prefixFilterConfigured)\n        return true;\n    var matchNames = namesFilterConfigured && namesFilter.indexOf(featureFlag.name) > -1;\n    var matchPrefix = prefixFilterConfigured && prefixFilter.some(function (prefix) { return startsWith(featureFlag.name, prefix); });\n    return matchNames || matchPrefix;\n}\n/**\n * Given the list of splits from /splitChanges endpoint, it returns the mutations,\n * i.e., an object with added splits, removed splits and used segments.\n * Exported for testing purposes.\n */\nexport function computeSplitsMutation(entries, filters) {\n    var segments = new _Set();\n    var computed = entries.reduce(function (accum, split) {\n        if (split.status === 'ACTIVE' && matchFilters(split, filters)) {\n            accum.added.push([split.name, split]);\n            parseSegments(split).forEach(function (segmentName) {\n                segments.add(segmentName);\n            });\n        }\n        else {\n            accum.removed.push(split.name);\n        }\n        return accum;\n    }, { added: [], removed: [], segments: [] });\n    computed.segments = setToArray(segments);\n    return computed;\n}\n/**\n * factory of SplitChanges updater, a task that:\n *  - fetches split changes using `splitChangesFetcher`\n *  - updates `splitsCache`\n *  - uses `splitsEventEmitter` to emit events related to split data updates\n *\n * @param log  Logger instance\n * @param splitChangesFetcher  Fetcher of `/splitChanges`\n * @param splits  Splits storage, with sync or async methods\n * @param segments  Segments storage, with sync or async methods\n * @param splitsEventEmitter  Optional readiness manager. Not required for synchronizer or producer mode.\n * @param requestTimeoutBeforeReady  How long the updater will wait for the request to timeout. Default 0, i.e., never timeout.\n * @param retriesOnFailureBeforeReady  How many retries on `/splitChanges` we the updater do in case of failure or timeout. Default 0, i.e., no retries.\n */\nexport function splitChangesUpdaterFactory(log, splitChangesFetcher, splits, segments, splitFiltersValidation, splitsEventEmitter, requestTimeoutBeforeReady, retriesOnFailureBeforeReady, isClientSide) {\n    if (requestTimeoutBeforeReady === void 0) { requestTimeoutBeforeReady = 0; }\n    if (retriesOnFailureBeforeReady === void 0) { retriesOnFailureBeforeReady = 0; }\n    var startingUp = true;\n    /** timeout decorator for `splitChangesFetcher` promise  */\n    function _promiseDecorator(promise) {\n        if (startingUp && requestTimeoutBeforeReady)\n            promise = timeout(requestTimeoutBeforeReady, promise);\n        return promise;\n    }\n    /** Returns true if at least one split was updated */\n    function isThereUpdate(flagsChange) {\n        var added = flagsChange[1], removed = flagsChange[2];\n        // There is at least one added or modified feature flag\n        if (added && added.some(function (update) { return update; }))\n            return true;\n        // There is at least one removed feature flag\n        if (removed && removed.some(function (update) { return update; }))\n            return true;\n        return false;\n    }\n    /**\n     * SplitChanges updater returns a promise that resolves with a `false` boolean value if it fails to fetch splits or synchronize them with the storage.\n     * Returned promise will not be rejected.\n     *\n     * @param {boolean | undefined} noCache true to revalidate data to fetch\n     * @param {boolean | undefined} till query param to bypass CDN requests\n     */\n    return function splitChangesUpdater(noCache, till, splitUpdateNotification) {\n        /**\n         * @param {number} since current changeNumber at splitsCache\n         * @param {number} retry current number of retry attempts\n         */\n        function _splitChangesUpdater(since, retry) {\n            if (retry === void 0) { retry = 0; }\n            log.debug(SYNC_SPLITS_FETCH, [since]);\n            var fetcherPromise = Promise.resolve(splitUpdateNotification ?\n                { splits: [splitUpdateNotification.payload], till: splitUpdateNotification.changeNumber } :\n                splitChangesFetcher(since, noCache, till, _promiseDecorator))\n                .then(function (splitChanges) {\n                startingUp = false;\n                var mutation = computeSplitsMutation(splitChanges.splits, splitFiltersValidation);\n                log.debug(SYNC_SPLITS_NEW, [mutation.added.length]);\n                log.debug(SYNC_SPLITS_REMOVED, [mutation.removed.length]);\n                log.debug(SYNC_SPLITS_SEGMENTS, [mutation.segments.length]);\n                // Write into storage\n                // @TODO call `setChangeNumber` only if the other storage operations have succeeded, in order to keep storage consistency\n                return Promise.all([\n                    // calling first `setChangenumber` method, to perform cache flush if split filter queryString changed\n                    splits.setChangeNumber(splitChanges.till),\n                    splits.addSplits(mutation.added),\n                    splits.removeSplits(mutation.removed),\n                    segments.registerSegments(mutation.segments)\n                ]).then(function (flagsChange) {\n                    if (splitsEventEmitter) {\n                        // To emit SDK_SPLITS_ARRIVED for server-side SDK, we must check that all registered segments have been fetched\n                        return Promise.resolve(!splitsEventEmitter.splitsArrived || (since !== splitChanges.till && isThereUpdate(flagsChange) && (isClientSide || checkAllSegmentsExist(segments))))\n                            .catch(function () { return false; } /** noop. just to handle a possible `checkAllSegmentsExist` rejection, before emitting SDK event */)\n                            .then(function (emitSplitsArrivedEvent) {\n                            // emit SDK events\n                            if (emitSplitsArrivedEvent)\n                                splitsEventEmitter.emit(SDK_SPLITS_ARRIVED);\n                            return true;\n                        });\n                    }\n                    return true;\n                });\n            })\n                .catch(function (error) {\n                log.warn(SYNC_SPLITS_FETCH_FAILS, [error]);\n                if (startingUp && retriesOnFailureBeforeReady > retry) {\n                    retry += 1;\n                    log.info(SYNC_SPLITS_FETCH_RETRY, [retry, error]);\n                    return _splitChangesUpdater(since, retry);\n                }\n                else {\n                    startingUp = false;\n                }\n                return false;\n            });\n            // After triggering the requests, if we have cached splits information let's notify that to emit SDK_READY_FROM_CACHE.\n            // Wrapping in a promise since checkCache can be async.\n            if (splitsEventEmitter && startingUp) {\n                Promise.resolve(splits.checkCache()).then(function (isCacheReady) {\n                    if (isCacheReady)\n                        splitsEventEmitter.emit(SDK_SPLITS_CACHE_LOADED);\n                });\n            }\n            return fetcherPromise;\n        }\n        var sincePromise = Promise.resolve(splits.getChangeNumber()); // `getChangeNumber` never rejects or throws error\n        return sincePromise.then(_splitChangesUpdater);\n    };\n}\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { thenable } from '../utils/promise/thenable';\nimport { find } from '../utils/lang';\nimport { validateSplit, validateSplitExistence, validateIfNotDestroyed, validateIfOperational } from '../utils/inputValidation';\nimport { isConsumerMode } from '../utils/settingsValidation/mode';\nimport { SPLIT_FN_LABEL, SPLITS_FN_LABEL, NAMES_FN_LABEL } from '../utils/constants';\nfunction collectTreatments(splitObject) {\n    var conditions = splitObject.conditions;\n    // Rollout conditions are supposed to have the entire partitions list, so we find the first one.\n    var allTreatmentsCondition = find(conditions, function (cond) { return cond.conditionType === 'ROLLOUT'; });\n    // Localstorage mode could fall into a no rollout conditions state. Take the first condition in that case.\n    if (!allTreatmentsCondition)\n        allTreatmentsCondition = conditions[0];\n    // Then extract the treatments from the partitions\n    return allTreatmentsCondition ? allTreatmentsCondition.partitions.map(function (v) { return v.treatment; }) : [];\n}\nfunction objectToView(splitObject) {\n    if (!splitObject)\n        return null;\n    return {\n        name: splitObject.name,\n        trafficType: splitObject.trafficTypeName,\n        killed: splitObject.killed,\n        changeNumber: splitObject.changeNumber || 0,\n        treatments: collectTreatments(splitObject),\n        configs: splitObject.configurations || {},\n        sets: splitObject.sets || [],\n        defaultTreatment: splitObject.defaultTreatment\n    };\n}\nfunction objectsToViews(splitObjects) {\n    var views = [];\n    splitObjects.forEach(function (split) {\n        var view = objectToView(split);\n        if (view)\n            views.push(view);\n    });\n    return views;\n}\nexport function sdkManagerFactory(settings, splits, _a) {\n    var readinessManager = _a.readinessManager, sdkStatus = _a.sdkStatus;\n    var log = settings.log, mode = settings.mode;\n    var isAsync = isConsumerMode(mode);\n    return objectAssign(\n    // Proto-linkage of the readiness Event Emitter\n    Object.create(sdkStatus), {\n        /**\n         * Get the feature flag object corresponding to the given feature flag name if valid\n         */\n        split: function (featureFlagName) {\n            var splitName = validateSplit(log, featureFlagName, SPLIT_FN_LABEL);\n            if (!validateIfNotDestroyed(log, readinessManager, SPLIT_FN_LABEL) || !validateIfOperational(log, readinessManager, SPLIT_FN_LABEL) || !splitName) {\n                return isAsync ? Promise.resolve(null) : null;\n            }\n            var split = splits.getSplit(splitName);\n            if (thenable(split)) {\n                return split.catch(function () { return null; }).then(function (result) {\n                    validateSplitExistence(log, readinessManager, splitName, result, SPLIT_FN_LABEL);\n                    return objectToView(result);\n                });\n            }\n            validateSplitExistence(log, readinessManager, splitName, split, SPLIT_FN_LABEL);\n            return objectToView(split);\n        },\n        /**\n         * Get the feature flag objects present on the factory storage\n         */\n        splits: function () {\n            if (!validateIfNotDestroyed(log, readinessManager, SPLITS_FN_LABEL) || !validateIfOperational(log, readinessManager, SPLITS_FN_LABEL)) {\n                return isAsync ? Promise.resolve([]) : [];\n            }\n            var currentSplits = splits.getAll();\n            return thenable(currentSplits) ?\n                currentSplits.catch(function () { return []; }).then(objectsToViews) : // handle possible rejections when using pluggable storage\n                objectsToViews(currentSplits);\n        },\n        /**\n         * Get the feature flag names present on the factory storage\n         */\n        names: function () {\n            if (!validateIfNotDestroyed(log, readinessManager, NAMES_FN_LABEL) || !validateIfOperational(log, readinessManager, NAMES_FN_LABEL)) {\n                return isAsync ? Promise.resolve([]) : [];\n            }\n            var splitNames = splits.getSplitNames();\n            return thenable(splitNames) ?\n                splitNames.catch(function () { return []; }) : // handle possible rejections when using pluggable storage\n                splitNames;\n        }\n    });\n}\n","// returns true if the given value is a thenable object\nexport function thenable(o) {\n    return o !== undefined && o !== null && typeof o.then === 'function';\n}\n","export { validateApiKey, validateAndTrackApiKey, releaseApiKey } from './apiKey';\nexport { validateAttributes } from './attributes';\nexport { validateEvent } from './event';\nexport { validateEventValue } from './eventValue';\nexport { validateEventProperties } from './eventProperties';\nexport { validateKey } from './key';\nexport { validateSplit } from './split';\nexport { validateSplits } from './splits';\nexport { validateTrafficType } from './trafficType';\nexport { validateIfNotDestroyed, validateIfOperational } from './isOperational';\nexport { validateSplitExistence } from './splitExistence';\nexport { validateTrafficTypeExistence } from './trafficTypeExistence';\nexport { validatePreloadedData } from './preloadedData';\n","import { isObject } from '../lang';\nimport { validateAttribute } from './attribute';\nimport { ERROR_NOT_PLAIN_OBJECT } from '../../logger/constants';\nexport function validateAttributes(log, maybeAttrs, method) {\n    // Attributes are optional\n    if (maybeAttrs == undefined || isObject(maybeAttrs)) // eslint-disable-line eqeqeq\n        return maybeAttrs;\n    log.error(ERROR_NOT_PLAIN_OBJECT, [method, 'attributes']);\n    return false;\n}\nexport function validateAttributesDeep(log, maybeAttributes, method) {\n    if (!validateAttributes(log, maybeAttributes, method))\n        return false;\n    var result = true;\n    Object.keys(maybeAttributes).forEach(function (attributeKey) {\n        if (!validateAttribute(log, attributeKey, maybeAttributes[attributeKey], method))\n            result = false;\n    });\n    return result;\n}\n","import { isString, isFiniteNumber, isBoolean } from '../../utils/lang';\nexport function validateAttribute(log, attributeKey, attributeValue, method) {\n    if (!isString(attributeKey) || attributeKey.length === 0) {\n        log.warn(method + \": you passed an invalid attribute name, attribute name must be a non-empty string.\");\n        return false;\n    }\n    var isStringVal = isString(attributeValue);\n    var isFiniteVal = isFiniteNumber(attributeValue);\n    var isBoolVal = isBoolean(attributeValue);\n    var isArrayVal = Array.isArray(attributeValue);\n    if (!(isStringVal || isFiniteVal || isBoolVal || isArrayVal)) { // If it's not of valid type.\n        log.warn(method + \": you passed an invalid attribute value for \" + attributeKey + \". Acceptable types are: string, number, boolean and array of strings.\");\n        return false;\n    }\n    return true;\n}\n","import { ERROR_EVENT_TYPE_FORMAT, ERROR_NULL, ERROR_INVALID, ERROR_EMPTY } from '../../logger/constants';\nimport { isString } from '../lang';\nvar EVENT_TYPE_REGEX = /^[a-zA-Z0-9][-_.:a-zA-Z0-9]{0,79}$/;\nvar item = 'event_type';\nexport function validateEvent(log, maybeEvent, method) {\n    if (maybeEvent == undefined) { // eslint-disable-line eqeqeq\n        log.error(ERROR_NULL, [method, item]);\n    }\n    else if (!isString(maybeEvent)) {\n        log.error(ERROR_INVALID, [method, item]);\n    }\n    else { // It is a string.\n        if (maybeEvent.length === 0) {\n            log.error(ERROR_EMPTY, [method, item]);\n        }\n        else if (!EVENT_TYPE_REGEX.test(maybeEvent)) {\n            log.error(ERROR_EVENT_TYPE_FORMAT, [method, maybeEvent]);\n        }\n        else {\n            return maybeEvent;\n        }\n    }\n    return false;\n}\n","import { ERROR_NOT_FINITE } from '../../logger/constants';\nimport { isFiniteNumber } from '../lang';\nexport function validateEventValue(log, maybeValue, method) {\n    if (isFiniteNumber(maybeValue) || maybeValue == undefined) // eslint-disable-line eqeqeq\n        return maybeValue;\n    log.error(ERROR_NOT_FINITE, [method]);\n    return false;\n}\n","import { isObject, isString, isFiniteNumber, isBoolean } from '../lang';\nimport { objectAssign } from '../lang/objectAssign';\nimport { ERROR_NOT_PLAIN_OBJECT, ERROR_SIZE_EXCEEDED, WARN_SETTING_NULL, WARN_TRIMMING_PROPERTIES } from '../../logger/constants';\nvar ECMA_SIZES = {\n    NULL: 0,\n    STRING: 2,\n    BOOLEAN: 4,\n    NUMBER: 8\n};\nvar MAX_PROPERTIES_AMOUNT = 300;\nvar MAX_EVENT_SIZE = 1024 * 32;\nvar BASE_EVENT_SIZE = 1024; // We assume 1kb events without properties (avg measured)\nexport function validateEventProperties(log, maybeProperties, method) {\n    if (maybeProperties == undefined)\n        return { properties: null, size: BASE_EVENT_SIZE }; // eslint-disable-line eqeqeq\n    if (!isObject(maybeProperties)) {\n        log.error(ERROR_NOT_PLAIN_OBJECT, [method, 'properties']);\n        return { properties: false, size: BASE_EVENT_SIZE };\n    }\n    var keys = Object.keys(maybeProperties);\n    // Shallow clone\n    var clone = objectAssign({}, maybeProperties);\n    // To avoid calculating the size twice we'll return it from here.\n    var output = {\n        properties: clone,\n        size: BASE_EVENT_SIZE // We assume 1kb events without properties (avg measured)\n    };\n    if (keys.length > MAX_PROPERTIES_AMOUNT) {\n        log.warn(WARN_TRIMMING_PROPERTIES, [method]);\n    }\n    for (var i = 0; i < keys.length; i++) {\n        output.size += keys[i].length * ECMA_SIZES.STRING; // Count the size of the key which is always a string.\n        var val = clone[keys[i]];\n        var isStringVal = isString(val);\n        var isFiniteVal = isFiniteNumber(val);\n        var isBoolVal = isBoolean(val);\n        var isNullVal = val === null;\n        if (!(isStringVal || isFiniteVal || isBoolVal || isNullVal)) { // If it's not of valid type.\n            clone[keys[i]] = null;\n            val = null;\n            isNullVal = true;\n            log.warn(WARN_SETTING_NULL, [method, keys[i]]);\n        }\n        if (isNullVal)\n            output.size += ECMA_SIZES.NULL;\n        else if (isFiniteVal)\n            output.size += ECMA_SIZES.NUMBER;\n        else if (isBoolVal)\n            output.size += ECMA_SIZES.BOOLEAN;\n        else if (isStringVal)\n            output.size += val.length * ECMA_SIZES.STRING;\n        if (output.size > MAX_EVENT_SIZE) {\n            log.error(ERROR_SIZE_EXCEEDED, [method]);\n            output.properties = false;\n            break;\n        }\n    }\n    return output;\n}\n","import { ERROR_CLIENT_DESTROYED, CLIENT_NOT_READY } from '../../logger/constants';\nexport function validateIfNotDestroyed(log, readinessManager, method) {\n    if (!readinessManager.isDestroyed())\n        return true;\n    log.error(ERROR_CLIENT_DESTROYED, [method]);\n    return false;\n}\nexport function validateIfOperational(log, readinessManager, method, featureFlagNameOrNames) {\n    if (readinessManager.isReady() || readinessManager.isReadyFromCache())\n        return true;\n    log.warn(CLIENT_NOT_READY, [method, featureFlagNameOrNames ? \" for feature flag \" + featureFlagNameOrNames.toString() : '']);\n    return false;\n}\n","import { SPLIT_NOT_FOUND } from '../labels';\nimport { WARN_NOT_EXISTENT_SPLIT } from '../../logger/constants';\n/**\n * This is defined here and in this format mostly because of the logger and the fact that it's considered a validation at product level.\n * But it's not going to run on the input validation layer. In any case, the most compeling reason to use it as we do is to avoid going to Redis and get a split twice.\n */\nexport function validateSplitExistence(log, readinessManager, splitName, labelOrSplitObj, method) {\n    if (readinessManager.isReady()) { // Only if it's ready we validate this, otherwise it may just be that the SDK is not ready yet.\n        if (labelOrSplitObj === SPLIT_NOT_FOUND || labelOrSplitObj == null) {\n            log.warn(WARN_NOT_EXISTENT_SPLIT, [method, splitName]);\n            return false;\n        }\n    }\n    return true;\n}\n","export var SPLIT_KILLED = 'killed';\nexport var NO_CONDITION_MATCH = 'default rule';\nexport var SPLIT_NOT_FOUND = 'definition not found';\nexport var SDK_NOT_READY = 'not ready';\nexport var EXCEPTION = 'exception';\nexport var SPLIT_ARCHIVED = 'archived';\nexport var NOT_IN_SPLIT = 'not in split';\n","import { thenable } from '../promise/thenable';\nimport { LOCALHOST_MODE } from '../constants';\nimport { WARN_NOT_EXISTENT_TT } from '../../logger/constants';\nfunction logTTExistenceWarning(log, maybeTT, method) {\n    log.warn(WARN_NOT_EXISTENT_TT, [method, maybeTT]);\n}\n/**\n * Separated from the previous method since on some cases it'll be async.\n */\nexport function validateTrafficTypeExistence(log, readinessManager, splitsCache, mode, maybeTT, method) {\n    // If not ready or in localhost mode, we won't run the validation\n    if (!readinessManager.isReady() || mode === LOCALHOST_MODE)\n        return true;\n    var res = splitsCache.trafficTypeExists(maybeTT); // never rejects or throws error\n    if (thenable(res)) {\n        return res.then(function (isValid) {\n            if (!isValid)\n                logTTExistenceWarning(log, maybeTT, method);\n            return isValid; // propagate result\n        });\n    }\n    else {\n        if (!res)\n            logTTExistenceWarning(log, maybeTT, method);\n        return res;\n    }\n}\n","import { clientCSDecorator } from './clientCS';\nimport { validateKey } from '../utils/inputValidation/key';\nimport { getMatching, keyParser } from '../utils/key';\nimport { sdkClientFactory } from './sdkClient';\nimport { objectAssign } from '../utils/lang/objectAssign';\nimport { RETRIEVE_CLIENT_DEFAULT, NEW_SHARED_CLIENT, RETRIEVE_CLIENT_EXISTING } from '../logger/constants';\nimport { SDK_SEGMENTS_ARRIVED } from '../readiness/constants';\nfunction buildInstanceId(key) {\n    // @ts-ignore\n    return (key.matchingKey ? key.matchingKey : key) + \"-\" + (key.bucketingKey ? key.bucketingKey : key) + \"-\";\n}\nvar method = 'Client instantiation';\n/**\n * Factory of client method for the client-side API variant where TT is ignored.\n * Therefore, clients don't have a bound TT for the track method.\n */\nexport function sdkClientMethodCSFactory(params) {\n    var storage = params.storage, syncManager = params.syncManager, sdkReadinessManager = params.sdkReadinessManager, _a = params.settings, key = _a.core.key, readyTimeout = _a.startup.readyTimeout, log = _a.log;\n    var mainClientInstance = clientCSDecorator(log, sdkClientFactory(params), key);\n    var parsedDefaultKey = keyParser(key);\n    var defaultInstanceId = buildInstanceId(parsedDefaultKey);\n    // Cache instances created per factory.\n    var clientInstances = {};\n    clientInstances[defaultInstanceId] = mainClientInstance;\n    return function client(key) {\n        if (key === undefined) {\n            log.debug(RETRIEVE_CLIENT_DEFAULT);\n            return mainClientInstance;\n        }\n        // Validate the key value. The trafficType (2nd argument) is ignored\n        var validKey = validateKey(log, key, method);\n        if (validKey === false) {\n            throw new Error('Shared Client needs a valid key.');\n        }\n        var instanceId = buildInstanceId(validKey);\n        if (!clientInstances[instanceId]) {\n            var matchingKey = getMatching(validKey);\n            var sharedSdkReadiness_1 = sdkReadinessManager.shared(readyTimeout);\n            var sharedStorage = storage.shared && storage.shared(matchingKey, function (err) {\n                if (err) {\n                    sharedSdkReadiness_1.readinessManager.timeout();\n                    return;\n                }\n                // Emit SDK_READY in consumer mode for shared clients\n                sharedSdkReadiness_1.readinessManager.segments.emit(SDK_SEGMENTS_ARRIVED);\n            });\n            // 3 possibilities:\n            // - Standalone mode: both syncManager and sharedSyncManager are defined\n            // - Consumer mode: both syncManager and sharedSyncManager are undefined\n            // - Consumer partial mode: syncManager is defined (only for submitters) but sharedSyncManager is undefined\n            // @ts-ignore\n            var sharedSyncManager = syncManager && sharedStorage && syncManager.shared(matchingKey, sharedSdkReadiness_1.readinessManager, sharedStorage);\n            // As shared clients reuse all the storage information, we don't need to check here if we\n            // will use offline or online mode. We should stick with the original decision.\n            clientInstances[instanceId] = clientCSDecorator(log, sdkClientFactory(objectAssign({}, params, {\n                sdkReadinessManager: sharedSdkReadiness_1,\n                storage: sharedStorage || storage,\n                syncManager: sharedSyncManager,\n                signalListener: undefined, // only the main client \"destroy\" method stops the signal listener\n            }), true), validKey);\n            sharedSyncManager && sharedSyncManager.start();\n            log.info(NEW_SHARED_CLIENT);\n        }\n        else {\n            log.debug(RETRIEVE_CLIENT_EXISTING);\n        }\n        return clientInstances[instanceId];\n    };\n}\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { clientAttributesDecoration } from './clientAttributesDecoration';\n/**\n * Decorator that binds a key and (optionally) a traffic type to client methods\n *\n * @param client sync client instance\n * @param key validated split key\n * @param trafficType validated traffic type\n */\nexport function clientCSDecorator(log, client, key, trafficType) {\n    var clientCS = clientAttributesDecoration(log, client);\n    return objectAssign(clientCS, {\n        // In the client-side API, we bind a key to the client `getTreatment*` methods\n        getTreatment: clientCS.getTreatment.bind(clientCS, key),\n        getTreatmentWithConfig: clientCS.getTreatmentWithConfig.bind(clientCS, key),\n        getTreatments: clientCS.getTreatments.bind(clientCS, key),\n        getTreatmentsWithConfig: clientCS.getTreatmentsWithConfig.bind(clientCS, key),\n        getTreatmentsByFlagSets: clientCS.getTreatmentsByFlagSets.bind(clientCS, key),\n        getTreatmentsWithConfigByFlagSets: clientCS.getTreatmentsWithConfigByFlagSets.bind(clientCS, key),\n        getTreatmentsByFlagSet: clientCS.getTreatmentsByFlagSet.bind(clientCS, key),\n        getTreatmentsWithConfigByFlagSet: clientCS.getTreatmentsWithConfigByFlagSet.bind(clientCS, key),\n        // Key is bound to the `track` method. Same thing happens with trafficType but only if provided\n        track: trafficType ? clientCS.track.bind(clientCS, key, trafficType) : clientCS.track.bind(clientCS, key),\n        // Not part of the public API. These properties are used to support other modules (e.g., Split Suite)\n        isClientSide: true,\n        key: key,\n        trafficType: trafficType\n    });\n}\n","import { AttributesCacheInMemory } from '../storages/inMemory/AttributesCacheInMemory';\nimport { validateAttributesDeep } from '../utils/inputValidation/attributes';\nimport { objectAssign } from '../utils/lang/objectAssign';\n/**\n * Add in memory attributes storage methods and combine them with any attribute received from the getTreatment/s call\n */\nexport function clientAttributesDecoration(log, client) {\n    var attributeStorage = new AttributesCacheInMemory();\n    // Keep a reference to the original methods\n    var clientGetTreatment = client.getTreatment;\n    var clientGetTreatmentWithConfig = client.getTreatmentWithConfig;\n    var clientGetTreatments = client.getTreatments;\n    var clientGetTreatmentsWithConfig = client.getTreatmentsWithConfig;\n    var clientGetTreatmentsByFlagSets = client.getTreatmentsByFlagSets;\n    var clientGetTreatmentsWithConfigByFlagSets = client.getTreatmentsWithConfigByFlagSets;\n    var clientGetTreatmentsByFlagSet = client.getTreatmentsByFlagSet;\n    var clientGetTreatmentsWithConfigByFlagSet = client.getTreatmentsWithConfigByFlagSet;\n    var clientTrack = client.track;\n    function getTreatment(maybeKey, maybeFeatureFlagName, maybeAttributes) {\n        return clientGetTreatment(maybeKey, maybeFeatureFlagName, combineAttributes(maybeAttributes));\n    }\n    function getTreatmentWithConfig(maybeKey, maybeFeatureFlagName, maybeAttributes) {\n        return clientGetTreatmentWithConfig(maybeKey, maybeFeatureFlagName, combineAttributes(maybeAttributes));\n    }\n    function getTreatments(maybeKey, maybeFeatureFlagNames, maybeAttributes) {\n        return clientGetTreatments(maybeKey, maybeFeatureFlagNames, combineAttributes(maybeAttributes));\n    }\n    function getTreatmentsWithConfig(maybeKey, maybeFeatureFlagNames, maybeAttributes) {\n        return clientGetTreatmentsWithConfig(maybeKey, maybeFeatureFlagNames, combineAttributes(maybeAttributes));\n    }\n    function getTreatmentsByFlagSets(maybeKey, maybeFlagSets, maybeAttributes) {\n        return clientGetTreatmentsByFlagSets(maybeKey, maybeFlagSets, combineAttributes(maybeAttributes));\n    }\n    function getTreatmentsWithConfigByFlagSets(maybeKey, maybeFlagSets, maybeAttributes) {\n        return clientGetTreatmentsWithConfigByFlagSets(maybeKey, maybeFlagSets, combineAttributes(maybeAttributes));\n    }\n    function getTreatmentsByFlagSet(maybeKey, maybeFlagSet, maybeAttributes) {\n        return clientGetTreatmentsByFlagSet(maybeKey, maybeFlagSet, combineAttributes(maybeAttributes));\n    }\n    function getTreatmentsWithConfigByFlagSet(maybeKey, maybeFlagSet, maybeAttributes) {\n        return clientGetTreatmentsWithConfigByFlagSet(maybeKey, maybeFlagSet, combineAttributes(maybeAttributes));\n    }\n    function track(maybeKey, maybeTT, maybeEvent, maybeEventValue, maybeProperties) {\n        return clientTrack(maybeKey, maybeTT, maybeEvent, maybeEventValue, maybeProperties);\n    }\n    function combineAttributes(maybeAttributes) {\n        var storedAttributes = attributeStorage.getAll();\n        if (Object.keys(storedAttributes).length > 0) {\n            return objectAssign({}, storedAttributes, maybeAttributes);\n        }\n        return maybeAttributes;\n    }\n    return objectAssign(client, {\n        getTreatment: getTreatment,\n        getTreatmentWithConfig: getTreatmentWithConfig,\n        getTreatments: getTreatments,\n        getTreatmentsWithConfig: getTreatmentsWithConfig,\n        getTreatmentsByFlagSets: getTreatmentsByFlagSets,\n        getTreatmentsWithConfigByFlagSets: getTreatmentsWithConfigByFlagSets,\n        getTreatmentsByFlagSet: getTreatmentsByFlagSet,\n        getTreatmentsWithConfigByFlagSet: getTreatmentsWithConfigByFlagSet,\n        track: track,\n        /**\n         * Add an attribute to client's in memory attributes storage\n         *\n         * @param {string} attributeName Attrinute name\n         * @param {string, number, boolean, list} attributeValue Attribute value\n         * @returns {boolean} true if the attribute was stored and false otherways\n         */\n        setAttribute: function (attributeName, attributeValue) {\n            var attribute = {};\n            attribute[attributeName] = attributeValue;\n            if (!validateAttributesDeep(log, attribute, 'setAttribute'))\n                return false;\n            log.debug(\"stored \" + attributeValue + \" for attribute \" + attributeName);\n            return attributeStorage.setAttribute(attributeName, attributeValue);\n        },\n        /**\n         * Returns the attribute with the given name\n         *\n         * @param {string} attributeName Attribute name\n         * @returns {Object} Attribute with the given name\n         */\n        getAttribute: function (attributeName) {\n            log.debug(\"retrieved attribute \" + attributeName);\n            return attributeStorage.getAttribute(attributeName + '');\n        },\n        /**\n         * Add to client's in memory attributes storage the attributes in 'attributes'\n         *\n         * @param {Object} attributes Object with attributes to store\n         * @returns true if attributes were stored an false otherways\n         */\n        setAttributes: function (attributes) {\n            if (!validateAttributesDeep(log, attributes, 'setAttributes'))\n                return false;\n            return attributeStorage.setAttributes(attributes);\n        },\n        /**\n         * Return all the attributes stored in client's in memory attributes storage\n         *\n         * @returns {Object} returns all the stored attributes\n         */\n        getAttributes: function () {\n            return attributeStorage.getAll();\n        },\n        /**\n         * Removes from client's in memory attributes storage the attribute with the given name\n         *\n         * @param {string} attributeName\n         * @returns {boolean} true if attribute was removed and false otherways\n         */\n        removeAttribute: function (attributeName) {\n            log.debug(\"removed attribute \" + attributeName);\n            return attributeStorage.removeAttribute(attributeName + '');\n        },\n        /**\n         * Remove all the stored attributes in the client's in memory attribute storage\n         */\n        clearAttributes: function () {\n            return attributeStorage.clear();\n        }\n    });\n}\n","import { objectAssign } from '../../utils/lang/objectAssign';\nvar AttributesCacheInMemory = /** @class */ (function () {\n    function AttributesCacheInMemory() {\n        this.attributesCache = {};\n    }\n    /**\n     * Create or update the value for the given attribute\n     *\n     * @param {string} attributeName attribute name\n     * @param {Object} attributeValue attribute value\n     * @returns {boolean} the attribute was stored\n     */\n    AttributesCacheInMemory.prototype.setAttribute = function (attributeName, attributeValue) {\n        this.attributesCache[attributeName] = attributeValue;\n        return true;\n    };\n    /**\n     * Retrieves the value of a given attribute\n     *\n     * @param {string} attributeName attribute name\n     * @returns {Object?} stored attribute value\n     */\n    AttributesCacheInMemory.prototype.getAttribute = function (attributeName) {\n        return this.attributesCache[attributeName];\n    };\n    /**\n     * Create or update all the given attributes\n     *\n     * @param {[string, Object]} attributes attributes to create or update\n     * @returns {boolean} attributes were stored\n     */\n    AttributesCacheInMemory.prototype.setAttributes = function (attributes) {\n        this.attributesCache = objectAssign(this.attributesCache, attributes);\n        return true;\n    };\n    /**\n     * Retrieve the full attributes map\n     *\n     * @returns {Map<string, Object>} stored attributes\n     */\n    AttributesCacheInMemory.prototype.getAll = function () {\n        return this.attributesCache;\n    };\n    /**\n     * Removes a given attribute from the map\n     *\n     * @param {string} attributeName attribute to remove\n     * @returns {boolean} attribute removed\n     */\n    AttributesCacheInMemory.prototype.removeAttribute = function (attributeName) {\n        if (Object.keys(this.attributesCache).indexOf(attributeName) >= 0) {\n            delete this.attributesCache[attributeName];\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Clears all attributes stored in the SDK\n     *\n     */\n    AttributesCacheInMemory.prototype.clear = function () {\n        this.attributesCache = {};\n        return true;\n    };\n    return AttributesCacheInMemory;\n}());\nexport { AttributesCacheInMemory };\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { releaseApiKey } from '../utils/inputValidation/apiKey';\nimport { clientFactory } from './client';\nimport { clientInputValidationDecorator } from './clientInputValidation';\nvar COOLDOWN_TIME_IN_MILLIS = 1000;\n/**\n * Creates an Sdk client, i.e., a base client with status and destroy interface\n */\nexport function sdkClientFactory(params, isSharedClient) {\n    var sdkReadinessManager = params.sdkReadinessManager, syncManager = params.syncManager, storage = params.storage, signalListener = params.signalListener, settings = params.settings, telemetryTracker = params.telemetryTracker, uniqueKeysTracker = params.uniqueKeysTracker;\n    var lastActionTime = 0;\n    function __cooldown(func, time) {\n        var now = Date.now();\n        //get the actual time elapsed in ms\n        var timeElapsed = now - lastActionTime;\n        //check if the time elapsed is less than desired cooldown\n        if (timeElapsed < time) {\n            //if yes, return message with remaining time in seconds\n            settings.log.warn(\"Flush cooldown, remaining time \" + (time - timeElapsed) / 1000 + \" seconds\");\n            return Promise.resolve();\n        }\n        else {\n            //Do the requested action and re-assign the lastActionTime\n            lastActionTime = now;\n            return func();\n        }\n    }\n    function __flush() {\n        return syncManager ? syncManager.flush() : Promise.resolve();\n    }\n    return objectAssign(\n    // Proto-linkage of the readiness Event Emitter\n    Object.create(sdkReadinessManager.sdkStatus), \n    // Client API (getTreatment* & track methods)\n    clientInputValidationDecorator(settings, clientFactory(params), sdkReadinessManager.readinessManager), \n    // Sdk destroy\n    {\n        flush: function () {\n            // @TODO define cooldown time\n            return __cooldown(__flush, COOLDOWN_TIME_IN_MILLIS);\n        },\n        destroy: function () {\n            // Mark the SDK as destroyed immediately\n            sdkReadinessManager.readinessManager.destroy();\n            // For main client, release the SDK Key and record stat before flushing data\n            if (!isSharedClient) {\n                releaseApiKey(settings.core.authorizationKey);\n                telemetryTracker.sessionLength();\n            }\n            // Stop background jobs\n            syncManager && syncManager.stop();\n            return __flush().then(function () {\n                // Cleanup event listeners\n                signalListener && signalListener.stop();\n                // @TODO stop only if last client is destroyed\n                if (uniqueKeysTracker)\n                    uniqueKeysTracker.stop();\n                // Cleanup storage\n                return storage.destroy();\n            });\n        }\n    });\n}\n","import { evaluateFeature, evaluateFeatures, evaluateFeaturesByFlagSets } from '../evaluator';\nimport { thenable } from '../utils/promise/thenable';\nimport { getMatching, getBucketing } from '../utils/key';\nimport { validateSplitExistence } from '../utils/inputValidation/splitExistence';\nimport { validateTrafficTypeExistence } from '../utils/inputValidation/trafficTypeExistence';\nimport { SDK_NOT_READY } from '../utils/labels';\nimport { CONTROL, TREATMENT, TREATMENTS, TREATMENT_WITH_CONFIG, TREATMENTS_WITH_CONFIG, TRACK, TREATMENTS_WITH_CONFIG_BY_FLAGSETS, TREATMENTS_BY_FLAGSETS, TREATMENTS_BY_FLAGSET, TREATMENTS_WITH_CONFIG_BY_FLAGSET, GET_TREATMENTS_WITH_CONFIG, GET_TREATMENTS_BY_FLAG_SETS, GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SETS, GET_TREATMENTS_BY_FLAG_SET, GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SET, GET_TREATMENT_WITH_CONFIG, GET_TREATMENT, GET_TREATMENTS, TRACK_FN_LABEL } from '../utils/constants';\nimport { IMPRESSION, IMPRESSION_QUEUEING } from '../logger/constants';\nimport { isConsumerMode } from '../utils/settingsValidation/mode';\nvar treatmentNotReady = { treatment: CONTROL, label: SDK_NOT_READY };\nfunction treatmentsNotReady(featureFlagNames) {\n    var evaluations = {};\n    featureFlagNames.forEach(function (featureFlagName) {\n        evaluations[featureFlagName] = treatmentNotReady;\n    });\n    return evaluations;\n}\n/**\n * Creator of base client with getTreatments and track methods.\n */\nexport function clientFactory(params) {\n    var readinessManager = params.sdkReadinessManager.readinessManager, storage = params.storage, settings = params.settings, impressionsTracker = params.impressionsTracker, eventTracker = params.eventTracker, telemetryTracker = params.telemetryTracker;\n    var log = settings.log, mode = settings.mode;\n    var isAsync = isConsumerMode(mode);\n    function getTreatment(key, featureFlagName, attributes, withConfig, methodName) {\n        if (withConfig === void 0) { withConfig = false; }\n        if (methodName === void 0) { methodName = GET_TREATMENT; }\n        var stopTelemetryTracker = telemetryTracker.trackEval(withConfig ? TREATMENT_WITH_CONFIG : TREATMENT);\n        var wrapUp = function (evaluationResult) {\n            var queue = [];\n            var treatment = processEvaluation(evaluationResult, featureFlagName, key, attributes, withConfig, methodName, queue);\n            impressionsTracker.track(queue, attributes);\n            stopTelemetryTracker(queue[0] && queue[0].label);\n            return treatment;\n        };\n        var evaluation = readinessManager.isReady() || readinessManager.isReadyFromCache() ?\n            evaluateFeature(log, key, featureFlagName, attributes, storage) :\n            isAsync ? // If the SDK is not ready, treatment may be incorrect due to having splits but not segments data, or storage is not connected\n                Promise.resolve(treatmentNotReady) :\n                treatmentNotReady;\n        return thenable(evaluation) ? evaluation.then(function (res) { return wrapUp(res); }) : wrapUp(evaluation);\n    }\n    function getTreatmentWithConfig(key, featureFlagName, attributes) {\n        return getTreatment(key, featureFlagName, attributes, true, GET_TREATMENT_WITH_CONFIG);\n    }\n    function getTreatments(key, featureFlagNames, attributes, withConfig, methodName) {\n        if (withConfig === void 0) { withConfig = false; }\n        if (methodName === void 0) { methodName = GET_TREATMENTS; }\n        var stopTelemetryTracker = telemetryTracker.trackEval(withConfig ? TREATMENTS_WITH_CONFIG : TREATMENTS);\n        var wrapUp = function (evaluationResults) {\n            var queue = [];\n            var treatments = {};\n            Object.keys(evaluationResults).forEach(function (featureFlagName) {\n                treatments[featureFlagName] = processEvaluation(evaluationResults[featureFlagName], featureFlagName, key, attributes, withConfig, methodName, queue);\n            });\n            impressionsTracker.track(queue, attributes);\n            stopTelemetryTracker(queue[0] && queue[0].label);\n            return treatments;\n        };\n        var evaluations = readinessManager.isReady() || readinessManager.isReadyFromCache() ?\n            evaluateFeatures(log, key, featureFlagNames, attributes, storage) :\n            isAsync ? // If the SDK is not ready, treatment may be incorrect due to having splits but not segments data, or storage is not connected\n                Promise.resolve(treatmentsNotReady(featureFlagNames)) :\n                treatmentsNotReady(featureFlagNames);\n        return thenable(evaluations) ? evaluations.then(function (res) { return wrapUp(res); }) : wrapUp(evaluations);\n    }\n    function getTreatmentsWithConfig(key, featureFlagNames, attributes) {\n        return getTreatments(key, featureFlagNames, attributes, true, GET_TREATMENTS_WITH_CONFIG);\n    }\n    function getTreatmentsByFlagSets(key, flagSetNames, attributes, withConfig, method, methodName) {\n        if (withConfig === void 0) { withConfig = false; }\n        if (method === void 0) { method = TREATMENTS_BY_FLAGSETS; }\n        if (methodName === void 0) { methodName = GET_TREATMENTS_BY_FLAG_SETS; }\n        var stopTelemetryTracker = telemetryTracker.trackEval(method);\n        var wrapUp = function (evaluationResults) {\n            var queue = [];\n            var treatments = {};\n            var evaluations = evaluationResults;\n            Object.keys(evaluations).forEach(function (featureFlagName) {\n                treatments[featureFlagName] = processEvaluation(evaluations[featureFlagName], featureFlagName, key, attributes, withConfig, methodName, queue);\n            });\n            impressionsTracker.track(queue, attributes);\n            stopTelemetryTracker(queue[0] && queue[0].label);\n            return treatments;\n        };\n        var evaluations = readinessManager.isReady() || readinessManager.isReadyFromCache() ?\n            evaluateFeaturesByFlagSets(log, key, flagSetNames, attributes, storage, methodName) :\n            isAsync ?\n                Promise.resolve({}) :\n                {};\n        return thenable(evaluations) ? evaluations.then(function (res) { return wrapUp(res); }) : wrapUp(evaluations);\n    }\n    function getTreatmentsWithConfigByFlagSets(key, flagSetNames, attributes) {\n        return getTreatmentsByFlagSets(key, flagSetNames, attributes, true, TREATMENTS_WITH_CONFIG_BY_FLAGSETS, GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SETS);\n    }\n    function getTreatmentsByFlagSet(key, flagSetName, attributes) {\n        return getTreatmentsByFlagSets(key, [flagSetName], attributes, false, TREATMENTS_BY_FLAGSET, GET_TREATMENTS_BY_FLAG_SET);\n    }\n    function getTreatmentsWithConfigByFlagSet(key, flagSetName, attributes) {\n        return getTreatmentsByFlagSets(key, [flagSetName], attributes, true, TREATMENTS_WITH_CONFIG_BY_FLAGSET, GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SET);\n    }\n    // Internal function\n    function processEvaluation(evaluation, featureFlagName, key, attributes, withConfig, invokingMethodName, queue) {\n        var matchingKey = getMatching(key);\n        var bucketingKey = getBucketing(key);\n        var treatment = evaluation.treatment, label = evaluation.label, changeNumber = evaluation.changeNumber, _a = evaluation.config, config = _a === void 0 ? null : _a;\n        log.info(IMPRESSION, [featureFlagName, matchingKey, treatment, label]);\n        if (validateSplitExistence(log, readinessManager, featureFlagName, label, invokingMethodName)) {\n            log.info(IMPRESSION_QUEUEING);\n            queue.push({\n                feature: featureFlagName,\n                keyName: matchingKey,\n                treatment: treatment,\n                time: Date.now(),\n                bucketingKey: bucketingKey,\n                label: label,\n                changeNumber: changeNumber\n            });\n        }\n        if (withConfig) {\n            return {\n                treatment: treatment,\n                config: config\n            };\n        }\n        return treatment;\n    }\n    function track(key, trafficTypeName, eventTypeId, value, properties, size) {\n        if (size === void 0) { size = 1024; }\n        var stopTelemetryTracker = telemetryTracker.trackEval(TRACK);\n        var matchingKey = getMatching(key);\n        var timestamp = Date.now();\n        var eventData = {\n            eventTypeId: eventTypeId,\n            trafficTypeName: trafficTypeName,\n            value: value,\n            timestamp: timestamp,\n            key: matchingKey,\n            properties: properties\n        };\n        // This may be async but we only warn, we don't actually care if it is valid or not in terms of queueing the event.\n        validateTrafficTypeExistence(log, readinessManager, storage.splits, mode, trafficTypeName, TRACK_FN_LABEL);\n        var result = eventTracker.track(eventData, size);\n        if (thenable(result)) {\n            return result.then(function (result) {\n                stopTelemetryTracker();\n                return result;\n            });\n        }\n        else {\n            stopTelemetryTracker();\n            return result;\n        }\n    }\n    return {\n        getTreatment: getTreatment,\n        getTreatmentWithConfig: getTreatmentWithConfig,\n        getTreatments: getTreatments,\n        getTreatmentsWithConfig: getTreatmentsWithConfig,\n        getTreatmentsByFlagSets: getTreatmentsByFlagSets,\n        getTreatmentsWithConfigByFlagSets: getTreatmentsWithConfigByFlagSets,\n        getTreatmentsByFlagSet: getTreatmentsByFlagSet,\n        getTreatmentsWithConfigByFlagSet: getTreatmentsWithConfigByFlagSet,\n        track: track,\n        isClientSide: false\n    };\n}\n","import { Engine } from './Engine';\nimport { thenable } from '../utils/promise/thenable';\nimport * as LabelsConstants from '../utils/labels';\nimport { CONTROL } from '../utils/constants';\nimport { setToArray, returnSetsUnion, _Set } from '../utils/lang/sets';\nimport { WARN_FLAGSET_WITHOUT_FLAGS } from '../logger/constants';\nvar treatmentException = {\n    treatment: CONTROL,\n    label: LabelsConstants.EXCEPTION,\n    config: null\n};\nfunction treatmentsException(splitNames) {\n    var evaluations = {};\n    splitNames.forEach(function (splitName) {\n        evaluations[splitName] = treatmentException;\n    });\n    return evaluations;\n}\nexport function evaluateFeature(log, key, splitName, attributes, storage) {\n    var parsedSplit;\n    try {\n        parsedSplit = storage.splits.getSplit(splitName);\n    }\n    catch (e) {\n        // Exception on sync `getSplit` storage. Not possible ATM with InMemory and InLocal storages.\n        return treatmentException;\n    }\n    if (thenable(parsedSplit)) {\n        return parsedSplit.then(function (split) { return getEvaluation(log, split, key, attributes, storage); }).catch(\n        // Exception on async `getSplit` storage. For example, when the storage is redis or\n        // pluggable and there is a connection issue and we can't retrieve the split to be evaluated\n        function () { return treatmentException; });\n    }\n    return getEvaluation(log, parsedSplit, key, attributes, storage);\n}\nexport function evaluateFeatures(log, key, splitNames, attributes, storage) {\n    var parsedSplits;\n    try {\n        parsedSplits = storage.splits.getSplits(splitNames);\n    }\n    catch (e) {\n        // Exception on sync `getSplits` storage. Not possible ATM with InMemory and InLocal storages.\n        return treatmentsException(splitNames);\n    }\n    return thenable(parsedSplits) ?\n        parsedSplits.then(function (splits) { return getEvaluations(log, splitNames, splits, key, attributes, storage); })\n            .catch(function () {\n            // Exception on async `getSplits` storage. For example, when the storage is redis or\n            // pluggable and there is a connection issue and we can't retrieve the split to be evaluated\n            return treatmentsException(splitNames);\n        }) :\n        getEvaluations(log, splitNames, parsedSplits, key, attributes, storage);\n}\nexport function evaluateFeaturesByFlagSets(log, key, flagSets, attributes, storage, method) {\n    var storedFlagNames;\n    function evaluate(featureFlagsByFlagSets) {\n        var featureFlags = new _Set();\n        for (var i = 0; i < flagSets.length; i++) {\n            var featureFlagByFlagSet = featureFlagsByFlagSets[i];\n            if (featureFlagByFlagSet.size) {\n                featureFlags = returnSetsUnion(featureFlags, featureFlagByFlagSet);\n            }\n            else {\n                log.warn(WARN_FLAGSET_WITHOUT_FLAGS, [method, flagSets[i]]);\n            }\n        }\n        return featureFlags.size ?\n            evaluateFeatures(log, key, setToArray(featureFlags), attributes, storage) :\n            {};\n    }\n    // get features by flag sets\n    try {\n        storedFlagNames = storage.splits.getNamesByFlagSets(flagSets);\n    }\n    catch (e) {\n        // return empty evaluations\n        return {};\n    }\n    // evaluate related features\n    return thenable(storedFlagNames) ?\n        storedFlagNames.then(function (storedFlagNames) { return evaluate(storedFlagNames); })\n            .catch(function () {\n            return {};\n        }) :\n        evaluate(storedFlagNames);\n}\nfunction getEvaluation(log, splitJSON, key, attributes, storage) {\n    var evaluation = {\n        treatment: CONTROL,\n        label: LabelsConstants.SPLIT_NOT_FOUND,\n        config: null\n    };\n    if (splitJSON) {\n        var split_1 = Engine.parse(log, splitJSON, storage);\n        evaluation = split_1.getTreatment(key, attributes, evaluateFeature);\n        // If the storage is async and the evaluated split uses segment, evaluation is thenable\n        if (thenable(evaluation)) {\n            return evaluation.then(function (result) {\n                result.changeNumber = split_1.getChangeNumber();\n                result.config = splitJSON.configurations && splitJSON.configurations[result.treatment] || null;\n                return result;\n            });\n        }\n        else {\n            evaluation.changeNumber = split_1.getChangeNumber(); // Always sync and optional\n            evaluation.config = splitJSON.configurations && splitJSON.configurations[evaluation.treatment] || null;\n        }\n    }\n    return evaluation;\n}\nfunction getEvaluations(log, splitNames, splits, key, attributes, storage) {\n    var result = {};\n    var thenables = [];\n    splitNames.forEach(function (splitName) {\n        var evaluation = getEvaluation(log, splits[splitName], key, attributes, storage);\n        if (thenable(evaluation)) {\n            thenables.push(evaluation.then(function (res) {\n                result[splitName] = res;\n            }));\n        }\n        else {\n            result[splitName] = evaluation;\n        }\n    });\n    return thenables.length > 0 ? Promise.all(thenables).then(function () { return result; }) : result;\n}\n","import { get } from '../utils/lang';\nimport { parser } from './parser';\nimport { keyParser } from '../utils/key';\nimport { thenable } from '../utils/promise/thenable';\nimport * as LabelsConstants from '../utils/labels';\nimport { CONTROL } from '../utils/constants';\nfunction evaluationResult(result, defaultTreatment) {\n    return {\n        treatment: get(result, 'treatment', defaultTreatment),\n        label: get(result, 'label', LabelsConstants.NO_CONDITION_MATCH)\n    };\n}\nvar Engine = /** @class */ (function () {\n    function Engine(baseInfo, evaluator) {\n        this.baseInfo = baseInfo;\n        this.evaluator = evaluator;\n        // in case we don't have a default treatment in the instanciation, use 'control'\n        if (typeof this.baseInfo.defaultTreatment !== 'string') {\n            this.baseInfo.defaultTreatment = CONTROL;\n        }\n    }\n    Engine.parse = function (log, splitFlatStructure, storage) {\n        var conditions = splitFlatStructure.conditions;\n        var evaluator = parser(log, conditions, storage);\n        return new Engine(splitFlatStructure, evaluator);\n    };\n    Engine.prototype.getKey = function () {\n        return this.baseInfo.name;\n    };\n    Engine.prototype.getTreatment = function (key, attributes, splitEvaluator) {\n        var _a = this.baseInfo, killed = _a.killed, seed = _a.seed, defaultTreatment = _a.defaultTreatment, trafficAllocation = _a.trafficAllocation, trafficAllocationSeed = _a.trafficAllocationSeed;\n        var parsedKey;\n        var treatment;\n        var label;\n        try {\n            parsedKey = keyParser(key);\n        }\n        catch (err) {\n            return {\n                treatment: CONTROL,\n                label: LabelsConstants.EXCEPTION\n            };\n        }\n        if (this.isGarbage()) {\n            treatment = CONTROL;\n            label = LabelsConstants.SPLIT_ARCHIVED;\n        }\n        else if (killed) {\n            treatment = defaultTreatment;\n            label = LabelsConstants.SPLIT_KILLED;\n        }\n        else {\n            var evaluation = this.evaluator(parsedKey, seed, trafficAllocation, trafficAllocationSeed, attributes, splitEvaluator);\n            // Evaluation could be async, so we should handle that case checking for a\n            // thenable object\n            if (thenable(evaluation)) {\n                return evaluation.then(function (result) { return evaluationResult(result, defaultTreatment); });\n            }\n            else {\n                return evaluationResult(evaluation, defaultTreatment);\n            }\n        }\n        return {\n            treatment: treatment,\n            label: label\n        };\n    };\n    Engine.prototype.isGarbage = function () {\n        return this.baseInfo.status === 'ARCHIVED';\n    };\n    Engine.prototype.getChangeNumber = function () {\n        return this.baseInfo.changeNumber;\n    };\n    return Engine;\n}());\nexport { Engine };\n","import { matchersTransform } from '../matchersTransform';\nimport { Treatments } from '../treatments';\nimport { matcherFactory } from '../matchers';\nimport { sanitizeValue } from '../value';\nimport { conditionContext } from '../condition';\nimport { ifElseIfCombinerContext } from '../combiners/ifelseif';\nimport { andCombinerContext } from '../combiners/and';\nimport { thenable } from '../../utils/promise/thenable';\nexport function parser(log, conditions, storage) {\n    var predicates = [];\n    for (var i = 0; i < conditions.length; i++) {\n        var _a = conditions[i], matcherGroup = _a.matcherGroup, partitions = _a.partitions, label = _a.label, conditionType = _a.conditionType;\n        // transform data structure\n        var matchers = matchersTransform(matcherGroup.matchers);\n        // create a set of pure functions from the matcher's dto\n        var expressions = matchers.map(function (matcherDto) {\n            var matcher = matcherFactory(log, matcherDto, storage);\n            // Evaluator function.\n            return function (key, attributes, splitEvaluator) {\n                var value = sanitizeValue(log, key, matcherDto, attributes);\n                var result = value !== undefined && matcher ? matcher(value, splitEvaluator) : false;\n                if (thenable(result)) {\n                    // @ts-ignore\n                    return result.then(function (res) { return Boolean(res ^ matcherDto.negate); });\n                }\n                // @ts-ignore\n                return Boolean(result ^ matcherDto.negate);\n            };\n        });\n        // if matcher's factory can't instanciate the matchers, the expressions array\n        // will be empty\n        if (expressions.length === 0) {\n            // reset any data collected during parsing\n            predicates = [];\n            // and break the loop\n            break;\n        }\n        predicates.push(conditionContext(log, andCombinerContext(log, expressions), Treatments.parse(partitions), label, conditionType));\n    }\n    // Instanciate evaluator given the set of conditions using if else if logic\n    return ifElseIfCombinerContext(log, predicates);\n}\n","import { findIndex } from '../../utils/lang';\nimport { matcherTypes, matcherTypesMapper, matcherDataTypes } from '../matchers/matcherTypes';\nimport { segmentTransform } from './segment';\nimport { whitelistTransform } from './whitelist';\nimport { setTransform } from './set';\nimport { numericTransform } from './unaryNumeric';\nimport { zeroSinceHH, zeroSinceSS } from '../convertions';\n/**\n * Flat the complex matcherGroup structure into something handy.\n */\nexport function matchersTransform(matchers) {\n    var parsedMatchers = matchers.map(function (matcher) {\n        var matcherType = matcher.matcherType /* string */, negate = matcher.negate /* boolean */, keySelector = matcher.keySelector /* keySelectorObject */, segmentObject = matcher.userDefinedSegmentMatcherData /* segmentObject */, whitelistObject = matcher.whitelistMatcherData /* whiteListObject, provided by 'WHITELIST', set and string matchers */, unaryNumericObject = matcher.unaryNumericMatcherData /* unaryNumericObject */, betweenObject = matcher.betweenMatcherData /* betweenObject */, dependencyObject = matcher.dependencyMatcherData /* dependencyObject */, booleanMatcherData = matcher.booleanMatcherData, stringMatcherData = matcher.stringMatcherData;\n        var attribute = keySelector && keySelector.attribute;\n        var type = matcherTypesMapper(matcherType);\n        // As default input data type we use string (even for ALL_KEYS)\n        var dataType = matcherDataTypes.STRING;\n        var value = undefined;\n        if (type === matcherTypes.IN_SEGMENT) {\n            value = segmentTransform(segmentObject);\n        }\n        else if (type === matcherTypes.WHITELIST) {\n            value = whitelistTransform(whitelistObject);\n        }\n        else if (type === matcherTypes.EQUAL_TO) {\n            value = numericTransform(unaryNumericObject);\n            dataType = matcherDataTypes.NUMBER;\n            if (unaryNumericObject.dataType === 'DATETIME') {\n                value = zeroSinceHH(value);\n                dataType = matcherDataTypes.DATETIME;\n            }\n        }\n        else if (type === matcherTypes.GREATER_THAN_OR_EQUAL_TO ||\n            type === matcherTypes.LESS_THAN_OR_EQUAL_TO) {\n            value = numericTransform(unaryNumericObject);\n            dataType = matcherDataTypes.NUMBER;\n            if (unaryNumericObject.dataType === 'DATETIME') {\n                value = zeroSinceSS(value);\n                dataType = matcherDataTypes.DATETIME;\n            }\n        }\n        else if (type === matcherTypes.BETWEEN) {\n            value = betweenObject;\n            dataType = matcherDataTypes.NUMBER;\n            if (value.dataType === 'DATETIME') {\n                value.start = zeroSinceSS(value.start);\n                value.end = zeroSinceSS(value.end);\n                dataType = matcherDataTypes.DATETIME;\n            }\n        }\n        else if (type === matcherTypes.EQUAL_TO_SET ||\n            type === matcherTypes.CONTAINS_ANY_OF_SET ||\n            type === matcherTypes.CONTAINS_ALL_OF_SET ||\n            type === matcherTypes.PART_OF_SET) {\n            value = setTransform(whitelistObject);\n            dataType = matcherDataTypes.SET;\n        }\n        else if (type === matcherTypes.STARTS_WITH ||\n            type === matcherTypes.ENDS_WITH ||\n            type === matcherTypes.CONTAINS_STRING) {\n            value = setTransform(whitelistObject);\n        }\n        else if (type === matcherTypes.IN_SPLIT_TREATMENT) {\n            value = dependencyObject;\n            dataType = matcherDataTypes.NOT_SPECIFIED;\n        }\n        else if (type === matcherTypes.EQUAL_TO_BOOLEAN) {\n            dataType = matcherDataTypes.BOOLEAN;\n            value = booleanMatcherData;\n        }\n        else if (type === matcherTypes.MATCHES_STRING) {\n            value = stringMatcherData;\n        }\n        return {\n            attribute: attribute,\n            negate: negate,\n            type: type,\n            value: value,\n            dataType: dataType // runtime input data type\n        };\n    });\n    if (findIndex(parsedMatchers, function (m) { return m.type === matcherTypes.UNDEFINED; }) === -1) {\n        return parsedMatchers;\n    }\n    else {\n        return [];\n    }\n}\n","export var matcherTypes = {\n    UNDEFINED: 0,\n    ALL_KEYS: 1,\n    IN_SEGMENT: 2,\n    WHITELIST: 3,\n    EQUAL_TO: 4,\n    GREATER_THAN_OR_EQUAL_TO: 5,\n    LESS_THAN_OR_EQUAL_TO: 6,\n    BETWEEN: 7,\n    EQUAL_TO_SET: 8,\n    CONTAINS_ANY_OF_SET: 9,\n    CONTAINS_ALL_OF_SET: 10,\n    PART_OF_SET: 11,\n    ENDS_WITH: 12,\n    STARTS_WITH: 13,\n    CONTAINS_STRING: 14,\n    IN_SPLIT_TREATMENT: 15,\n    EQUAL_TO_BOOLEAN: 16,\n    MATCHES_STRING: 17\n};\nexport var matcherDataTypes = {\n    BOOLEAN: 'BOOLEAN',\n    STRING: 'STRING',\n    NUMBER: 'NUMBER',\n    SET: 'SET',\n    DATETIME: 'DATETIME',\n    NOT_SPECIFIED: 'NOT_SPECIFIED'\n};\nexport function matcherTypesMapper(matcherType) {\n    var type = matcherTypes[matcherType];\n    if (type)\n        return type;\n    else\n        return matcherTypes.UNDEFINED;\n}\n","/**\n * Extract segment name as a plain string.\n */\nexport function segmentTransform(segment) {\n    return segment ? segment.segmentName : undefined;\n}\n","import { _Set } from '../../utils/lang/sets';\n/**\n * Extract whitelist as a set. Used by 'WHITELIST' matcher.\n */\nexport function whitelistTransform(whitelistObject) {\n    return new _Set(whitelistObject.whitelist);\n}\n","/**\n * Extract whitelist array. Used by set and string matchers\n */\nexport function setTransform(whitelistObject) {\n    return whitelistObject.whitelist;\n}\n","/**\n * Extract value from unary matcher data.\n */\nexport function numericTransform(unaryNumericObject) {\n    return unaryNumericObject.value;\n}\n","export function zeroSinceHH(millisSinceEpoch) {\n    return new Date(millisSinceEpoch).setUTCHours(0, 0, 0, 0);\n}\nexport function zeroSinceSS(millisSinceEpoch) {\n    return new Date(millisSinceEpoch).setUTCSeconds(0, 0);\n}\n","import { findIndex } from '../../utils/lang';\nvar Treatments = /** @class */ (function () {\n    function Treatments(ranges, treatments) {\n        if (ranges[ranges.length - 1] !== 100) {\n            throw new RangeError('Provided invalid dataset as input');\n        }\n        this._ranges = ranges;\n        this._treatments = treatments;\n    }\n    Treatments.parse = function (data) {\n        var _a = data.reduce(function (accum, value) {\n            var size = value.size, treatment = value.treatment;\n            accum.ranges.push(accum.inc += size);\n            accum.treatments.push(treatment);\n            return accum;\n        }, {\n            inc: 0,\n            ranges: [],\n            treatments: []\n        }), ranges = _a.ranges, treatments = _a.treatments;\n        return new Treatments(ranges, treatments);\n    };\n    Treatments.prototype.getTreatmentFor = function (x) {\n        if (x < 0 || x > 100) {\n            throw new RangeError('Please provide a value between 0 and 100');\n        }\n        // Readme [1]\n        // We need to manually add any dependency which escape of dummy resolution\n        // I'll deal with this in a future release\n        // for (let [k, r] of this._ranges.entries()) {\n        //   if (x <= r) return this._treatments[k];\n        // }\n        var index = findIndex(this._ranges, function (range) { return x <= range; });\n        var treatment = this._treatments[index];\n        return treatment;\n    };\n    return Treatments;\n}());\nexport { Treatments };\n","import { allMatcherContext } from './all';\nimport { segmentMatcherContext } from './segment';\nimport { whitelistMatcherContext } from './whitelist';\nimport { equalToMatcherContext } from './eq';\nimport { greaterThanEqualMatcherContext } from './gte';\nimport { lessThanEqualMatcherContext } from './lte';\nimport { betweenMatcherContext } from './between';\nimport { equalToSetMatcherContext } from './eq_set';\nimport { containsAnySetMatcherContext } from './cont_any';\nimport { containsAllSetMatcherContext } from './cont_all';\nimport { partOfSetMatcherContext } from './part_of';\nimport { endsWithMatcherContext } from './ew';\nimport { startsWithMatcherContext } from './sw';\nimport { containsStringMatcherContext } from './cont_str';\nimport { dependencyMatcherContext } from './dependency';\nimport { booleanMatcherContext } from './boolean';\nimport { stringMatcherContext } from './string';\nvar matchers = [\n    undefined,\n    allMatcherContext,\n    segmentMatcherContext,\n    whitelistMatcherContext,\n    equalToMatcherContext,\n    greaterThanEqualMatcherContext,\n    lessThanEqualMatcherContext,\n    betweenMatcherContext,\n    equalToSetMatcherContext,\n    containsAnySetMatcherContext,\n    containsAllSetMatcherContext,\n    partOfSetMatcherContext,\n    endsWithMatcherContext,\n    startsWithMatcherContext,\n    containsStringMatcherContext,\n    dependencyMatcherContext,\n    booleanMatcherContext,\n    stringMatcherContext // MATCHES_STRING: 17\n];\n/**\n * Matcher factory.\n */\nexport function matcherFactory(log, matcherDto, storage) {\n    var type = matcherDto.type, value = matcherDto.value;\n    var matcherFn;\n    // @ts-ignore\n    if (matchers[type])\n        matcherFn = matchers[type](log, value, storage); // There is no index-out-of-bound exception in JavaScript\n    return matcherFn;\n}\n","import { ENGINE_MATCHER_ALL } from '../../logger/constants';\nexport function allMatcherContext(log) {\n    return function allMatcher(runtimeAttr) {\n        log.debug(ENGINE_MATCHER_ALL);\n        return runtimeAttr != null;\n    };\n}\n","import { thenable } from '../../utils/promise/thenable';\nimport { ENGINE_MATCHER_SEGMENT } from '../../logger/constants';\nexport function segmentMatcherContext(log, segmentName, storage) {\n    return function segmentMatcher(key) {\n        var isInSegment = storage.segments.isInSegment(segmentName, key);\n        if (thenable(isInSegment)) {\n            isInSegment.then(function (result) {\n                log.debug(ENGINE_MATCHER_SEGMENT, [segmentName, key, isInSegment]);\n                return result;\n            });\n        }\n        else {\n            log.debug(ENGINE_MATCHER_SEGMENT, [segmentName, key, isInSegment]);\n        }\n        return isInSegment;\n    };\n}\n","import { setToArray } from '../../utils/lang/sets';\nimport { ENGINE_MATCHER_WHITELIST } from '../../logger/constants';\nexport function whitelistMatcherContext(log, ruleAttr) {\n    return function whitelistMatcher(runtimeAttr) {\n        var isInWhitelist = ruleAttr.has(runtimeAttr);\n        log.debug(ENGINE_MATCHER_WHITELIST, [runtimeAttr, setToArray(ruleAttr).join(','), isInWhitelist]);\n        return isInWhitelist;\n    };\n}\n","import { ENGINE_MATCHER_EQUAL } from '../../logger/constants';\nexport function equalToMatcherContext(log, ruleAttr) {\n    return function equalToMatcher(runtimeAttr) {\n        var isEqual = runtimeAttr === ruleAttr;\n        log.debug(ENGINE_MATCHER_EQUAL, [runtimeAttr, ruleAttr, isEqual]);\n        return isEqual;\n    };\n}\n","import { ENGINE_MATCHER_GREATER } from '../../logger/constants';\nexport function greaterThanEqualMatcherContext(log, ruleAttr) {\n    return function greaterThanEqualMatcher(runtimeAttr) {\n        var isGreaterEqualThan = runtimeAttr >= ruleAttr;\n        log.debug(ENGINE_MATCHER_GREATER, [runtimeAttr, ruleAttr, isGreaterEqualThan]);\n        return isGreaterEqualThan;\n    };\n}\n","import { ENGINE_MATCHER_LESS } from '../../logger/constants';\nexport function lessThanEqualMatcherContext(log, ruleAttr) {\n    return function lessThanEqualMatcher(runtimeAttr) {\n        var isLessEqualThan = runtimeAttr <= ruleAttr;\n        log.debug(ENGINE_MATCHER_LESS, [runtimeAttr, ruleAttr, isLessEqualThan]);\n        return isLessEqualThan;\n    };\n}\n","import { ENGINE_MATCHER_BETWEEN } from '../../logger/constants';\nexport function betweenMatcherContext(log, ruleVO) {\n    return function betweenMatcher(runtimeAttr) {\n        var isBetween = runtimeAttr >= ruleVO.start && runtimeAttr <= ruleVO.end;\n        log.debug(ENGINE_MATCHER_BETWEEN, [runtimeAttr, ruleVO.start, ruleVO.end, isBetween]);\n        return isBetween;\n    };\n}\n","import { ENGINE_MATCHER_EQUAL_TO_SET } from '../../logger/constants';\nimport { findIndex } from '../../utils/lang';\nexport function equalToSetMatcherContext(log, ruleAttr) {\n    return function equalToSetMatcher(runtimeAttr) {\n        // Length being the same is the first condition.\n        var isEqual = runtimeAttr.length === ruleAttr.length;\n        var _loop_1 = function (i) {\n            // if length is the same we check that all elements are present in the other collection.\n            if (findIndex(ruleAttr, function (e) { return e === runtimeAttr[i]; }) < 0)\n                isEqual = false;\n        };\n        for (var i = 0; i < runtimeAttr.length && isEqual; i++) {\n            _loop_1(i);\n        }\n        log.debug(ENGINE_MATCHER_EQUAL_TO_SET, [runtimeAttr, ruleAttr, isEqual]);\n        return isEqual;\n    };\n}\n","import { ENGINE_MATCHER_CONTAINS_ANY } from '../../logger/constants';\nimport { findIndex } from '../../utils/lang';\nexport function containsAnySetMatcherContext(log, ruleAttr) {\n    return function containsAnyMatcher(runtimeAttr) {\n        var containsAny = false;\n        var _loop_1 = function (i) {\n            if (findIndex(runtimeAttr, function (e) { return e === ruleAttr[i]; }) >= 0)\n                containsAny = true;\n        };\n        for (var i = 0; i < ruleAttr.length && !containsAny; i++) {\n            _loop_1(i);\n        }\n        log.debug(ENGINE_MATCHER_CONTAINS_ANY, [runtimeAttr, ruleAttr, containsAny]);\n        return containsAny;\n    };\n}\n","import { ENGINE_MATCHER_CONTAINS_ALL } from '../../logger/constants';\nimport { findIndex } from '../../utils/lang';\nexport function containsAllSetMatcherContext(log, ruleAttr) {\n    return function containsAllMatcher(runtimeAttr) {\n        var containsAll = true;\n        if (runtimeAttr.length < ruleAttr.length) {\n            containsAll = false;\n        }\n        else {\n            var _loop_1 = function (i) {\n                if (findIndex(runtimeAttr, function (e) { return e === ruleAttr[i]; }) < 0)\n                    containsAll = false;\n            };\n            for (var i = 0; i < ruleAttr.length && containsAll; i++) {\n                _loop_1(i);\n            }\n        }\n        log.debug(ENGINE_MATCHER_CONTAINS_ALL, [runtimeAttr, ruleAttr, containsAll]);\n        return containsAll;\n    };\n}\n","import { findIndex } from '../../utils/lang';\nimport { ENGINE_MATCHER_PART_OF } from '../../logger/constants';\nexport function partOfSetMatcherContext(log, ruleAttr) {\n    return function partOfMatcher(runtimeAttr) {\n        // To be part of the length should be minor or equal.\n        var isPartOf = runtimeAttr.length <= ruleAttr.length;\n        var _loop_1 = function (i) {\n            // If the length says is possible, we iterate until we prove otherwise or we check all elements.\n            if (findIndex(ruleAttr, function (e) { return e === runtimeAttr[i]; }) < 0)\n                isPartOf = false;\n        };\n        for (var i = 0; i < runtimeAttr.length && isPartOf; i++) {\n            _loop_1(i);\n        }\n        log.debug(ENGINE_MATCHER_PART_OF, [runtimeAttr, ruleAttr, isPartOf]);\n        return isPartOf;\n    };\n}\n","import { ENGINE_MATCHER_ENDS_WITH } from '../../logger/constants';\nimport { endsWith } from '../../utils/lang';\nexport function endsWithMatcherContext(log, ruleAttr) {\n    return function endsWithMatcher(runtimeAttr) {\n        var strEndsWith = ruleAttr.some(function (e) { return endsWith(runtimeAttr, e); });\n        log.debug(ENGINE_MATCHER_ENDS_WITH, [runtimeAttr, ruleAttr, strEndsWith]);\n        return strEndsWith;\n    };\n}\n","import { ENGINE_MATCHER_STARTS_WITH } from '../../logger/constants';\nimport { startsWith } from '../../utils/lang';\nexport function startsWithMatcherContext(log, ruleAttr) {\n    return function startsWithMatcher(runtimeAttr) {\n        var matches = ruleAttr.some(function (e) { return startsWith(runtimeAttr, e); });\n        log.debug(ENGINE_MATCHER_STARTS_WITH, [runtimeAttr, ruleAttr, matches]);\n        return matches;\n    };\n}\n","import { isString } from '../../utils/lang';\nimport { ENGINE_MATCHER_CONTAINS_STRING } from '../../logger/constants';\nexport function containsStringMatcherContext(log, ruleAttr) {\n    return function containsStringMatcher(runtimeAttr) {\n        var contains = ruleAttr.some(function (e) { return isString(runtimeAttr) && runtimeAttr.indexOf(e) > -1; });\n        log.debug(ENGINE_MATCHER_CONTAINS_STRING, [runtimeAttr, ruleAttr, contains]);\n        return contains;\n    };\n}\n","import { thenable } from '../../utils/promise/thenable';\nimport { ENGINE_MATCHER_DEPENDENCY, ENGINE_MATCHER_DEPENDENCY_PRE } from '../../logger/constants';\nexport function dependencyMatcherContext(log, _a, storage) {\n    var split = _a.split, treatments = _a.treatments;\n    function checkTreatment(evaluation, acceptableTreatments, parentName) {\n        var matches = false;\n        if (Array.isArray(acceptableTreatments)) {\n            matches = acceptableTreatments.indexOf(evaluation.treatment) !== -1;\n        }\n        log.debug(ENGINE_MATCHER_DEPENDENCY, [parentName, evaluation.treatment, evaluation.label, parentName, acceptableTreatments, matches]);\n        return matches;\n    }\n    return function dependencyMatcher(_a, splitEvaluator) {\n        var key = _a.key, attributes = _a.attributes;\n        log.debug(ENGINE_MATCHER_DEPENDENCY_PRE, [split, JSON.stringify(key), attributes ? '\\n attributes: ' + JSON.stringify(attributes) : '']);\n        var evaluation = splitEvaluator(log, key, split, attributes, storage);\n        if (thenable(evaluation)) {\n            return evaluation.then(function (ev) { return checkTreatment(ev, treatments, split); });\n        }\n        else {\n            return checkTreatment(evaluation, treatments, split);\n        }\n    };\n}\n","import { ENGINE_MATCHER_BOOLEAN } from '../../logger/constants';\nexport function booleanMatcherContext(log, ruleAttr) {\n    return function booleanMatcher(runtimeAttr) {\n        var booleanMatches = ruleAttr === runtimeAttr;\n        log.debug(ENGINE_MATCHER_BOOLEAN, [ruleAttr, runtimeAttr]);\n        return booleanMatches;\n    };\n}\n","import { ENGINE_MATCHER_STRING_INVALID, ENGINE_MATCHER_STRING } from '../../logger/constants';\nexport function stringMatcherContext(log, ruleAttr) {\n    return function stringMatcher(runtimeAttr) {\n        var re;\n        try {\n            re = new RegExp(ruleAttr);\n        }\n        catch (e) {\n            log.debug(ENGINE_MATCHER_STRING_INVALID, [ruleAttr]);\n            return false;\n        }\n        var regexMatches = re.test(runtimeAttr);\n        log.debug(ENGINE_MATCHER_STRING, [runtimeAttr, ruleAttr, regexMatches ? 'yes' : 'no']);\n        return regexMatches;\n    };\n}\n","import { sanitize } from './sanitize';\nimport { ENGINE_VALUE, ENGINE_VALUE_NO_ATTRIBUTES, ENGINE_VALUE_INVALID } from '../../logger/constants';\nfunction parseValue(log, key, attributeName, attributes) {\n    var value = undefined;\n    if (attributeName) {\n        if (attributes) {\n            value = attributes[attributeName];\n            log.debug(ENGINE_VALUE, [attributeName, value]);\n        }\n        else {\n            log.warn(ENGINE_VALUE_NO_ATTRIBUTES, [attributeName]);\n        }\n    }\n    else {\n        value = key;\n    }\n    return value;\n}\n/**\n * Defines value to be matched (key / attribute).\n */\nexport function sanitizeValue(log, key, matcherDto, attributes) {\n    var attributeName = matcherDto.attribute;\n    var valueToMatch = parseValue(log, key, attributeName, attributes);\n    var sanitizedValue = sanitize(log, matcherDto.type, valueToMatch, matcherDto.dataType, attributes);\n    if (sanitizedValue !== undefined) {\n        return sanitizedValue;\n    }\n    else {\n        log.warn(ENGINE_VALUE_INVALID, [valueToMatch + (attributeName ? ' for attribute ' + attributeName : '')]);\n        return;\n    }\n}\n","import { isObject, uniq, toString, toNumber } from '../../utils/lang';\nimport { zeroSinceHH, zeroSinceSS } from '../convertions';\nimport { matcherTypes, matcherDataTypes } from '../matchers/matcherTypes';\nimport { ENGINE_SANITIZE } from '../../logger/constants';\nfunction sanitizeNumber(val) {\n    var num = toNumber(val);\n    return isNaN(num) ? undefined : num;\n}\nfunction sanitizeString(val) {\n    var valueToSanitize = val;\n    if (isObject(val)) {\n        // If the value is an object and is not a key, discard it.\n        valueToSanitize = val.matchingKey ? val.matchingKey : undefined;\n    }\n    var str = toString(valueToSanitize);\n    return str ? str : undefined;\n}\nfunction sanitizeArray(val) {\n    var arr = Array.isArray(val) ? uniq(val.map(function (e) { return e + ''; })) : [];\n    return arr.length ? arr : undefined;\n}\nfunction sanitizeBoolean(val) {\n    if (val === true || val === false)\n        return val;\n    if (typeof val === 'string') {\n        var lowerCaseValue = val.toLocaleLowerCase();\n        if (lowerCaseValue === 'true')\n            return true;\n        if (lowerCaseValue === 'false')\n            return false;\n    }\n    return undefined;\n}\nfunction dependencyProcessor(sanitizedValue, attributes) {\n    return {\n        key: sanitizedValue,\n        attributes: attributes\n    };\n}\n/**\n * We can define a pre-processing for the value, to be executed prior to matcher evaluation.\n */\nfunction getProcessingFunction(matcherTypeID, dataType) {\n    switch (matcherTypeID) {\n        case matcherTypes.EQUAL_TO:\n            return dataType === 'DATETIME' ? zeroSinceHH : undefined;\n        case matcherTypes.GREATER_THAN_OR_EQUAL_TO:\n        case matcherTypes.LESS_THAN_OR_EQUAL_TO:\n        case matcherTypes.BETWEEN:\n            return dataType === 'DATETIME' ? zeroSinceSS : undefined;\n        case matcherTypes.IN_SPLIT_TREATMENT:\n            return dependencyProcessor;\n        default:\n            return undefined;\n    }\n}\n/**\n * Sanitize matcher value\n */\nexport function sanitize(log, matcherTypeID, value, dataType, attributes) {\n    var processor = getProcessingFunction(matcherTypeID, dataType);\n    var sanitizedValue;\n    switch (dataType) {\n        case matcherDataTypes.NUMBER:\n        case matcherDataTypes.DATETIME:\n            sanitizedValue = sanitizeNumber(value);\n            break;\n        case matcherDataTypes.STRING:\n            sanitizedValue = sanitizeString(value);\n            break;\n        case matcherDataTypes.SET:\n            sanitizedValue = sanitizeArray(value);\n            break;\n        case matcherDataTypes.BOOLEAN:\n            sanitizedValue = sanitizeBoolean(value);\n            break;\n        case matcherDataTypes.NOT_SPECIFIED:\n            sanitizedValue = value;\n            break;\n        default:\n            sanitizedValue = undefined;\n    }\n    if (processor) {\n        // @ts-ignore\n        sanitizedValue = processor(sanitizedValue, attributes);\n    }\n    log.debug(ENGINE_SANITIZE, [value, dataType, sanitizedValue instanceof Object ? JSON.stringify(sanitizedValue) : sanitizedValue]);\n    return sanitizedValue;\n}\n","import { getTreatment, shouldApplyRollout } from './engineUtils';\nimport { thenable } from '../../utils/promise/thenable';\nimport * as LabelsConstants from '../../utils/labels';\n// Build Evaluation object if and only if matchingResult is true\nfunction match(log, matchingResult, bucketingKey, seed, treatments, label) {\n    if (matchingResult) {\n        var treatment = getTreatment(log, bucketingKey, seed, treatments);\n        return {\n            treatment: treatment,\n            label: label\n        };\n    }\n    // else we should notify the engine to continue evaluating\n    return undefined;\n}\n// Condition factory\nexport function conditionContext(log, matcherEvaluator, treatments, label, conditionType) {\n    return function conditionEvaluator(key, seed, trafficAllocation, trafficAllocationSeed, attributes, splitEvaluator) {\n        // Whitelisting has more priority than traffic allocation, so we don't apply this filtering to those conditions.\n        if (conditionType === 'ROLLOUT' && !shouldApplyRollout(trafficAllocation, key.bucketingKey, trafficAllocationSeed)) {\n            return {\n                treatment: undefined,\n                label: LabelsConstants.NOT_IN_SPLIT\n            };\n        }\n        // matcherEvaluator could be Async, this relays on matchers return value, so we need\n        // to verify for thenable before play with the result.\n        // Also, we pass splitEvaluator function in case we have a matcher that needs to evaluate another split,\n        // as well as the entire key object for the same reason.\n        var matches = matcherEvaluator(key, attributes, splitEvaluator);\n        if (thenable(matches)) {\n            return matches.then(function (result) { return match(log, result, key.bucketingKey, seed, treatments, label); });\n        }\n        return match(log, matches, key.bucketingKey, seed, treatments, label);\n    };\n}\n","import { ENGINE_BUCKET } from '../../logger/constants';\nimport { bucket } from '../../utils/murmur3/murmur3';\n/**\n * Get the treatment name given a key, a seed, and the percentage of each treatment.\n */\nexport function getTreatment(log, key, seed, treatments) {\n    var _bucket = bucket(key, seed);\n    var treatment = treatments.getTreatmentFor(_bucket);\n    log.debug(ENGINE_BUCKET, [_bucket, key, seed, treatment]);\n    return treatment;\n}\n/**\n * Evaluates the traffic allocation to see if we should apply rollout conditions or not.\n */\nexport function shouldApplyRollout(trafficAllocation, key, trafficAllocationSeed) {\n    // For rollout, if traffic allocation for splits is 100%, we don't need to filter it because everything should evaluate the rollout.\n    if (trafficAllocation < 100) {\n        var _bucket = bucket(key, trafficAllocationSeed);\n        if (_bucket > trafficAllocation) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { findIndex } from '../../utils/lang';\nimport { thenable } from '../../utils/promise/thenable';\nimport * as LabelsConstants from '../../utils/labels';\nimport { CONTROL } from '../../utils/constants';\nimport { ENGINE_COMBINER_IFELSEIF, ENGINE_COMBINER_IFELSEIF_NO_TREATMENT, ERROR_ENGINE_COMBINER_IFELSEIF } from '../../logger/constants';\nexport function ifElseIfCombinerContext(log, predicates) {\n    function unexpectedInputHandler() {\n        log.error(ERROR_ENGINE_COMBINER_IFELSEIF);\n        return {\n            treatment: CONTROL,\n            label: LabelsConstants.EXCEPTION\n        };\n    }\n    function computeTreatment(predicateResults) {\n        var len = predicateResults.length;\n        for (var i = 0; i < len; i++) {\n            var evaluation = predicateResults[i];\n            if (evaluation !== undefined) {\n                log.debug(ENGINE_COMBINER_IFELSEIF, [evaluation.treatment]);\n                return evaluation;\n            }\n        }\n        log.debug(ENGINE_COMBINER_IFELSEIF_NO_TREATMENT);\n        return undefined;\n    }\n    function ifElseIfCombiner(key, seed, trafficAllocation, trafficAllocationSeed, attributes, splitEvaluator) {\n        // In Async environments we are going to have async predicates. There is none way to know\n        // before hand so we need to evaluate all the predicates, verify for thenables, and finally,\n        // define how to return the treatment (wrap result into a Promise or not).\n        var predicateResults = predicates.map(function (evaluator) { return evaluator(key, seed, trafficAllocation, trafficAllocationSeed, attributes, splitEvaluator); });\n        // if we find a thenable\n        if (findIndex(predicateResults, thenable) !== -1) {\n            return Promise.all(predicateResults).then(function (results) { return computeTreatment(results); });\n        }\n        return computeTreatment(predicateResults);\n    }\n    // if there is none predicates, then there was an error in parsing phase\n    if (!Array.isArray(predicates) || Array.isArray(predicates) && predicates.length === 0) {\n        return unexpectedInputHandler;\n    }\n    else {\n        return ifElseIfCombiner;\n    }\n}\n","import { findIndex } from '../../utils/lang';\nimport { thenable } from '../../utils/promise/thenable';\nimport { ENGINE_COMBINER_AND } from '../../logger/constants';\nexport function andCombinerContext(log, matchers) {\n    function andResults(results) {\n        // Array.prototype.every is supported by target environments\n        var hasMatchedAll = results.every(function (value) { return value; });\n        log.debug(ENGINE_COMBINER_AND, [hasMatchedAll]);\n        return hasMatchedAll;\n    }\n    return function andCombiner() {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        var matcherResults = matchers.map(function (matcher) { return matcher.apply(void 0, params); });\n        // If any matching result is a thenable we should use Promise.all\n        if (findIndex(matcherResults, thenable) !== -1) {\n            return Promise.all(matcherResults).then(andResults);\n        }\n        else {\n            return andResults(matcherResults);\n        }\n    };\n}\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { validateAttributes, validateEvent, validateEventValue, validateEventProperties, validateKey, validateSplit, validateSplits, validateTrafficType, validateIfNotDestroyed, validateIfOperational } from '../utils/inputValidation';\nimport { startsWith } from '../utils/lang';\nimport { CONTROL, CONTROL_WITH_CONFIG, GET_TREATMENT, GET_TREATMENTS, GET_TREATMENTS_BY_FLAG_SET, GET_TREATMENTS_BY_FLAG_SETS, GET_TREATMENTS_WITH_CONFIG, GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SET, GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SETS, GET_TREATMENT_WITH_CONFIG, TRACK_FN_LABEL } from '../utils/constants';\nimport { isConsumerMode } from '../utils/settingsValidation/mode';\nimport { validateFlagSets } from '../utils/settingsValidation/splitFilters';\n/**\n * Decorator that validates the input before actually executing the client methods.\n * We should \"guard\" the client here, while not polluting the \"real\" implementation of those methods.\n */\nexport function clientInputValidationDecorator(settings, client, readinessManager) {\n    var log = settings.log, mode = settings.mode;\n    var isAsync = isConsumerMode(mode);\n    /**\n     * Avoid repeating this validations code\n     */\n    function validateEvaluationParams(maybeKey, maybeFeatureFlagNameOrNames, maybeAttributes, methodName, maybeFlagSetNameOrNames) {\n        var multi = startsWith(methodName, GET_TREATMENTS);\n        var key = validateKey(log, maybeKey, methodName);\n        var splitOrSplits = false;\n        var flagSetOrFlagSets = [];\n        if (maybeFeatureFlagNameOrNames) {\n            splitOrSplits = multi ? validateSplits(log, maybeFeatureFlagNameOrNames, methodName) : validateSplit(log, maybeFeatureFlagNameOrNames, methodName);\n        }\n        var attributes = validateAttributes(log, maybeAttributes, methodName);\n        var isNotDestroyed = validateIfNotDestroyed(log, readinessManager, methodName);\n        if (maybeFlagSetNameOrNames) {\n            flagSetOrFlagSets = validateFlagSets(log, methodName, maybeFlagSetNameOrNames, settings.sync.__splitFiltersValidation.groupedFilters.bySet);\n        }\n        validateIfOperational(log, readinessManager, methodName, splitOrSplits);\n        var valid = isNotDestroyed && key && (splitOrSplits || flagSetOrFlagSets.length > 0) && attributes !== false;\n        return {\n            valid: valid,\n            key: key,\n            splitOrSplits: splitOrSplits,\n            flagSetOrFlagSets: flagSetOrFlagSets,\n            attributes: attributes\n        };\n    }\n    function wrapResult(value) {\n        return isAsync ? Promise.resolve(value) : value;\n    }\n    function getTreatment(maybeKey, maybeFeatureFlagName, maybeAttributes) {\n        var params = validateEvaluationParams(maybeKey, maybeFeatureFlagName, maybeAttributes, GET_TREATMENT);\n        if (params.valid) {\n            return client.getTreatment(params.key, params.splitOrSplits, params.attributes);\n        }\n        else {\n            return wrapResult(CONTROL);\n        }\n    }\n    function getTreatmentWithConfig(maybeKey, maybeFeatureFlagName, maybeAttributes) {\n        var params = validateEvaluationParams(maybeKey, maybeFeatureFlagName, maybeAttributes, GET_TREATMENT_WITH_CONFIG);\n        if (params.valid) {\n            return client.getTreatmentWithConfig(params.key, params.splitOrSplits, params.attributes);\n        }\n        else {\n            return wrapResult(objectAssign({}, CONTROL_WITH_CONFIG));\n        }\n    }\n    function getTreatments(maybeKey, maybeFeatureFlagNames, maybeAttributes) {\n        var params = validateEvaluationParams(maybeKey, maybeFeatureFlagNames, maybeAttributes, GET_TREATMENTS);\n        if (params.valid) {\n            return client.getTreatments(params.key, params.splitOrSplits, params.attributes);\n        }\n        else {\n            var res_1 = {};\n            if (params.splitOrSplits)\n                params.splitOrSplits.forEach(function (split) { return res_1[split] = CONTROL; });\n            return wrapResult(res_1);\n        }\n    }\n    function getTreatmentsWithConfig(maybeKey, maybeFeatureFlagNames, maybeAttributes) {\n        var params = validateEvaluationParams(maybeKey, maybeFeatureFlagNames, maybeAttributes, GET_TREATMENTS_WITH_CONFIG);\n        if (params.valid) {\n            return client.getTreatmentsWithConfig(params.key, params.splitOrSplits, params.attributes);\n        }\n        else {\n            var res_2 = {};\n            if (params.splitOrSplits)\n                params.splitOrSplits.forEach(function (split) { return res_2[split] = objectAssign({}, CONTROL_WITH_CONFIG); });\n            return wrapResult(res_2);\n        }\n    }\n    function getTreatmentsByFlagSets(maybeKey, maybeFlagSets, maybeAttributes) {\n        var params = validateEvaluationParams(maybeKey, undefined, maybeAttributes, GET_TREATMENTS_BY_FLAG_SETS, maybeFlagSets);\n        if (params.valid) {\n            return client.getTreatmentsByFlagSets(params.key, params.flagSetOrFlagSets, params.attributes);\n        }\n        else {\n            return wrapResult({});\n        }\n    }\n    function getTreatmentsWithConfigByFlagSets(maybeKey, maybeFlagSets, maybeAttributes) {\n        var params = validateEvaluationParams(maybeKey, undefined, maybeAttributes, GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SETS, maybeFlagSets);\n        if (params.valid) {\n            return client.getTreatmentsWithConfigByFlagSets(params.key, params.flagSetOrFlagSets, params.attributes);\n        }\n        else {\n            return wrapResult({});\n        }\n    }\n    function getTreatmentsByFlagSet(maybeKey, maybeFlagSet, maybeAttributes) {\n        var params = validateEvaluationParams(maybeKey, undefined, maybeAttributes, GET_TREATMENTS_BY_FLAG_SET, [maybeFlagSet]);\n        if (params.valid) {\n            return client.getTreatmentsByFlagSet(params.key, params.flagSetOrFlagSets[0], params.attributes);\n        }\n        else {\n            return wrapResult({});\n        }\n    }\n    function getTreatmentsWithConfigByFlagSet(maybeKey, maybeFlagSet, maybeAttributes) {\n        var params = validateEvaluationParams(maybeKey, undefined, maybeAttributes, GET_TREATMENTS_WITH_CONFIG_BY_FLAG_SET, [maybeFlagSet]);\n        if (params.valid) {\n            return client.getTreatmentsWithConfigByFlagSet(params.key, params.flagSetOrFlagSets[0], params.attributes);\n        }\n        else {\n            return wrapResult({});\n        }\n    }\n    function track(maybeKey, maybeTT, maybeEvent, maybeEventValue, maybeProperties) {\n        var key = validateKey(log, maybeKey, TRACK_FN_LABEL);\n        var tt = validateTrafficType(log, maybeTT, TRACK_FN_LABEL);\n        var event = validateEvent(log, maybeEvent, TRACK_FN_LABEL);\n        var eventValue = validateEventValue(log, maybeEventValue, TRACK_FN_LABEL);\n        var _a = validateEventProperties(log, maybeProperties, TRACK_FN_LABEL), properties = _a.properties, size = _a.size;\n        var isNotDestroyed = validateIfNotDestroyed(log, readinessManager, TRACK_FN_LABEL);\n        if (isNotDestroyed && key && tt && event && eventValue !== false && properties !== false) { // @ts-expect-error\n            return client.track(key, tt, event, eventValue, properties, size);\n        }\n        else {\n            return isAsync ? Promise.resolve(false) : false;\n        }\n    }\n    return {\n        getTreatment: getTreatment,\n        getTreatmentWithConfig: getTreatmentWithConfig,\n        getTreatments: getTreatments,\n        getTreatmentsWithConfig: getTreatmentsWithConfig,\n        getTreatmentsByFlagSets: getTreatmentsByFlagSets,\n        getTreatmentsWithConfigByFlagSets: getTreatmentsWithConfigByFlagSets,\n        getTreatmentsByFlagSet: getTreatmentsByFlagSet,\n        getTreatmentsWithConfigByFlagSet: getTreatmentsWithConfigByFlagSet,\n        track: track\n    };\n}\n","import { fromImpressionsCollector } from '../sync/submitters/impressionsSubmitter';\nimport { fromImpressionCountsCollector } from '../sync/submitters/impressionCountsSubmitter';\nimport { OPTIMIZED, DEBUG, NONE } from '../utils/constants';\nimport { objectAssign } from '../utils/lang/objectAssign';\nimport { CLEANUP_REGISTERING, CLEANUP_DEREGISTERING } from '../logger/constants';\nimport { isConsentGranted } from '../consent';\nvar VISIBILITYCHANGE_EVENT = 'visibilitychange';\nvar PAGEHIDE_EVENT = 'pagehide';\nvar EVENT_NAME = 'for visibilitychange and pagehide events.';\n/**\n * We'll listen for events over the window object.\n */\nvar BrowserSignalListener = /** @class */ (function () {\n    function BrowserSignalListener(syncManager, settings, storage, serviceApi) {\n        this.syncManager = syncManager;\n        this.settings = settings;\n        this.storage = storage;\n        this.serviceApi = serviceApi;\n        this.flushData = this.flushData.bind(this);\n        this.flushDataIfHidden = this.flushDataIfHidden.bind(this);\n        this.fromImpressionsCollector = fromImpressionsCollector.bind(undefined, settings.core.labelsEnabled);\n    }\n    /**\n     * start method.\n     * Called when SplitFactory is initialized, it adds event listeners to close streaming and flush impressions and events.\n     */\n    BrowserSignalListener.prototype.start = function () {\n        this.settings.log.debug(CLEANUP_REGISTERING, [EVENT_NAME]);\n        if (typeof document !== 'undefined' && document.addEventListener) {\n            // Flush data whenever the page is hidden or unloaded.\n            document.addEventListener(VISIBILITYCHANGE_EVENT, this.flushDataIfHidden);\n        }\n        if (typeof window !== 'undefined' && window.addEventListener) {\n            // Some browsers, like Safari, does not fire the `visibilitychange` event when the page is being unloaded. Therefore, we also flush data in the `pagehide` event.\n            // If both events are triggered, the latter will find the storage empty, so no duplicate data will be submitted.\n            window.addEventListener(PAGEHIDE_EVENT, this.flushData);\n        }\n    };\n    /**\n     * stop method.\n     * Called when client is destroyed, it removes event listeners.\n     */\n    BrowserSignalListener.prototype.stop = function () {\n        this.settings.log.debug(CLEANUP_DEREGISTERING, [EVENT_NAME]);\n        if (typeof document !== 'undefined' && document.removeEventListener) {\n            document.removeEventListener(VISIBILITYCHANGE_EVENT, this.flushDataIfHidden);\n        }\n        if (typeof window !== 'undefined' && window.removeEventListener) {\n            window.removeEventListener(PAGEHIDE_EVENT, this.flushData);\n        }\n    };\n    /**\n     * flushData method.\n     * Called when pagehide event is triggered. It flushed remaining impressions and events to the backend,\n     * using beacon API if possible, or falling back to regular post transport.\n     */\n    BrowserSignalListener.prototype.flushData = function () {\n        if (!this.syncManager)\n            return; // In consumer mode there is not sync manager and data to flush\n        var _a = this.settings.urls, events = _a.events, telemetry = _a.telemetry;\n        // Flush impressions & events data if there is user consent\n        if (isConsentGranted(this.settings)) {\n            var sim = this.settings.sync.impressionsMode;\n            var extraMetadata = {\n                // sim stands for Sync/Split Impressions Mode\n                sim: sim === OPTIMIZED ? OPTIMIZED : sim === DEBUG ? DEBUG : NONE\n            };\n            this._flushData(events + '/testImpressions/beacon', this.storage.impressions, this.serviceApi.postTestImpressionsBulk, this.fromImpressionsCollector, extraMetadata);\n            this._flushData(events + '/events/beacon', this.storage.events, this.serviceApi.postEventsBulk);\n            if (this.storage.impressionCounts)\n                this._flushData(events + '/testImpressions/count/beacon', this.storage.impressionCounts, this.serviceApi.postTestImpressionsCount, fromImpressionCountsCollector);\n            // @ts-ignore\n            if (this.storage.uniqueKeys)\n                this._flushData(telemetry + '/v1/keys/cs/beacon', this.storage.uniqueKeys, this.serviceApi.postUniqueKeysBulkCs);\n        }\n        // Flush telemetry data\n        if (this.storage.telemetry)\n            this._flushData(telemetry + '/v1/metrics/usage/beacon', this.storage.telemetry, this.serviceApi.postMetricsUsage);\n    };\n    BrowserSignalListener.prototype.flushDataIfHidden = function () {\n        // Precondition: document defined\n        if (document.visibilityState === 'hidden')\n            this.flushData(); // On a 'visibilitychange' event, flush data if state is hidden\n    };\n    BrowserSignalListener.prototype._flushData = function (url, cache, postService, fromCacheToPayload, extraMetadata) {\n        // if there is data in cache, send it to backend\n        if (!cache.isEmpty()) {\n            var dataPayload = fromCacheToPayload ? fromCacheToPayload(cache.pop()) : cache.pop();\n            if (!this._sendBeacon(url, dataPayload, extraMetadata)) {\n                postService(JSON.stringify(dataPayload)).catch(function () { }); // no-op to handle possible promise rejection\n            }\n        }\n    };\n    /**\n     * _sendBeacon method.\n     * Util method that check if beacon API is available, build the payload and send it.\n     * Returns true if beacon API was used successfully, false otherwise.\n     */\n    BrowserSignalListener.prototype._sendBeacon = function (url, data, extraMetadata) {\n        // eslint-disable-next-line compat/compat\n        if (typeof navigator !== 'undefined' && navigator.sendBeacon) {\n            var json = {\n                entries: data,\n                token: this.settings.core.authorizationKey,\n                sdk: this.settings.version\n            };\n            // Extend with endpoint specific metadata where needed\n            if (extraMetadata)\n                objectAssign(json, extraMetadata);\n            // Stringify the payload\n            var payload = JSON.stringify(json);\n            // https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n            try { // eslint-disable-next-line compat/compat\n                return navigator.sendBeacon(url, payload);\n            }\n            catch (e) {\n                return false;\n            }\n        }\n        return false;\n    };\n    return BrowserSignalListener;\n}());\nexport { BrowserSignalListener };\n","import { ImpressionObserver } from './ImpressionObserver';\nimport { hash } from '../../utils/murmur3/murmur3';\nimport { buildKey } from './buildKey';\nexport function hashImpression32(impression) {\n    return hash(buildKey(impression));\n}\nvar LAST_SEEN_CACHE_SIZE = 500; // cache up to 500 impression hashes\nexport function impressionObserverCSFactory() {\n    return new ImpressionObserver(LAST_SEEN_CACHE_SIZE, hashImpression32);\n}\n","import { LRUCache } from '../../utils/LRUCache';\nvar ImpressionObserver = /** @class */ (function () {\n    function ImpressionObserver(size, hasher) {\n        this.cache = new LRUCache(size);\n        this.hasher = hasher;\n    }\n    ImpressionObserver.prototype.testAndSet = function (impression) {\n        var hash = this.hasher(impression);\n        var previous = this.cache.get(hash);\n        this.cache.set(hash, impression.time);\n        return previous;\n    };\n    return ImpressionObserver;\n}());\nexport { ImpressionObserver };\n","import { _Map } from '../lang/maps';\nimport { LinkedList, Node } from './LinkedList';\nvar LRUCache = /** @class */ (function () {\n    function LRUCache(maxSize) {\n        this.maxLen = maxSize || 1;\n        this.items = new _Map();\n        this.lru = new LinkedList();\n    }\n    LRUCache.prototype.get = function (key) {\n        var node = this.items.get(key);\n        if (!node || !(node instanceof Node))\n            return;\n        this.lru.unshiftNode(node); // Move to front\n        return node.value.value;\n    };\n    LRUCache.prototype.set = function (key, value) {\n        var node = this.items.get(key);\n        if (node) {\n            if (!(node instanceof Node))\n                return false;\n            this.lru.unshiftNode(node); // Move to front\n            this.lru.head.value.value = value; // Update value\n        }\n        else {\n            if (this.lru.length === this.maxLen) { // Remove last\n                var last = this.lru.tail;\n                if (!last)\n                    return false;\n                this.items.delete(last.value.key);\n                this.lru.removeNode(this.lru.tail); // Remove node\n            }\n            // @ts-ignore\n            this.lru.unshift({ key: key, value: value }); // Push front\n            this.items.set(key, this.lru.head);\n        }\n        return true;\n    };\n    return LRUCache;\n}());\nexport { LRUCache };\n","/* eslint-disable no-use-before-define */\n/**\n * yallist implementation based on isaacs/yallist (https://github.com/isaacs/yallist/yallist.js),\n * with the minimal features used by the SDK.\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n**/\nvar Node = /** @class */ (function () {\n    function Node(value, prev, next, list) {\n        this.list = list;\n        this.value = value;\n        if (prev) {\n            prev.next = this;\n            this.prev = prev;\n        }\n        else {\n            this.prev = null;\n        }\n        if (next) {\n            next.prev = this;\n            this.next = next;\n        }\n        else {\n            this.next = null;\n        }\n    }\n    return Node;\n}());\nexport { Node };\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this.tail = null;\n        this.head = null;\n        this.length = 0;\n    }\n    // removes the given node of `this` list and returns the next node.\n    LinkedList.prototype.removeNode = function (node) {\n        if (!node || !(node instanceof Node))\n            return;\n        if (node.list !== this) {\n            throw new Error('removing node which does not belong to this list');\n        }\n        var next = node.next;\n        var prev = node.prev;\n        if (next) {\n            next.prev = prev;\n        }\n        if (prev) {\n            prev.next = next;\n        }\n        if (node === this.head) {\n            this.head = next;\n        }\n        if (node === this.tail) {\n            this.tail = prev;\n        }\n        node.list.length--;\n        node.next = null;\n        node.prev = null;\n        node.list = null;\n        return next;\n    };\n    // Move a Node object to the front of the list. (That is, pull it out of wherever it lives, and make it the new head.)\n    // If the node belongs to a different list, then that list will remove it first.\n    LinkedList.prototype.unshiftNode = function (node) {\n        if (!node || !(node instanceof Node))\n            return;\n        if (node === this.head) {\n            return;\n        }\n        if (node.list) {\n            node.list.removeNode(node);\n        }\n        var head = this.head;\n        node.list = this;\n        node.next = head;\n        if (head) {\n            head.prev = node;\n        }\n        this.head = node;\n        if (!this.tail) {\n            this.tail = node;\n        }\n        this.length++;\n    };\n    // similar to Array.prototype.unshift, it adds one or more elements to the head of the list and returns the new length of the list.\n    LinkedList.prototype.unshift = function () {\n        for (var i = 0, l = arguments.length; i < l; i++) {\n            this.head = new Node(arguments[i], null, this.head, this);\n            if (!this.tail) {\n                this.tail = this.head;\n            }\n            this.length++;\n        }\n        return this.length;\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","export function buildKey(impression) {\n    return impression.keyName + \":\" + impression.feature + \":\" + impression.treatment + \":\" + impression.label + \":\" + impression.changeNumber;\n}\n","import { SPLIT_IMPRESSION, SPLIT_EVENT } from '../utils/constants';\n/**\n * Factory function for IntegrationsManager with pluggable integrations.\n * The integrations manager instantiates integration, and bypass tracked events and impressions to them.\n *\n * @param integrations validated list of integration factories\n * @param params information of the Sdk factory instance that integrations can access to\n *\n * @returns integration manager or undefined if `integrations` are not present in settings.\n */\nexport function pluggableIntegrationsManagerFactory(integrations, params) {\n    var listeners = [];\n    // No need to check if `settings.integrations` is an array of functions. It was already validated\n    integrations.forEach(function (integrationFactory) {\n        var integration = integrationFactory(params);\n        if (integration && integration.queue)\n            listeners.push(integration);\n    });\n    // If `listeners` is empty, not return a integration manager\n    if (listeners.length === 0)\n        return;\n    // Exception safe methods: each integration module is responsable for handling errors\n    return {\n        handleImpression: function (impressionData) {\n            listeners.forEach(function (listener) { return listener.queue({ type: SPLIT_IMPRESSION, payload: impressionData }); });\n        },\n        handleEvent: function (eventData) {\n            listeners.forEach(function (listener) { return listener.queue({ type: SPLIT_EVENT, payload: eventData }); });\n        }\n    };\n}\n","import { ERROR_NOT_BOOLEAN, USER_CONSENT_UPDATED, USER_CONSENT_NOT_UPDATED, USER_CONSENT_INITIAL } from '../logger/constants';\nimport { isConsentGranted } from './index';\nimport { CONSENT_GRANTED, CONSENT_DECLINED, CONSENT_UNKNOWN } from '../utils/constants';\nimport { isBoolean } from '../utils/lang';\n// User consent enum\nvar ConsentStatus = {\n    GRANTED: CONSENT_GRANTED,\n    DECLINED: CONSENT_DECLINED,\n    UNKNOWN: CONSENT_UNKNOWN,\n};\n/**\n * The public user consent API exposed via SplitFactory, used to control if the SDK tracks and sends impressions and events or not.\n */\nexport function createUserConsentAPI(params) {\n    var settings = params.settings, log = params.settings.log, syncManager = params.syncManager, _a = params.storage, events = _a.events, impressions = _a.impressions, impressionCounts = _a.impressionCounts;\n    if (!isConsentGranted(settings))\n        log.info(USER_CONSENT_INITIAL, [settings.userConsent]);\n    return {\n        setStatus: function (consent) {\n            var _a, _b;\n            // validate input param\n            if (!isBoolean(consent)) {\n                log.warn(ERROR_NOT_BOOLEAN, ['UserConsent.setStatus']);\n                return false;\n            }\n            var newConsentStatus = consent ? CONSENT_GRANTED : CONSENT_DECLINED;\n            if (settings.userConsent !== newConsentStatus) {\n                log.info(USER_CONSENT_UPDATED, [settings.userConsent, newConsentStatus]); // @ts-ignore, modify readonly prop\n                settings.userConsent = newConsentStatus;\n                if (consent) { // resumes submitters if transitioning to GRANTED\n                    (_a = syncManager === null || syncManager === void 0 ? void 0 : syncManager.submitterManager) === null || _a === void 0 ? void 0 : _a.start();\n                }\n                else { // pauses submitters (except telemetry), and drops tracked data if transitioning to DECLINED\n                    (_b = syncManager === null || syncManager === void 0 ? void 0 : syncManager.submitterManager) === null || _b === void 0 ? void 0 : _b.stop(true);\n                    // @ts-ignore, clear method is present in storage for standalone and partial consumer mode\n                    if (events.clear)\n                        events.clear(); // @ts-ignore\n                    if (impressions.clear)\n                        impressions.clear(); // @ts-ignore\n                    if (impressionCounts && impressionCounts.clear)\n                        impressionCounts.clear();\n                }\n            }\n            else {\n                log.info(USER_CONSENT_NOT_UPDATED, [newConsentStatus]);\n            }\n            return true;\n        },\n        getStatus: function () {\n            return settings.userConsent;\n        },\n        Status: ConsentStatus\n    };\n}\n","import { sdkReadinessManagerFactory } from '../readiness/sdkReadinessManager';\nimport { impressionsTrackerFactory } from '../trackers/impressionsTracker';\nimport { eventTrackerFactory } from '../trackers/eventTracker';\nimport { telemetryTrackerFactory } from '../trackers/telemetryTracker';\nimport { validateAndTrackApiKey } from '../utils/inputValidation/apiKey';\nimport { createLoggerAPI } from '../logger/sdkLogger';\nimport { NEW_FACTORY, RETRIEVE_MANAGER } from '../logger/constants';\nimport { SDK_SPLITS_ARRIVED, SDK_SEGMENTS_ARRIVED } from '../readiness/constants';\nimport { objectAssign } from '../utils/lang/objectAssign';\nimport { strategyDebugFactory } from '../trackers/strategy/strategyDebug';\nimport { strategyOptimizedFactory } from '../trackers/strategy/strategyOptimized';\nimport { strategyNoneFactory } from '../trackers/strategy/strategyNone';\nimport { uniqueKeysTrackerFactory } from '../trackers/uniqueKeysTracker';\nimport { NONE, OPTIMIZED } from '../utils/constants';\n/**\n * Modular SDK factory\n */\nexport function sdkFactory(params) {\n    var settings = params.settings, platform = params.platform, storageFactory = params.storageFactory, splitApiFactory = params.splitApiFactory, extraProps = params.extraProps, syncManagerFactory = params.syncManagerFactory, SignalListener = params.SignalListener, impressionsObserverFactory = params.impressionsObserverFactory, integrationsManagerFactory = params.integrationsManagerFactory, sdkManagerFactory = params.sdkManagerFactory, sdkClientMethodFactory = params.sdkClientMethodFactory, filterAdapterFactory = params.filterAdapterFactory;\n    var log = settings.log, impressionsMode = settings.sync.impressionsMode;\n    // @TODO handle non-recoverable errors, such as, global `fetch` not available, invalid SDK Key, etc.\n    // On non-recoverable errors, we should mark the SDK as destroyed and not start synchronization.\n    // We will just log and allow for the SDK to end up throwing an SDK_TIMEOUT event for devs to handle.\n    validateAndTrackApiKey(log, settings.core.authorizationKey);\n    var sdkReadinessManager = sdkReadinessManagerFactory(log, platform.EventEmitter, settings.startup.readyTimeout);\n    var readiness = sdkReadinessManager.readinessManager;\n    var storage = storageFactory({\n        settings: settings,\n        onReadyCb: function (error) {\n            if (error) {\n                // If storage fails to connect, SDK_READY_TIMED_OUT event is emitted immediately. Review when timeout and non-recoverable errors are reworked\n                readiness.timeout();\n                return;\n            }\n            readiness.splits.emit(SDK_SPLITS_ARRIVED);\n            readiness.segments.emit(SDK_SEGMENTS_ARRIVED);\n        },\n    });\n    // @TODO add support for dataloader: `if (params.dataLoader) params.dataLoader(storage);`\n    var telemetryTracker = telemetryTrackerFactory(storage.telemetry, platform.now);\n    var integrationsManager = integrationsManagerFactory && integrationsManagerFactory({ settings: settings, storage: storage, telemetryTracker: telemetryTracker });\n    var observer = impressionsObserverFactory();\n    var uniqueKeysTracker = impressionsMode === NONE ? uniqueKeysTrackerFactory(log, storage.uniqueKeys, filterAdapterFactory && filterAdapterFactory()) : undefined;\n    var strategy;\n    switch (impressionsMode) {\n        case OPTIMIZED:\n            strategy = strategyOptimizedFactory(observer, storage.impressionCounts);\n            break;\n        case NONE:\n            strategy = strategyNoneFactory(storage.impressionCounts, uniqueKeysTracker);\n            break;\n        default:\n            strategy = strategyDebugFactory(observer);\n    }\n    var impressionsTracker = impressionsTrackerFactory(settings, storage.impressions, strategy, integrationsManager, storage.telemetry);\n    var eventTracker = eventTrackerFactory(settings, storage.events, integrationsManager, storage.telemetry);\n    // splitApi is used by SyncManager and Browser signal listener\n    var splitApi = splitApiFactory && splitApiFactory(settings, platform, telemetryTracker);\n    var ctx = { splitApi: splitApi, eventTracker: eventTracker, impressionsTracker: impressionsTracker, telemetryTracker: telemetryTracker, uniqueKeysTracker: uniqueKeysTracker, sdkReadinessManager: sdkReadinessManager, readiness: readiness, settings: settings, storage: storage, platform: platform };\n    var syncManager = syncManagerFactory && syncManagerFactory(ctx);\n    ctx.syncManager = syncManager;\n    var signalListener = SignalListener && new SignalListener(syncManager, settings, storage, splitApi);\n    ctx.signalListener = signalListener;\n    // SDK client and manager\n    var clientMethod = sdkClientMethodFactory(ctx);\n    var managerInstance = sdkManagerFactory(settings, storage.splits, sdkReadinessManager);\n    syncManager && syncManager.start();\n    signalListener && signalListener.start();\n    log.info(NEW_FACTORY);\n    // @ts-ignore\n    return objectAssign({\n        // Split evaluation and event tracking engine\n        client: clientMethod,\n        // Manager API to explore available information\n        manager: function () {\n            log.debug(RETRIEVE_MANAGER);\n            return managerInstance;\n        },\n        // Logger wrapper API\n        Logger: createLoggerAPI(log),\n        settings: settings,\n    }, extraProps && extraProps(ctx));\n}\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { promiseWrapper } from '../utils/promise/wrapper';\nimport { readinessManagerFactory } from './readinessManager';\nimport { SDK_READY, SDK_READY_TIMED_OUT, SDK_READY_FROM_CACHE, SDK_UPDATE } from './constants';\nimport { ERROR_CLIENT_LISTENER, CLIENT_READY_FROM_CACHE, CLIENT_READY, CLIENT_NO_LISTENER } from '../logger/constants';\nvar NEW_LISTENER_EVENT = 'newListener';\nvar REMOVE_LISTENER_EVENT = 'removeListener';\n/**\n * SdkReadinessManager factory, which provides the public status API of SDK clients and manager: ready promise, readiness event emitter and constants (SDK_READY, etc).\n * It also updates logs related warnings and errors.\n *\n * @param readyTimeout time in millis to emit SDK_READY_TIME_OUT event\n * @param readinessManager optional readinessManager to use. only used internally for `shared` method\n */\nexport function sdkReadinessManagerFactory(log, EventEmitter, readyTimeout, readinessManager) {\n    if (readyTimeout === void 0) { readyTimeout = 0; }\n    if (readinessManager === void 0) { readinessManager = readinessManagerFactory(EventEmitter, readyTimeout); }\n    /** Ready callback warning */\n    var internalReadyCbCount = 0;\n    var readyCbCount = 0;\n    readinessManager.gate.on(REMOVE_LISTENER_EVENT, function (event) {\n        if (event === SDK_READY)\n            readyCbCount--;\n    });\n    readinessManager.gate.on(NEW_LISTENER_EVENT, function (event) {\n        if (event === SDK_READY || event === SDK_READY_TIMED_OUT) {\n            if (readinessManager.isReady()) {\n                log.error(ERROR_CLIENT_LISTENER, [event === SDK_READY ? 'SDK_READY' : 'SDK_READY_TIMED_OUT']);\n            }\n            else if (event === SDK_READY) {\n                readyCbCount++;\n            }\n        }\n    });\n    /** Ready promise */\n    var readyPromise = generateReadyPromise();\n    readinessManager.gate.once(SDK_READY_FROM_CACHE, function () {\n        log.info(CLIENT_READY_FROM_CACHE);\n    });\n    // default onRejected handler, that just logs the error, if ready promise doesn't have one.\n    function defaultOnRejected(err) {\n        log.error(err && err.message);\n    }\n    function generateReadyPromise() {\n        var promise = promiseWrapper(new Promise(function (resolve, reject) {\n            readinessManager.gate.once(SDK_READY, function () {\n                log.info(CLIENT_READY);\n                if (readyCbCount === internalReadyCbCount && !promise.hasOnFulfilled())\n                    log.warn(CLIENT_NO_LISTENER);\n                resolve();\n            });\n            readinessManager.gate.once(SDK_READY_TIMED_OUT, function (message) {\n                reject(new Error(message));\n            });\n        }), defaultOnRejected);\n        return promise;\n    }\n    return {\n        readinessManager: readinessManager,\n        shared: function (readyTimeout) {\n            if (readyTimeout === void 0) { readyTimeout = 0; }\n            return sdkReadinessManagerFactory(log, EventEmitter, readyTimeout, readinessManager.shared(readyTimeout));\n        },\n        incInternalReadyCbCount: function () {\n            internalReadyCbCount++;\n        },\n        sdkStatus: objectAssign(\n        // Expose Event Emitter functionality\n        Object.create(readinessManager.gate), {\n            // Expose the event constants without changing the interface\n            Event: {\n                SDK_READY: SDK_READY,\n                SDK_READY_FROM_CACHE: SDK_READY_FROM_CACHE,\n                SDK_UPDATE: SDK_UPDATE,\n                SDK_READY_TIMED_OUT: SDK_READY_TIMED_OUT,\n            },\n            /**\n             * Returns a promise that will be resolved once the SDK has finished loading (SDK_READY event emitted) or rejected if the SDK has timedout (SDK_READY_TIMED_OUT event emitted).\n             * As it's meant to provide similar flexibility to the event approach, given that the SDK might be eventually ready after a timeout event, calling the `ready` method after the\n             * SDK had timed out will return a new promise that should eventually resolve if the SDK gets ready.\n             *\n             * Caveats: the method was designed to avoid an unhandled Promise rejection if the rejection case is not handled, so that `onRejected` handler is optional when using promises.\n             * However, when using async/await syntax, the rejection should be explicitly propagated like in the following example:\n             * ```\n             * try {\n             *   await client.ready().catch((e) => { throw e; });\n             *   // SDK is ready\n             * } catch(e) {\n             *   // SDK has timedout\n             * }\n             * ```\n             *\n             * @function ready\n             * @returns {Promise<void>}\n             */\n            ready: function () {\n                if (readinessManager.hasTimedout()) {\n                    if (!readinessManager.isReady()) {\n                        return promiseWrapper(Promise.reject(new Error('Split SDK has emitted SDK_READY_TIMED_OUT event.')), defaultOnRejected);\n                    }\n                    else {\n                        return Promise.resolve();\n                    }\n                }\n                return readyPromise;\n            },\n            // Expose status for internal purposes only. Not considered part of the public API, and might be updated eventually.\n            __getStatus: function () {\n                return {\n                    isReady: readinessManager.isReady(),\n                    isReadyFromCache: readinessManager.isReadyFromCache(),\n                    isOperational: readinessManager.isOperational(),\n                    hasTimedout: readinessManager.hasTimedout(),\n                    isDestroyed: readinessManager.isDestroyed(),\n                };\n            },\n        })\n    };\n}\n","/**\n * wraps a given promise in a new one with a default onRejected function,\n * that handles the promise rejection if not other onRejected handler is provided.\n *\n * Caveats:\n *  - There are some cases where the `defaultOnRejected` handler is not invoked\n * and the promise rejection must be handled by the user (same as the Promise spec):\n *    - using async/await syntax with a transpiler to Promises\n *    - setting an `onFinally` handler as the first handler (e.g. `promiseWrapper(Promise.reject()).finally(...)`)\n *    - setting more than one handler with at least one of them being an onRejected handler\n *  - If the wrapped promise is rejected when using native async/await syntax, the `defaultOnRejected` handler is invoked\n * and neither the catch block nor the remaining try block are executed.\n *\n * @param customPromise promise to wrap\n * @param defaultOnRejected default onRejected function\n * @returns a promise that doesn't need to be handled for rejection (except when using async/await syntax) and\n * includes a method named `hasOnFulfilled` that returns true if the promise has attached an onFulfilled handler.\n */\nexport function promiseWrapper(customPromise, defaultOnRejected) {\n    var hasOnFulfilled = false;\n    var hasOnRejected = false;\n    function chain(promise) {\n        var newPromise = new Promise(function (res, rej) {\n            return promise.then(res, function (value) {\n                if (hasOnRejected) {\n                    rej(value);\n                }\n                else {\n                    defaultOnRejected(value);\n                }\n            });\n        });\n        var originalThen = newPromise.then;\n        // Using `defineProperty` in case Promise.prototype.then property is not writable\n        Object.defineProperty(newPromise, 'then', {\n            value: function (onfulfilled, onrejected) {\n                var result = originalThen.call(newPromise, onfulfilled, onrejected);\n                if (typeof onfulfilled === 'function')\n                    hasOnFulfilled = true;\n                if (typeof onrejected === 'function') {\n                    hasOnRejected = true;\n                    return result;\n                }\n                else {\n                    return chain(result);\n                }\n            }\n        });\n        return newPromise;\n    }\n    var result = chain(customPromise);\n    result.hasOnFulfilled = function () { return hasOnFulfilled; };\n    return result;\n}\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { SDK_SPLITS_ARRIVED, SDK_SPLITS_CACHE_LOADED, SDK_SEGMENTS_ARRIVED, SDK_READY_TIMED_OUT, SDK_READY_FROM_CACHE, SDK_UPDATE, SDK_READY } from './constants';\nfunction splitsEventEmitterFactory(EventEmitter) {\n    var splitsEventEmitter = objectAssign(new EventEmitter(), {\n        splitsArrived: false,\n        splitsCacheLoaded: false,\n    });\n    // `isSplitKill` condition avoids an edge-case of wrongly emitting SDK_READY if:\n    // - `/mySegments` fetch and SPLIT_KILL occurs before `/splitChanges` fetch, and\n    // - storage has cached splits (for which case `splitsStorage.killLocally` can return true)\n    splitsEventEmitter.on(SDK_SPLITS_ARRIVED, function (isSplitKill) { if (!isSplitKill)\n        splitsEventEmitter.splitsArrived = true; });\n    splitsEventEmitter.once(SDK_SPLITS_CACHE_LOADED, function () { splitsEventEmitter.splitsCacheLoaded = true; });\n    return splitsEventEmitter;\n}\nfunction segmentsEventEmitterFactory(EventEmitter) {\n    var segmentsEventEmitter = objectAssign(new EventEmitter(), {\n        segmentsArrived: false\n    });\n    segmentsEventEmitter.once(SDK_SEGMENTS_ARRIVED, function () { segmentsEventEmitter.segmentsArrived = true; });\n    return segmentsEventEmitter;\n}\n/**\n * Factory of readiness manager, which handles the ready / update event propagation.\n */\nexport function readinessManagerFactory(EventEmitter, readyTimeout, splits) {\n    if (readyTimeout === void 0) { readyTimeout = 0; }\n    if (splits === void 0) { splits = splitsEventEmitterFactory(EventEmitter); }\n    var segments = segmentsEventEmitterFactory(EventEmitter);\n    var gate = new EventEmitter();\n    // emit SDK_READY_FROM_CACHE\n    var isReadyFromCache = false;\n    if (splits.splitsCacheLoaded)\n        isReadyFromCache = true; // ready from cache, but doesn't emit SDK_READY_FROM_CACHE\n    else\n        splits.once(SDK_SPLITS_CACHE_LOADED, checkIsReadyFromCache);\n    // emit SDK_READY_TIMED_OUT\n    var hasTimedout = false;\n    function timeout() {\n        if (hasTimedout)\n            return;\n        hasTimedout = true;\n        gate.emit(SDK_READY_TIMED_OUT, 'Split SDK emitted SDK_READY_TIMED_OUT event.');\n    }\n    var readyTimeoutId;\n    if (readyTimeout > 0) {\n        readyTimeoutId = setTimeout(timeout, readyTimeout);\n    }\n    // emit SDK_READY and SDK_UPDATE\n    var isReady = false;\n    splits.on(SDK_SPLITS_ARRIVED, checkIsReadyOrUpdate);\n    segments.on(SDK_SEGMENTS_ARRIVED, checkIsReadyOrUpdate);\n    var isDestroyed = false;\n    function checkIsReadyFromCache() {\n        isReadyFromCache = true;\n        // Don't emit SDK_READY_FROM_CACHE if SDK_READY has been emitted\n        if (!isReady) {\n            try {\n                gate.emit(SDK_READY_FROM_CACHE);\n            }\n            catch (e) {\n                // throws user callback exceptions in next tick\n                setTimeout(function () { throw e; }, 0);\n            }\n        }\n    }\n    function checkIsReadyOrUpdate(diff) {\n        if (isReady) {\n            try {\n                gate.emit(SDK_UPDATE, diff);\n            }\n            catch (e) {\n                // throws user callback exceptions in next tick\n                setTimeout(function () { throw e; }, 0);\n            }\n        }\n        else {\n            if (splits.splitsArrived && segments.segmentsArrived) {\n                clearTimeout(readyTimeoutId);\n                isReady = true;\n                try {\n                    gate.emit(SDK_READY);\n                }\n                catch (e) {\n                    // throws user callback exceptions in next tick\n                    setTimeout(function () { throw e; }, 0);\n                }\n            }\n        }\n    }\n    var refCount = 1;\n    return {\n        splits: splits,\n        segments: segments,\n        gate: gate,\n        shared: function (readyTimeout) {\n            if (readyTimeout === void 0) { readyTimeout = 0; }\n            refCount++;\n            return readinessManagerFactory(EventEmitter, readyTimeout, splits);\n        },\n        // @TODO review/remove next methods when non-recoverable errors are reworked\n        // Called on consumer mode, when storage fails to connect\n        timeout: timeout,\n        // Called on 403 error (client-side SDK key on server-side), to set the SDK as destroyed for\n        // tracking and evaluations, while keeping event listeners to emit SDK_READY_TIMED_OUT event\n        setDestroyed: function () { isDestroyed = true; },\n        destroy: function () {\n            isDestroyed = true;\n            segments.removeAllListeners();\n            gate.removeAllListeners();\n            clearTimeout(readyTimeoutId);\n            if (refCount > 0)\n                refCount--;\n            if (refCount === 0)\n                splits.removeAllListeners();\n        },\n        isReady: function () { return isReady; },\n        hasTimedout: function () { return hasTimedout; },\n        isReadyFromCache: function () { return isReadyFromCache; },\n        isDestroyed: function () { return isDestroyed; },\n        isOperational: function () { return (isReady || isReadyFromCache) && !isDestroyed; }\n    };\n}\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { thenable } from '../utils/promise/thenable';\nimport { IMPRESSIONS_TRACKER_SUCCESS, ERROR_IMPRESSIONS_TRACKER, ERROR_IMPRESSIONS_LISTENER } from '../logger/constants';\nimport { CONSENT_DECLINED, DEDUPED, QUEUED } from '../utils/constants';\n/**\n * Impressions tracker stores impressions in cache and pass them to the listener and integrations manager if provided.\n *\n * @param impressionsCache cache to save impressions\n * @param metadata runtime metadata (ip, hostname and version)\n * @param impressionListener optional impression listener\n * @param integrationsManager optional integrations manager\n * @param strategy strategy for impressions tracking.\n */\nexport function impressionsTrackerFactory(settings, impressionsCache, strategy, integrationsManager, telemetryCache) {\n    var log = settings.log, impressionListener = settings.impressionListener, _a = settings.runtime, ip = _a.ip, hostname = _a.hostname, version = settings.version;\n    return {\n        track: function (impressions, attributes) {\n            if (settings.userConsent === CONSENT_DECLINED)\n                return;\n            var impressionsCount = impressions.length;\n            var _a = strategy.process(impressions), impressionsToStore = _a.impressionsToStore, impressionsToListener = _a.impressionsToListener, deduped = _a.deduped;\n            var impressionsToListenerCount = impressionsToListener.length;\n            if (impressionsToStore.length > 0) {\n                var res = impressionsCache.track(impressionsToStore);\n                // If we're on an async storage, handle error and log it.\n                if (thenable(res)) {\n                    res.then(function () {\n                        log.info(IMPRESSIONS_TRACKER_SUCCESS, [impressionsCount]);\n                    }).catch(function (err) {\n                        log.error(ERROR_IMPRESSIONS_TRACKER, [impressionsCount, err]);\n                    });\n                }\n                else {\n                    // Record when impressionsCache is sync only (standalone mode)\n                    // @TODO we are not dropping impressions on full queue yet, so DROPPED stats are not recorded\n                    if (telemetryCache) {\n                        telemetryCache.recordImpressionStats(QUEUED, impressionsToStore.length);\n                        telemetryCache.recordImpressionStats(DEDUPED, deduped);\n                    }\n                }\n            }\n            // @TODO next block might be handled by the integration manager. In that case, the metadata object doesn't need to be passed in the constructor\n            if (impressionListener || integrationsManager) {\n                var _loop_1 = function (i) {\n                    var impressionData = {\n                        // copy of impression, to avoid unexpected behaviour if modified by integrations or impressionListener\n                        impression: objectAssign({}, impressionsToListener[i]),\n                        attributes: attributes,\n                        ip: ip,\n                        hostname: hostname,\n                        sdkLanguageVersion: version\n                    };\n                    // Wrap in a timeout because we don't want it to be blocking.\n                    setTimeout(function () {\n                        // integrationsManager.handleImpression does not throw errors\n                        if (integrationsManager)\n                            integrationsManager.handleImpression(impressionData);\n                        try { // @ts-ignore. An exception on the listeners should not break the SDK.\n                            if (impressionListener)\n                                impressionListener.logImpression(impressionData);\n                        }\n                        catch (err) {\n                            log.error(ERROR_IMPRESSIONS_LISTENER, [err]);\n                        }\n                    }, 0);\n                };\n                for (var i = 0; i < impressionsToListenerCount; i++) {\n                    _loop_1(i);\n                }\n            }\n        }\n    };\n}\n","import { objectAssign } from '../utils/lang/objectAssign';\nimport { thenable } from '../utils/promise/thenable';\nimport { EVENTS_TRACKER_SUCCESS, ERROR_EVENTS_TRACKER } from '../logger/constants';\nimport { CONSENT_DECLINED, DROPPED, QUEUED } from '../utils/constants';\nimport { isConsumerMode } from '../utils/settingsValidation/mode';\n/**\n * Event tracker stores events in cache and pass them to the integrations manager if provided.\n *\n * @param eventsCache cache to save events\n * @param integrationsManager optional event handler used for integrations\n */\nexport function eventTrackerFactory(settings, eventsCache, integrationsManager, telemetryCache) {\n    var log = settings.log, mode = settings.mode;\n    var isAsync = isConsumerMode(mode);\n    function queueEventsCallback(eventData, tracked) {\n        var eventTypeId = eventData.eventTypeId, trafficTypeName = eventData.trafficTypeName, key = eventData.key, value = eventData.value, timestamp = eventData.timestamp, properties = eventData.properties;\n        // Logging every prop would be too much.\n        var msg = \"event of type \\\"\" + eventTypeId + \"\\\" for traffic type \\\"\" + trafficTypeName + \"\\\". Key: \" + key + \". Value: \" + value + \". Timestamp: \" + timestamp + \". \" + (properties ? 'With properties.' : 'With no properties.');\n        if (tracked) {\n            log.info(EVENTS_TRACKER_SUCCESS, [msg]);\n            if (integrationsManager) {\n                // Wrap in a timeout because we don't want it to be blocking.\n                setTimeout(function () {\n                    // copy of event, to avoid unexpected behaviour if modified by integrations\n                    var eventDataCopy = objectAssign({}, eventData);\n                    if (properties)\n                        eventDataCopy.properties = objectAssign({}, properties);\n                    // integrationsManager does not throw errors (they are internally handled by each integration module)\n                    integrationsManager.handleEvent(eventDataCopy);\n                }, 0);\n            }\n        }\n        else {\n            log.error(ERROR_EVENTS_TRACKER, [msg]);\n        }\n        return tracked;\n    }\n    return {\n        track: function (eventData, size) {\n            if (settings.userConsent === CONSENT_DECLINED) {\n                return isAsync ? Promise.resolve(false) : false;\n            }\n            var tracked = eventsCache.track(eventData, size);\n            if (thenable(tracked)) {\n                return tracked.then(queueEventsCallback.bind(null, eventData));\n            }\n            else {\n                // Record when eventsCache is sync only (standalone mode)\n                // @TODO we are not dropping events on full queue yet, so `tracked` is always true ATM\n                if (telemetryCache)\n                    telemetryCache.recordEventStats(tracked ? QUEUED : DROPPED, 1);\n                return queueEventsCallback(eventData, tracked);\n            }\n        }\n    };\n}\n","import { EXCEPTION, SDK_NOT_READY } from '../utils/labels';\nimport { timer } from '../utils/timeTracker/timer';\nimport { TOKEN_REFRESH, AUTH_REJECTION } from '../utils/constants';\nexport function telemetryTrackerFactory(telemetryCache, now) {\n    if (telemetryCache && now) {\n        var startTime_1 = timer(now);\n        return {\n            trackEval: function (method) {\n                var evalTime = timer(now);\n                return function (label) {\n                    switch (label) {\n                        case EXCEPTION:\n                            telemetryCache.recordException(method);\n                            return; // Don't track latency on exceptions\n                        case SDK_NOT_READY: // @ts-ignore ITelemetryCacheAsync doesn't implement the method\n                            if (telemetryCache.recordNonReadyUsage)\n                                telemetryCache.recordNonReadyUsage();\n                    }\n                    telemetryCache.recordLatency(method, evalTime());\n                };\n            },\n            trackHttp: function (operation) {\n                var httpTime = timer(now);\n                return function (error) {\n                    telemetryCache.recordHttpLatency(operation, httpTime());\n                    if (error && error.statusCode)\n                        telemetryCache.recordHttpError(operation, error.statusCode);\n                    else\n                        telemetryCache.recordSuccessfulSync(operation, Date.now());\n                };\n            },\n            sessionLength: function () {\n                if (telemetryCache.recordSessionLength)\n                    telemetryCache.recordSessionLength(startTime_1());\n            },\n            streamingEvent: function (e, d) {\n                if (e === AUTH_REJECTION) {\n                    telemetryCache.recordAuthRejections();\n                }\n                else {\n                    telemetryCache.recordStreamingEvents({\n                        e: e,\n                        d: d,\n                        t: Date.now()\n                    });\n                    if (e === TOKEN_REFRESH)\n                        telemetryCache.recordTokenRefreshes();\n                }\n            },\n            addTag: function (tag) {\n                // @ts-ignore\n                if (telemetryCache.addTag)\n                    telemetryCache.addTag(tag);\n            },\n            trackUpdatesFromSSE: function (type) {\n                telemetryCache.recordUpdatesFromSSE(type);\n            }\n        };\n    }\n    else { // If there is not `telemetryCache` or `now` time tracker, return a no-op telemetry tracker\n        var noopTrack = function () { return function () { }; };\n        return {\n            trackEval: noopTrack,\n            trackHttp: noopTrack,\n            sessionLength: function () { },\n            streamingEvent: function () { },\n            addTag: function () { },\n            trackUpdatesFromSSE: function () { },\n        };\n    }\n}\n","import { LogLevels, isLogLevelString } from './index';\nimport { ERROR_LOGLEVEL_INVALID } from './constants';\n/**\n * The public Logger utility API exposed via SplitFactory, used to update the log level.\n *\n * @param log the factory logger instance to handle\n */\nexport function createLoggerAPI(log) {\n    function setLogLevel(logLevel) {\n        if (isLogLevelString(logLevel)) {\n            log.setLogLevel(logLevel);\n        }\n        else {\n            log.error(ERROR_LOGLEVEL_INVALID);\n        }\n    }\n    return {\n        /**\n         * Enables all the logs.\n         */\n        enable: function () {\n            setLogLevel(LogLevels.DEBUG);\n        },\n        /**\n         * Sets a custom log Level for the SDK.\n         * @param {string} logLevel - Custom LogLevel value.\n         */\n        setLogLevel: setLogLevel,\n        /**\n         * Disables all the log levels.\n         */\n        disable: function () {\n            // Disabling is equal logLevel none\n            setLogLevel(LogLevels.NONE);\n        },\n        /**\n         * Exposed for usage with setLogLevel\n         */\n        LogLevel: LogLevels\n    };\n}\n","/**\n * Debug strategy for impressions tracker. Wraps impressions to store and adds previousTime if it corresponds\n *\n * @param impressionsObserver impression observer. Previous time (pt property) is included in impression instances\n * @returns IStrategyResult\n */\nexport function strategyDebugFactory(impressionsObserver) {\n    return {\n        process: function (impressions) {\n            impressions.forEach(function (impression) {\n                // Adds previous time if it is enabled\n                impression.pt = impressionsObserver.testAndSet(impression);\n            });\n            return {\n                impressionsToStore: impressions,\n                impressionsToListener: impressions,\n                deduped: 0\n            };\n        }\n    };\n}\n","import { truncateTimeFrame } from '../../utils/time';\n/**\n * Optimized strategy for impressions tracker. Wraps impressions to store and adds previousTime if it corresponds\n *\n * @param impressionsObserver impression observer. previous time (pt property) is included in impression instances\n * @param impressionsCounter cache to save impressions count. impressions will be deduped (OPTIMIZED mode)\n * @returns IStrategyResult\n */\nexport function strategyOptimizedFactory(impressionsObserver, impressionsCounter) {\n    return {\n        process: function (impressions) {\n            var impressionsToStore = [];\n            impressions.forEach(function (impression) {\n                impression.pt = impressionsObserver.testAndSet(impression);\n                var now = Date.now();\n                // Increments impression counter per featureName\n                if (impression.pt)\n                    impressionsCounter.track(impression.feature, now, 1);\n                // Checks if the impression should be added in queue to be sent\n                if (!impression.pt || impression.pt < truncateTimeFrame(now)) {\n                    impressionsToStore.push(impression);\n                }\n            });\n            return {\n                impressionsToStore: impressionsToStore,\n                impressionsToListener: impressions,\n                deduped: impressions.length - impressionsToStore.length\n            };\n        }\n    };\n}\n","/**\n * None strategy for impressions tracker.\n *\n * @param impressionsCounter cache to save impressions count. impressions will be deduped (OPTIMIZED mode)\n * @param uniqueKeysTracker unique keys tracker in charge of tracking the unique keys per split.\n * @returns IStrategyResult\n */\nexport function strategyNoneFactory(impressionsCounter, uniqueKeysTracker) {\n    return {\n        process: function (impressions) {\n            impressions.forEach(function (impression) {\n                var now = Date.now();\n                // Increments impression counter per featureName\n                impressionsCounter.track(impression.feature, now, 1);\n                // Keep track by unique key\n                uniqueKeysTracker.track(impression.keyName, impression.feature);\n            });\n            return {\n                impressionsToStore: [],\n                impressionsToListener: impressions,\n                deduped: 0\n            };\n        }\n    };\n}\n","import { LOG_PREFIX_UNIQUE_KEYS_TRACKER } from '../logger/constants';\nvar noopFilterAdapter = {\n    add: function () { return true; },\n    contains: function () { return true; },\n    clear: function () { }\n};\n/**\n * Trackes uniques keys\n * Unique Keys Tracker will be in charge of checking if the MTK was already sent to the BE in the last period\n * or schedule to be sent; if not it will be added in an internal cache and sent in the next post.\n *\n * @param log Logger instance\n * @param uniqueKeysCache cache to save unique keys\n * @param filterAdapter filter adapter\n */\nexport function uniqueKeysTrackerFactory(log, uniqueKeysCache, filterAdapter) {\n    if (filterAdapter === void 0) { filterAdapter = noopFilterAdapter; }\n    var intervalId;\n    if (filterAdapter.refreshRate) {\n        intervalId = setInterval(filterAdapter.clear, filterAdapter.refreshRate);\n    }\n    return {\n        track: function (key, featureName) {\n            if (!filterAdapter.add(key, featureName)) {\n                log.debug(LOG_PREFIX_UNIQUE_KEYS_TRACKER + \"The feature \" + featureName + \" and key \" + key + \" exist in the filter\");\n                return;\n            }\n            uniqueKeysCache.track(key, featureName);\n        },\n        stop: function () {\n            clearInterval(intervalId);\n        }\n    };\n}\n","import unfetch from 'unfetch';\nexport function getFetch() {\n    return typeof fetch === 'function' ? fetch : unfetch;\n}\n",null,"export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(request.responseText).then(JSON.parse),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n","export function getEventSource() {\n    return typeof EventSource === 'function' ? EventSource : undefined;\n}\n","// @ts-nocheck\n// Trimmed version of \"events\" library (https://www.npmjs.com/package/events).\n// Removed features:\n// - Max listener leak warning\n// - EventEmitter.prototype.prependListener\n// - EventEmitter.prototype.prependOnceListener\n// - EventEmitter.prototype.listeners\n// - EventEmitter.prototype.rawListeners\n// - EventEmitter.prototype.listenerCount\n// - EventEmitter.prototype.eventNames\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function'\n    ? R.apply\n    : function ReflectApply(target, receiver, args) {\n        return Function.prototype.apply.call(target, receiver, args);\n    };\nexport var EventEmitter = function EventEmitter() {\n    EventEmitter.init.call(this);\n};\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nfunction checkListener(listener) {\n    if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n    }\n}\nEventEmitter.init = function () {\n    if (this._events === undefined ||\n        this._events === Object.getPrototypeOf(this)._events) {\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n    }\n};\nEventEmitter.prototype.emit = function emit(type) {\n    var args = [];\n    for (var i = 1; i < arguments.length; i++)\n        args.push(arguments[i]);\n    var doError = (type === 'error');\n    var events = this._events;\n    if (events !== undefined)\n        doError = (doError && events.error === undefined);\n    else if (!doError)\n        return false;\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n        var er;\n        if (args.length > 0)\n            er = args[0];\n        if (er instanceof Error) {\n            // Note: The comments on the `throw` lines are intentional, they show\n            // up in Node's output if this results in an unhandled exception.\n            throw er; // Unhandled 'error' event\n        }\n        // At least give some kind of context to the user\n        var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n        err.context = er;\n        throw err; // Unhandled 'error' event\n    }\n    var handler = events[type];\n    if (handler === undefined)\n        return false;\n    if (typeof handler === 'function') {\n        ReflectApply(handler, this, args);\n    }\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i_1 = 0; i_1 < len; ++i_1)\n            ReflectApply(listeners[i_1], this, args);\n    }\n    return true;\n};\nfunction _addListener(target, type, listener, prepend) {\n    var events;\n    var existing;\n    checkListener(listener);\n    events = target._events;\n    if (events === undefined) {\n        events = target._events = Object.create(null);\n        target._eventsCount = 0;\n    }\n    else {\n        // To avoid recursion in the case that type === \"newListener\"! Before\n        // adding it to the listeners, first emit \"newListener\".\n        if (events.newListener !== undefined) {\n            target.emit('newListener', type, listener.listener ? listener.listener : listener);\n            // Re-assign `events` because a newListener handler could have caused the\n            // this._events to be assigned to a new object\n            events = target._events;\n        }\n        existing = events[type];\n    }\n    if (existing === undefined) {\n        // Optimize the case of one listener. Don't need the extra array object.\n        existing = events[type] = listener;\n        ++target._eventsCount;\n    }\n    else {\n        if (typeof existing === 'function') {\n            // Adding the second element, need to change to array.\n            existing = events[type] =\n                prepend ? [listener, existing] : [existing, listener];\n            // If we've already got an array, just append.\n        }\n        else if (prepend) {\n            existing.unshift(listener);\n        }\n        else {\n            existing.push(listener);\n        }\n    }\n    return target;\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n    return _addListener(this, type, listener, false);\n};\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\nfunction onceWrapper() {\n    if (!this.fired) {\n        this.target.removeListener(this.type, this.wrapFn);\n        this.fired = true;\n        if (arguments.length === 0)\n            return this.listener.call(this.target);\n        return this.listener.apply(this.target, arguments);\n    }\n}\nfunction _onceWrap(target, type, listener) {\n    var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n    var wrapped = onceWrapper.bind(state);\n    wrapped.listener = listener;\n    state.wrapFn = wrapped;\n    return wrapped;\n}\nEventEmitter.prototype.once = function once(type, listener) {\n    checkListener(listener);\n    this.on(type, _onceWrap(this, type, listener));\n    return this;\n};\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n        var list, events, position, i, originalListener;\n        checkListener(listener);\n        events = this._events;\n        if (events === undefined)\n            return this;\n        list = events[type];\n        if (list === undefined)\n            return this;\n        if (list === listener || list.listener === listener) {\n            if (--this._eventsCount === 0)\n                this._events = Object.create(null);\n            else {\n                delete events[type];\n                if (events.removeListener)\n                    this.emit('removeListener', type, list.listener || listener);\n            }\n        }\n        else if (typeof list !== 'function') {\n            position = -1;\n            for (i = list.length - 1; i >= 0; i--) {\n                if (list[i] === listener || list[i].listener === listener) {\n                    originalListener = list[i].listener;\n                    position = i;\n                    break;\n                }\n            }\n            if (position < 0)\n                return this;\n            if (position === 0)\n                list.shift();\n            else {\n                spliceOne(list, position);\n            }\n            if (list.length === 1)\n                events[type] = list[0];\n            if (events.removeListener !== undefined)\n                this.emit('removeListener', type, originalListener || listener);\n        }\n        return this;\n    };\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n        var listeners, events, i;\n        events = this._events;\n        if (events === undefined)\n            return this;\n        // not listening for removeListener, no need to emit\n        if (events.removeListener === undefined) {\n            if (arguments.length === 0) {\n                this._events = Object.create(null);\n                this._eventsCount = 0;\n            }\n            else if (events[type] !== undefined) {\n                if (--this._eventsCount === 0)\n                    this._events = Object.create(null);\n                else\n                    delete events[type];\n            }\n            return this;\n        }\n        // emit removeListener for all listeners on all events\n        if (arguments.length === 0) {\n            var keys = Object.keys(events);\n            var key;\n            for (i = 0; i < keys.length; ++i) {\n                key = keys[i];\n                if (key === 'removeListener')\n                    continue;\n                this.removeAllListeners(key);\n            }\n            this.removeAllListeners('removeListener');\n            this._events = Object.create(null);\n            this._eventsCount = 0;\n            return this;\n        }\n        listeners = events[type];\n        if (typeof listeners === 'function') {\n            this.removeListener(type, listeners);\n        }\n        else if (listeners !== undefined) {\n            // LIFO order\n            for (i = listeners.length - 1; i >= 0; i--) {\n                this.removeListener(type, listeners[i]);\n            }\n        }\n        return this;\n    };\nfunction arrayClone(arr, n) {\n    var copy = new Array(n);\n    for (var i = 0; i < n; ++i)\n        copy[i] = arr[i];\n    return copy;\n}\nfunction spliceOne(list, index) {\n    for (; index + 1 < list.length; index++)\n        list[index] = list[index + 1];\n    list.pop();\n}\n","// Can be used on any runtime, since it fallbacks to `Date.now` if `performance.now` is not available\nfunction nowFactory() {\n    // eslint-disable-next-line\n    if (typeof performance === 'object' && typeof performance.now === 'function') {\n        // eslint-disable-next-line\n        return performance.now.bind(performance);\n    }\n    else {\n        return Date.now;\n    }\n}\nexport var now = nowFactory();\n"],"names":["url","options","Promise","resolve","reject","request","XMLHttpRequest","keys","all","headers","response","ok","status","statusText","responseURL","text","responseText","json","then","JSON","parse","blob","Blob","clone","entries","get","n","toLowerCase","has","const","i","open","method","onload","getAllResponseHeaders","replace","m","key","value","push","onerror","withCredentials","credentials","setRequestHeader","send","body"],"version":3,"file":"index.5baa4167.js.map","sourceRoot":"/__parcel_source_root/"}