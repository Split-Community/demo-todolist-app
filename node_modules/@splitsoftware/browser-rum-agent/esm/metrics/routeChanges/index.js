import { onRouteChangeTiming } from './onRouteChangeTiming';
/**
 * Calculates route changes for single-page applications (a.k.a client-side routing or in-page navigation),
 * the action of changing the URL and displaying a new view within the page, without a page reload.
 */
export function routeChanges(options) {
    if (options === void 0) { options = {}; }
    return function (ctx) {
        // Adapt onRouteChangeTiming event to Split event format
        function convertToSplitEvent(routeChangeEntry) {
            ctx.track({
                eventTypeId: 'route.change',
                value: routeChangeEntry.duration,
                properties: routeChangeEntry
            });
        }
        return {
            flush: onRouteChangeTiming(convertToSplitEvent, options).flush
        };
    };
}
